{"version":3,"sources":["webpack:///dist/bundle.js","webpack:///webpack/bootstrap 977c8fc42cf23adeb208","webpack:///./src/index.tsx","webpack:///external \"React\"","webpack:///C:/Users/dalci.bagolin/AppData/Roaming/npm/~/mobx/lib/mobx.js","webpack:///./src/ArrayPlus.ts","webpack:///./src/db.ts","webpack:///./src/mapa.tsx","webpack:///./src/store.ts","webpack:///external \"ReactDOM\"","webpack:///./src/basex.tsx"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__extends","this","d","b","__","constructor","hasOwnProperty","prototype","Object","create","React","ReactDom","store_1","mapa_1","basex_1","App","_super","apply","arguments","render","createElement","db","Component","store","document","getElementById","global","autorun","view","scope","assertUnwrapped","invariant","length","bind","reaction","Reaction","name","track","schedule","getDisposer","when","predicate","effect","disposeImmediately","disposer","autorunUntil","deprecated","autorunAsync","func","delay","isScheduled","r","setTimeout","isDisposed","computed","targetOrExpr","keyOrScope","baseDescriptor","options","computedExpr","computedDecorator","expr","_a","getValueModeFromValue","ValueMode","Recursive","mode","value","ComputedValue","Structure","target","key","options_1","assertPropertyConfigurable","descriptor","getter","get","set","configurable","enumerable","setObservableObjectProperty","asObservableObject","undefined","asStructure","throwingComputedValueSetter","defineProperty","Error","createTransformer","transformer","onCleanup","objectCache","resetId","globalState","Transformer","sourceIdentifier","sourceObject","onBecomeUnobserved","lastValue","object","identifier","getMemoizationId","reactiveTransformer","tid","$transformId","getNextId","writable","isComputingDerivation","console","warn","extendObservable","properties","_i","ObservableMap","forEach","propSet","extendObservableHelper","adm","isPropertyConfigurable","allowStateChanges","prev","res","reportTransition","node","state","changed","transitionTracker","emit","getDependencyTree","thing","nodeToDependencyTree","result","observing","dependencies","unique","map","getObserverTree","nodeToObserverTree","observers","createConsoleReporter","extensive","lines","scheduled","line","push","trackTransitions","onReport","SimpleEventEmitter","reporter","on","once","listeners","isObservable","property","ObservableArray","isObservableObject","o","$mobx","values","Atom","observableDecorator","_this","baseValue","initializer","asReference","observable","v","sourceType","Reference","ValueType","getTypeOfValue","Array","PlainObject","makeChildObservable","ComplexObject","ObservableValue","ComplexFunction","ViewFunction","isArray","isPlainObject","observe","propOrCb","cbOrFire","fireImmediately","observeObservableProperty","observeObservable","listener","isObservableArray","isObservableMap","observeObservableObject","propError","_has","_data","toJSON","source","detectCycles","__alreadySeen","cache","i","l","res_1","propagateAtomReady","atom","isDirty","propagateReadiness","derivationStack","checkIfStateModificationsAreAllowed","notifyDependencyStale","derivation","dependencyStaleCount","propagateStaleness","notifyDependencyReady","dependencyDidChange","dependencyChangeCount","onDependenciesReady","trackDerivedFunction","f","hasException","prevObserving","bindDependencies","error","resetGlobalState","quickDiff","added","removed","dependency","findCycle","addObserver","removeObserver","needle","obs","indexOf","mobxGuid","registerGlobals","defaultGlobals","MobXGlobals","onBecomeObserved","idx","splice","reportObserved","inUntracked","deps","depslength","os","slice","staleObservers","concat","valueDidActuallyChange","untracked","action","runReactions","isRunningReactions","inTransaction","allReactions","pendingReactions","iterations","MAX_REACTION_ITERATIONS","toString","remainingReactions","runReaction","transaction","thisArg","changedAtoms","AsReference","AsStructure","asFlat","AsFlat","defaultMode","Flat","getValueModeFromModifierFunc","parentMode","childMode","isExtensible","createObservableArray","message","getArrayLength","setArrayLength","newLength","currentLength","spliceWithArray","updateArrayLength","oldLength","delta","lastKnownLength","OBSERVABLE_ARRAY_BUFFER_SIZE","reserveArrayBuffer","index","deleteCount","newItems","Math","max","min","EMPTY_ARRAY","makeChildReactive","lengthDelta","notifyArraySplice","makeReactiveArrayItem","notifyArrayChildUpdate","oldValue","reportChanged","changeEvent","array","type","deleted","addedCount","createArrayBufferItem","impl","deepEquals","initialValues","fastArray","valueModifier","ObservableObjectMarker","events","propName","defineObservableProperty","isComputed","newValue","callback","check","msg","deprecatedMessages","invoked","list","item","getPrototypeOf","valueDidChange","compareStructural","makeNonEnumerable","props","prop","getOwnPropertyDescriptor","a","aIsArray","keys","current","base","currentIndex","currentSearch","currentExhausted","baseIndex","baseSearch","baseLength","isSearching","baseExhausted","_","extras","noop","reportStale","reportReady","isLazy","isComputing","peek","isComputingComputedValue","prevAllowStateChanges","trackAndCompute","firstTime","prevValue","version","__mobservableTrackingStack","__mobservableViewStack","__mobxGlobal","onInvalidate","_isScheduled","fn","dispose","StubArray","clear","replace","find","fromIndex","items","pop","shift","unshift","reverse","clone","sort","compareFn","remove","toLocaleString","funcName","baseFunc","ObservableMapMarker","initialData","valueModeFunc","_hasMap","_events","_keys","_valueMode","merge","has","isValidKey","_updateHasMapEntry","assertValidKey","entry","entries","other","toJs","join","hasUnreportedChange","childmode","unwrappedValue","subscription","freeze","typeArg","arg","arr","that","flatten","depth","mapperFn","mapperCtx","reduce","accumulator","groupBy","fields","grouped","obj","curr","ret","row","log","cat","group","aggregate","querys","query","data","name_1","first","last","count","field","by","sum","average","total","JSON","stringify","Infinity","flatMap","ctx","take","number","begin","end","includes","searchElement","O","len","parseInt","k","n","currentElement","desc","hosp","part","orig","dest","prag","pragc","exig","proib","leg","link","hospedeiros","nomeVul","nomeSci","Mapa","class","src","width","__decorate","decorators","Reflect","decorate","mobx_1","db_1","Store","listaNomesSci","dados","hospSci","hospVul","prod","estados","estado","UF","filter","split","gender","ReactDOM","Base","ng-hide","style","ng-href","ng-repeat","margin","align","onclick","ng-model"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/B,YACA,IAAIW,GAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAIH,KAAKI,GAAOA,EAAEG,eAAeP,KAAIG,EAAEH,GAAKI,EAAEJ,GAEnDG,GAAEK,UAAkB,OAANJ,EAAaK,OAAOC,OAAON,IAAMC,EAAGG,UAAYJ,EAAEI,UAAW,GAAIH,KElDxEM,EAAKrB,EAAM,GACXsB,EAAQtB,EAAM,GAC1BuB,EAAAvB,EAAkB,GAClBwB,EAAAxB,EAAiB,GACjByB,EAAAzB,EAAiB,GAGjB0B,EAAA,SAAAC,GAAA,QAAAD,KAAkBC,EAAAC,MAAAhB,KAAAiB,WASlB,MATkBlB,GAAAe,EAAAC,GAChBD,EAAAR,UAAAY,OAAA,WACE,MACGT,GAAAU,cAAA,OAAK1B,GAAG,aACLgB,EAAAU,cAACP,aAAI,MACLH,EAAAU,cAACN,cAAKO,GAAIT,iBAIpBG,GATkBL,EAAMY,UAYxBX,GAASQ,OAAOT,EAAAU,cAACL,GAAIQ,MAAOX,eAAUY,SAASC,eAAe,SFuDxD,SAAShC,EAAQD,GG1EvBC,EAAAD,QAAAkB,OHgFM,SAASjB,EAAQD,IIhFvB,SAAAkC,GAAA,YAmBA,SAAAC,GAAAC,EAAAC,GACAC,GAAAF,EAAA,yCACAG,GAAA,kBAAAH,GAAA,8BACAG,GAAA,IAAAH,EAAAI,OAAA,gDACAH,IACAD,IAAAK,KAAAJ,GACA,IAAAK,GAAA,GAAAC,IAAAP,EAAAQ,MAAA,qBACAnC,KAAAoC,MAAAT,IAGA,OADAM,GAAAI,WACAJ,EAAAK,cAGA,QAAAC,GAAAC,EAAAC,EAAAb,GACA,GAAAc,IAAA,EACAC,EAAAjB,EAAA,WACAc,EAAA7C,KAAAiC,KACAe,EACAA,IAEAD,GAAA,EACAD,EAAA9C,KAAAiC,KAKA,OAFAc,IACAC,IACAA,EAGA,QAAAC,GAAAJ,EAAAC,EAAAb,GAEA,MADAiB,IAAA,oDACAN,EAAAvB,MAAA,KAAAC,WAGA,QAAA6B,GAAAC,EAAAC,EAAApB,GACA,SAAAoB,IAA2BA,EAAA,GAC3BpB,IACAmB,IAAAf,KAAAJ,GACA,IAAAqB,IAAA,EACAC,EAAA,GAAAhB,IAAAa,EAAAZ,MAAA,0BACAc,IACAA,GAAA,EACAE,WAAA,WACAF,GAAA,EACAC,EAAAE,YACAF,EAAAd,MAAAW,IACaC,KAIb,OADAE,GAAAb,WACAa,EAAAZ,cAGA,QAAAe,GAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAxC,WAAAc,OAAA,qBAAAuB,GACAI,EAAAJ,EAAAC,GACAI,EAAA3C,MAAA,KAAAC,WAGA,QAAAyC,GAAAE,EAAAhC,GACA,GAAAiC,GAAAC,EAAAF,EAAAG,GAAAC,WAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,EACA,WAAAM,IAAAD,EAAAtC,EAAAqC,IAAAF,GAAAK,UAAAF,EAAA/B,MAAA,iBAEA,QAAAwB,GAAAU,EAAAC,EAAAd,EAAAC,GACA,OAAAxC,UAAAc,OAAA,CACA,GAAAwC,GAAAF,CACA,iBAAAA,EAAAC,EAAAd,GAAuD,MAAAG,GAAAhE,KAAA,KAAA0E,EAAAC,EAAAd,EAAAe,IAEvDzC,GAAA0B,KAAAnD,eAAA,0GACAmE,GAAAH,EAAAC,EACA,IAAAG,MACAC,EAAAlB,EAAAmB,GAYA,OAXA7C,IAAA,gBAAAuC,GAAA,wDAAAC,GACAxC,GAAA,kBAAA4C,GAAA,+DAAAJ,GACAxC,IAAA0B,EAAAoB,IAAA,+CAAAN,GACAxC,GAAA,IAAA4C,EAAA3C,OAAA,0DAAAuC,GACAG,EAAAI,cAAA,EACAJ,EAAAK,YAAA,EACAL,EAAAE,IAAA,WAEA,MADAI,IAAAC,GAAAhF,KAAAiF,OAAAlB,GAAAC,WAAAM,EAAAb,KAAAyB,eAAA,EAAAA,EAAAR,MACA1E,KAAAsE,IAEAG,EAAAG,IAAAO,EACA3B,EAIAiB,MAHAlE,QAAA6E,eAAAf,EAAAC,EAAAG,GAMA,QAAAU,KACA,SAAAE,OAAA,kFAEA,QAAAC,GAAAC,EAAAC,GACA1D,GAAA,kBAAAyD,IAAA,IAAAA,EAAAxD,OAAA,iEACA,IAAA0D,MACAC,EAAAC,GAAAD,QACAE,EAAA,SAAA7E,GAEA,QAAA6E,GAAAC,EAAAC,GACA/E,EAAApB,KAAAK,KAAA,WAA2C,MAAAuF,GAAAO,IAAoC,uBAAAP,EAAApD,KAAA,IAAA0D,GAC/E7F,KAAA6F,mBACA7F,KAAA8F,eASA,MAbA/F,IAAA6F,EAAA7E,GAMA6E,EAAAtF,UAAAyF,mBAAA,WACA,GAAAC,GAAAhG,KAAAkE,KACAnD,GAAAT,UAAAyF,mBAAApG,KAAAK,YACAyF,GAAAzF,KAAA6F,kBACAL,GACAA,EAAAQ,EAAAhG,KAAA8F,eAEAF,GACKzB,GACL,iBAAA8B,GACAP,IAAAC,GAAAD,UACAD,KACAC,EAAAC,GAAAD,QAEA,IAAAQ,GAAAC,EAAAF,GACAG,EAAAX,EAAAS,EACA,OAAAE,GACAA,EAAAzB,OACAyB,EAAAX,EAAAS,GAAA,GAAAN,GAAAM,EAAAD,GACAG,EAAAzB,QAIA,QAAAwB,GAAAF,GACA,UAAAA,GAAA,gBAAAA,GACA,SAAAZ,OAAA,uDAAAY,EACA,IAAAI,GAAAJ,EAAAK,YAUA,OATArB,UAAAoB,IACAA,EAAAE,IACAhG,OAAA6E,eAAAa,EAAA,gBACApB,cAAA,EACA2B,UAAA,EACA1B,YAAA,EACAZ,MAAAmC,KAGAA,EAEA,QAAAzC,KAAAhC,GAGA,MAFA6E,MACAC,QAAAC,KAAA,2EACAtD,EAAAO,EAAAhC,GAAA+C,MAGA,QAAAiC,GAAAvC,GAEA,OADAwC,MACAC,EAAA,EAAoBA,EAAA7F,UAAAc,OAAuB+E,IAC3CD,EAAAC,EAAA,GAAA7F,UAAA6F,EASA,OAPAhF,IAAAb,UAAAc,QAAA,mDACAD,GAAA,gBAAAuC,GAAA,wDACAvC,KAAAuC,YAAA0C,KAAA,sEACAF,EAAAG,QAAA,SAAAC,GACAnF,GAAA,gBAAAmF,GAAA,uDACAC,EAAA7C,EAAA4C,EAAAlD,GAAAC,UAAA,QAEAK,EAGA,QAAA6C,GAAA7C,EAAAwC,EAAA5C,EAAA9B,GACA,GAAAgF,GAAAnC,GAAAX,EAAAlC,EAAA8B,EACA,QAAAK,KAAAuC,GACA,GAAAA,EAAAxG,eAAAiE,GAAA,CACA,GAAAD,IAAAwC,IAAAO,GAAA/C,EAAAC,GACA,QACAS,IAAAoC,EAAA7C,EAAAuC,EAAAvC,IAEA,MAAAD,GAEA,QAAAgD,KAAAtE,GACA,GAAAuE,GAAA3B,GAAA0B,iBACA1B,IAAA0B,mBACA,IAAAE,GAAAxE,GAEA,OADA4C,IAAA0B,kBAAAC,EACAC,EAGA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,SAAAA,IAA6BA,GAAA,GAC7BC,IACAA,GAAAC,MACApI,GAAAgI,EAAAhI,GACA0C,KAAAsF,EAAAtF,KAAA,IAAAsF,EAAAhI,GACAgI,OAAAC,QAAAC,YAGA,QAAAG,GAAAC,GACA,MAAAC,GAAAD,GAEA,QAAAC,GAAAP,GACA,GAAAQ,IACAxI,GAAAgI,EAAAhI,GACA0C,KAAAsF,EAAAtF,KAAA,IAAAsF,EAAAhI,GAIA,OAFAgI,GAAAS,WAAAT,EAAAS,UAAAnG,SACAkG,EAAAE,aAAAC,GAAAX,EAAAS,WAAAG,IAAAL,IACAC,EAEA,QAAAK,GAAAP,GACA,MAAAQ,GAAAR,GAEA,QAAAQ,GAAAd,GACA,GAAAQ,IACAxI,GAAAgI,EAAAhI,GACA0C,KAAAsF,EAAAtF,KAAA,IAAAsF,EAAAhI,GAIA,OAFAgI,GAAAe,WAAAf,EAAAe,UAAAzG,SACAkG,EAAAO,UAAAJ,GAAAX,EAAAe,WAAAH,IAAAE,IACAN,EAEA,QAAAQ,GAAAC,GACA,GAAAC,MACAC,GAAA,CACA,iBAAAC,IACAH,GAAAG,EAAAlB,UACAgB,EAAAG,KAAAD,GACAD,IACAA,GAAA,EACAzF,WAAA,WACAuD,gBAAA,qBAAAiC,GACAA,KACAC,GAAA,GACa,KAIb,QAAAG,GAAAL,EAAAM,GACA,SAAAN,IAA+BA,GAAA,GAC/Bd,KACAA,GAAA,GAAAqB,IACA,IAAAC,GAAAF,EACA,SAAAH,IACAH,GAAAG,EAAAlB,UACAqB,EAAAH,IAEAJ,EAAAC,GACA/F,EAAAiF,GAAAuB,GAAAD,EACA,OAAAE,IAAA,WACAzG,IACA,IAAAiF,GAAAyB,UAAAtH,SACA6F,GAAA,QAGA,QAAA0B,GAAApF,EAAAqF,GACA,UAAArF,GAAAe,SAAAf,EACA,QACA,IAAAe,SAAAsE,EAAA,CACA,GAAArF,YAAA6C,KAAA7C,YAAAsF,IACA,SAAAnE,OAAA,oIACA,IAAAoE,GAAAvF,GAAA,CACA,GAAAwF,GAAAxF,EAAAyF,KACA,OAAAD,GAAAE,UAAAF,EAAAE,OAAAL,GAEA,SAEA,QAAArF,EAAAyF,OAAAzF,YAAA2F,KAAA3F,YAAAhC,KAAAgC,YAAAC,IAGA,QAAA2F,GAAAzF,EAAAC,EAAAd,GAGA,GAFA1B,GAAAb,UAAAc,QAAA,GAAAd,UAAAc,QAAA,6BAAAuC,GACAE,GAAAH,EAAAC,GACAd,KAAAnD,eAAA,OAEA,MADAwC,IAAA,8EACAQ,EAAArC,MAAA,KAAAC,UAEA,IAAAwD,KAoBA,OAnBA3C,IAAA,gBAAAuC,GAAA,wDAAAC,GACAG,EAAAI,cAAA,EACAJ,EAAAK,YAAA,EACAL,EAAAE,IAAA,WACA,GAAAoF,GAAA/J,KACAgK,EAAA/E,MASA,OARAzB,MAAAyG,cACAD,EAAAxG,EAAAyG,cACA,kBAAAD,KACAA,EAAAE,EAAAF,KAEA3C,GAAA,aACAtC,GAAAC,GAAA+E,EAAA9E,OAAAlB,GAAAC,WAAAM,EAAA0F,KAEAhK,KAAAsE,IAEAG,EAAAG,IAAA,SAAAV,GACAa,GAAAC,GAAAhF,KAAAiF,OAAAlB,GAAAC,WAAAM,EAAA,kBAAAJ,GAAAgG,EAAAhG,OAEAV,EAIAiB,MAHAlE,QAAA6E,eAAAf,EAAAC,EAAAG,GAMA,QAAA0F,GAAAC,EAAA7G,GACA,mBAAAtC,WAAA,GACA,MAAA6I,GAAA9I,MAAA,KAAAC,UAEA,IADAa,GAAA,IAAAb,UAAAc,QAAA,IAAAd,UAAAc,OAAA,2CACAuH,EAAAc,GACA,MAAAA,EACA,IAAAvG,GAAAC,EAAAsG,EAAArG,GAAAC,WAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GACAwG,EAAApG,IAAAF,GAAAuG,UAAAC,GAAAD,UAAAE,EAAAtG,EACA,QAAAmG,GACA,IAAAE,IAAAE,MACA,IAAAF,IAAAG,YACA,MAAAC,IAAAzG,EAAAD,EACA,KAAAsG,IAAAD,UACA,IAAAC,IAAAK,cACA,UAAAC,IAAA3G,EAAAD,EACA,KAAAsG,IAAAO,gBACA,SAAAzF,OAAA,6KACA,KAAAkF,IAAAQ,aAEA,MADAlI,IAAA,sDACAQ,EAAA+G,EAAA7G,GAEAzB,IAAA,mBAYA,QAAA0I,GAAAtG,GACA,cAAAA,GAAAe,SAAAf,EACAqG,GAAAD,UACA,kBAAApG,GACAA,EAAAnC,OAAAwI,GAAAO,gBAAAP,GAAAQ,aACAN,MAAAO,QAAA9G,gBAAAsF,IACAe,GAAAE,MACA,gBAAAvG,GACA+G,GAAA/G,GAAAqG,GAAAG,YAAAH,GAAAK,cACAL,GAAAD,UAEA,QAAAY,GAAAnD,EAAAoD,EAAAC,EAAAC,GACA,wBAAAD,GACAE,EAAAvD,EAAAoD,EAAAC,EAAAC,GAEAE,EAAAxD,EAAAoD,EAAAC,GAGA,QAAAG,GAAAxD,EAAAyD,EAAAH,GACA,MAAAI,IAAA1D,GACAA,EAAAmD,QAAAM,GACAE,GAAA3D,GACAA,EAAAmD,QAAAM,GACA/B,GAAA1B,GACA4D,GAAA5D,EAAAyD,EAAAH,GACAtD,YAAA8C,KAAA9C,YAAA5D,IACA4D,EAAAmD,QAAAM,EAAAH,GACAJ,GAAAlD,GACAwD,EAAApB,EAAApC,GAAAyD,EAAAH,OACAvJ,KAAA,+EAEA,QAAAwJ,GAAAvD,EAAAwB,EAAAiC,EAAAH,GACA,GAAAO,GAAA,oEAAArC,CACA,IAAAmC,GAAA3D,GAAA,CACA,IAAAA,EAAA8D,KAAAtC,GACA,SAAAlE,OAAAuG,EACA,OAAAV,GAAAnD,EAAA+D,MAAAvC,GAAAiC,GAEA,GAAA/B,GAAA1B,GAAA,CACA,IAAAuB,EAAAvB,EAAAwB,GACA,SAAAlE,OAAAuG,EACA,OAAAV,GAAAnD,EAAA4B,MAAAC,OAAAL,GAAAiC,EAAAH,GAEA,MAAAJ,IAAAlD,IACAnB,EAAAmB,GACAwB,SAAAxB,EAAAwB,KAEA+B,EAAAvD,EAAAwB,EAAAiC,EAAAH,QAEAvJ,KAAA,4GAEA,QAAAiK,GAAAC,EAAAC,EAAAC,GAGA,QAAAC,GAAAjI,GAGA,MAFA+H,IACAC,EAAApD,MAAAkD,EAAA9H,IACAA,EAIA,GATA,SAAA+H,IAAkCA,GAAA,GAClC,SAAAC,IAAmCA,EAAA,MAMnCD,GAAA,OAAAC,IACAA,MACAD,GAAA,OAAAD,GAAA,gBAAAA,GACA,OAAAI,GAAA,EAAAC,EAAAH,EAAAnK,OAAiDsK,EAAAD,EAAOA,IACxD,GAAAF,EAAAE,GAAA,KAAAJ,EACA,MAAAE,GAAAE,GAAA,EAEA,KAAAJ,EACA,MAAAA,EACA,IAAAvB,MAAAO,QAAAgB,gBAAAxC,IAAA,CACA,GAAAjC,GAAA4E,KAEA,OADA5E,GAAAuB,KAAA9H,MAAAuG,EAAAyE,EAAA3D,IAAA,SAAAnE,GAAyD,MAAA6H,GAAA7H,EAAA+H,EAAAC,MACzD3E,EAEA,GAAAyE,YAAAjF,IAAA,CACA,GAAAuF,GAAAH,KAEA,OADAH,GAAAhF,QAAA,SAAA9C,EAAAI,GAA8C,MAAAgI,GAAAhI,GAAAyH,EAAA7H,EAAA+H,EAAAC,KAC9CI,EAEA,mBAAAN,IAAAf,GAAAe,GAAA,CACA,GAAAzE,GAAA4E,KACA,QAAA7H,KAAA0H,GACAA,EAAA3L,eAAAiE,KACAiD,EAAAjD,GAAAyH,EAAAC,EAAA1H,GAAA2H,EAAAC,GACA,OAAA3E,GAEA,MAAA+B,GAAA0C,MAAArC,gBAAAkB,IACAkB,EAAAC,IAAAC,EAAAC,GACAF,EAGA,QAAAO,GAAAC,GACA1K,GAAA0K,EAAAC,QAAA,kBACAD,EAAAC,SAAA,EACAjF,EAAAgF,EAAA,YACAE,EAAAF,GAAA,GAsIA,QAAA/F,KACA,MAAAd,IAAAgH,gBAAA5K,OAAA,EAEA,QAAA6K,KACA9K,GAAA6D,GAAA0B,kBAAA,yNAEA,QAAAwF,GAAAC,GACA,MAAAA,EAAAC,uBACAvF,EAAAsF,EAAA,SACAE,EAAAF,IAGA,QAAAG,GAAAH,EAAAI,GAIA,GAHApL,GAAAgL,EAAAC,qBAAA,mCACAG,IACAJ,EAAAK,uBAAA,GACA,MAAAL,EAAAC,qBACA,GAAAD,EAAAK,sBAAA,GACAL,EAAAK,sBAAA,EACA3F,EAAAsF,EAAA,UACA,IAAAnF,GAAAmF,EAAAM,qBACAV,GAAAI,EAAAnF,OAGAH,GAAAsF,EAAA,YACAJ,EAAAI,GAAA,GAIA,QAAAO,GAAAP,EAAAQ,GACA,GAAAC,IAAA,EACAC,EAAAV,EAAA5E,SACA4E,GAAA5E,aACAvC,GAAAgH,gBAAA7D,KAAAgE,EACA,KACA,GAAA7E,GAAAqF,GAGA,OAFAC,IAAA,EACAE,EAAAX,EAAAU,GACAvF,EAEA,QACAsF,IACA7G,QAAAgH,MAAA,8PAEA,8FAAAZ,EAAA3K,KAAA,IAAA2K,EAAArN,GAAA,MACAkO,MAIA,QAAAF,GAAAX,EAAAU,GACA7H,GAAAgH,gBAAA5K,QAAA,CAEA,QADA8B,GAAA+J,GAAAd,EAAA5E,UAAAsF,GAAAK,EAAAhK,EAAA,GAAAiK,EAAAjK,EAAA,GACAuI,EAAA,EAAAC,EAAAwB,EAAA9L,OAAqCsK,EAAAD,EAAOA,IAAA,CAC5C,GAAA2B,GAAAF,EAAAzB,EACAtK,KAAAkM,EAAAlB,EAAAiB,GAAA,iBAAAjB,GACAmB,EAAAJ,EAAAzB,GAAAU,GAEA,OAAAV,GAAA,EAAAC,EAAAyB,EAAA/L,OAAuCsK,EAAAD,EAAOA,IAC9C8B,EAAAJ,EAAA1B,GAAAU,GAEA,QAAAkB,GAAAG,EAAA1G,GACA,GAAA2G,GAAA3G,EAAAS,SACA,IAAAjD,SAAAmJ,EACA,QACA,SAAAA,EAAAC,QAAA5G,GACA,QACA,QAAA4E,GAAA+B,EAAArM,OAAAqK,EAAA,EAAmCC,EAAAD,EAAOA,IAC1C,GAAA4B,EAAAG,EAAAC,EAAAhC,IACA,QACA,UA2BA,QAAA7F,KACA,QAAAZ,GAAA2I,SAEA,QAAAC,MAEA,QAAAZ,KACAhI,GAAAD,SACA,IAAA8I,GAAA,GAAAC,GACA,QAAAnK,KAAAkK,GACA,aAAAlK,GAAA,YAAAA,IACAqB,GAAArB,GAAAkK,EAAAlK,IAEA,QAAA2J,GAAA9D,EAAA1C,GACA,GAAA2G,GAAAjE,EAAA3B,UAAA6D,EAAA+B,EAAArM,MACAqM,GAAA/B,GAAA5E,EACA,IAAA4E,GACAlC,EAAAuE,mBAEA,QAAAR,GAAA/D,EAAA1C,GACA,GAAA2G,GAAAjE,EAAA3B,UAAAmG,EAAAP,EAAAC,QAAA5G,EACA,MAAAkH,GACAP,EAAAQ,OAAAD,EAAA,GACA,IAAAP,EAAArM,QACAoI,EAAApE,qBAEA,QAAA8I,GAAA1E,GACA,KAAAxE,GAAAmJ,YAAA,IAEA,GAAAnC,GAAAhH,GAAAgH,gBACAN,EAAAM,EAAA5K,MACA,IAAAsK,EAAA,GACA,GAAA0C,GAAApC,EAAAN,EAAA,GAAAnE,UAAA8G,EAAAD,EAAAhN,MACAgN,GAAAC,EAAA,KAAA7E,GAAA4E,EAAAC,EAAA,KAAA7E,IACA4E,EAAAC,GAAA7E,KAGA,QAAA6C,GAAA7C,GACA,GAAA8E,GAAA9E,EAAA3B,UAAA0G,OACAD,GAAAjI,QAAA6F,GACA1C,EAAAgF,eAAAhF,EAAAgF,eAAAC,OAAAH,GAEA,QAAAvC,GAAAvC,EAAAkF,GACAlF,EAAAgF,eAAAP,OAAA,GAAA5H,QAAA,SAAA0C,GAA8D,MAAAuD,GAAAvD,EAAA2F,KAE9D,QAAAC,GAAAC,GACA1M,GAAA,8KACA8C,GAAAmJ,aACA,IAAAvH,GAAAgI,GAEA,OADA5J,IAAAmJ,cACAvH,EAiEA,QAAAiI,KACA,KAAA7J,GAAA8J,sBAAA,GAAA9J,GAAA+J,cAAA,IAEA/J,GAAA8J,oBAAA,CAGA,KAFA,GAAAE,GAAAhK,GAAAiK,iBACAC,EAAA,EACAF,EAAA5N,OAAA,IACA,KAAA8N,IAAAC,GACA,SAAAzK,OAAA,oGAAAsK,EAAA,GAAAI,WAEA,QADAC,GAAAL,EAAAf,OAAA,GACAxC,EAAA,EAAAC,EAAA2D,EAAAjO,OAAsDsK,EAAAD,EAAOA,IAC7D4D,EAAA5D,GAAA6D,cAEAtK,GAAA8J,oBAAA,GAEA,QAAAS,GAAAX,EAAAY,GACAxK,GAAA+J,eAAA,CACA,IAAAnI,GAAAgI,EAAA5P,KAAAwQ,EACA,UAAAxK,GAAA+J,cAAA,CAEA,OADA9F,GAAAjE,GAAAyK,aAAAxB,OAAA,GACAxC,EAAA,EAAAC,EAAAzC,EAAA7H,OAA0CsK,EAAAD,EAAOA,IACjDG,EAAA3C,EAAAwC,GACAoD,KAEA,MAAAjI,GAUA,QAAA2C,GAAAhG,GACA,UAAAmM,IAAAnM,GAGA,QAAAgB,GAAAhB,GACA,UAAAoM,IAAApM,GAGA,QAAAqM,GAAArM,GACA,UAAAsM,IAAAtM,GAwBA,QAAAJ,GAAAI,EAAAuM,GACA,MAAAvM,aAAAmM,KACAtM,GAAAuG,UAAApG,SACAA,YAAAoM,KACAvM,GAAAK,UAAAF,SACAA,YAAAsM,KACAzM,GAAA2M,KAAAxM,UACAuM,EAAAvM,GAEA,QAAAyM,IAAA5N,GACA,MAAAA,KAAAmH,EACAnG,GAAAuG,UACAvH,IAAAmC,EACAnB,GAAAK,UACArB,IAAAwN,EACAxM,GAAA2M,MACA5O,GAAAmD,SAAAlC,EAAA,mIAAAA,GACAgB,GAAAC,WAEA,QAAA2G,IAAAzG,EAAA0M,EAAAzO,GACA,GAAA0O,EACA,IAAAvH,EAAApF,GACA,MAAAA,EACA,QAAA0M,GACA,IAAA7M,IAAAuG,UACA,MAAApG,EACA,KAAAH,IAAA2M,KACA7O,GAAAqC,EAAA,+CACA2M,EAAA9M,GAAAuG,SACA,MACA,KAAAvG,IAAAK,UACAvC,GAAAqC,EAAA,oDACA2M,EAAA9M,GAAAK,SACA,MACA,KAAAL,IAAAC,UACAH,EAAAC,EAAAI,EAAAH,GAAAC,WAAA6M,EAAAhN,EAAA,GAAAK,EAAAL,EAAA,EACA,MACA,SACA/B,IAAA,mBAEA,MAAA2I,OAAAO,QAAA9G,IAAA3D,OAAAuQ,aAAA5M,GACA6M,GAAA7M,EAAA2M,EAAA1O,GACA8I,GAAA/G,IAAA3D,OAAAuQ,aAAA5M,GACAgD,EAAAhD,IAAA2M,EAAA1O,GACA+B,CACA,IAAAL,GAEA,QAAAhC,IAAAqC,EAAA8M,GACA,GAAA9M,YAAAmM,KAAAnM,YAAAoM,KAAApM,YAAAsM,IACA,SAAAnL,OAAA,kEAAA2L,GASA,QAAAC,IAAA9J,GAEA,MADAA,GAAAqF,KAAAqC,iBACA1H,EAAAyC,OAAA7H,OAEA,QAAAmP,IAAA/J,EAAAgK,GACA,mBAAAA,IAAA,EAAAA,EACA,SAAA9L,OAAA,8BAAA8L,EACA,IAAAC,GAAAjK,EAAAyC,OAAA7H,MACAoP,KAAAC,IAEAD,EAAAC,EACAC,GAAAlK,EAAAiK,EAAA,KAAA3G,OAAA0G,EAAAC,IAEAC,GAAAlK,EAAAgK,EAAAC,EAAAD,IAEA,QAAAG,IAAAnK,EAAAoK,EAAAC,GACA,GAAAD,IAAApK,EAAAsK,gBACA,SAAApM,OAAA,6HACAuH,KACAzF,EAAAsK,iBAAAD,EACAA,EAAA,GAAAD,EAAAC,EAAAE,IACAC,GAAAJ,EAAAC,GAEA,QAAAH,IAAAlK,EAAAyK,EAAAC,EAAAC,GACA,GAAA/P,GAAAoF,EAAAyC,OAAA7H,MACA,MAAAkD,SAAA6M,GAAA,IAAAA,EAAA/P,QAAA,IAAA8P,GAAA,IAAA9P,GACA,QACAkD,UAAA2M,EACAA,EAAA,EACAA,EAAA7P,EACA6P,EAAA7P,EACA,EAAA6P,IACAA,EAAAG,KAAAC,IAAA,EAAAjQ,EAAA6P,IAEAC,EADA,IAAA5Q,UAAAc,OACAA,EAAA6P,EACA3M,SAAA4M,GAAA,OAAAA,EACA,EAEAE,KAAAC,IAAA,EAAAD,KAAAE,IAAAJ,EAAA9P,EAAA6P,IAEAE,EADA7M,SAAA6M,EACAI,GAEAJ,EAAAzJ,IAAAlB,EAAAgL,kBACA,IAAAC,GAAAN,EAAA/P,OAAA8P,CACAP,IAAAnK,EAAApF,EAAAqQ,EACA,IAAA7K,IAAA1D,EAAAsD,EAAAyC,QAAAgF,OAAA5N,MAAA6C,GAAA+N,EAAAC,GAAAzC,OAAA0C,GAEA,OADAO,IAAAlL,EAAAyK,EAAArK,EAAAuK,GACAvK,CACA,IAAA1D,GAEA,QAAAyO,IAAApO,GAEA,MADArC,IAAAqC,EAAA,sCACAlE,KAAAiE,OAAAF,GAAA2M,MAAA1Q,KAAAiE,OAAAF,GAAAuG,UACApG,EACAyG,GAAAzG,EAAAlE,KAAAiE,KAAAjE,KAAAwM,KAAArK,KAAA,IAAAnC,KAAAwM,KAAA/M,GAAA,iBAEA,QAAA8S,IAAApL,EAAAyK,EAAAY,GACArL,EAAAqF,KAAAiG,gBACAtL,EAAAuL,aACAvL,EAAAuL,YAAA7K,MAA8B5B,OAAAkB,EAAAwL,MAAAC,KAAA,SAAAhB,QAAAY,aAE9B,QAAAH,IAAAlL,EAAAyK,EAAAiB,EAAAhF,GACA,IAAAgF,EAAA9Q,QAAA,IAAA8L,EAAA9L,SAEAoF,EAAAqF,KAAAiG,gBACAtL,EAAAuL,aACAvL,EAAAuL,YAAA7K,MAA8B5B,OAAAkB,EAAAwL,MAAAC,KAAA,SAAAhB,QAAAkB,WAAAjF,EAAA9L,OAAA+L,QAAA+E,KA8K9B,QAAAE,IAAAnB,GACArR,OAAA6E,eAAAoE,GAAAlJ,UAAA,GAAAsR,GACA9M,YAAA,EACAD,cAAA,EACAD,IAAA,SAAAV,GACA,GAAA8O,GAAAhT,KAAA2J,MACAC,EAAAoJ,EAAApJ,MAEA,IADA/H,GAAAqC,EAAA,4GACA0N,EAAAhI,EAAA7H,OAAA,CACA6K,GACA,IAAA4F,GAAA5I,EAAAgI,GACAjK,EAAAqL,EAAA/O,OAAAF,GAAAK,WAAA6O,GAAAT,EAAAtO,GAAAsO,IAAAtO,CACAyD,KACAiC,EAAAgI,GAAAoB,EAAAb,kBAAAjO,GACAqO,GAAAS,EAAApB,EAAAY,QAGA,IAAAZ,IAAAhI,EAAA7H,OAGA,SAAAsD,OAAA,qCAAAuM,EAAA,mBAAAhI,EAAA7H,OAFAsP,IAAA2B,EAAApB,EAAA,GAAA1N,MAIAS,IAAA,WACA,GAAAqO,GAAAhT,KAAA2J,KACA,OAAAqJ,IAAApB,EAAAoB,EAAApJ,OAAA7H,QACAiR,EAAAxG,KAAAqC,iBACAmE,EAAApJ,OAAAgI,IAFA,UAQA,QAAAD,IAAAK,GACA,OAAAJ,GAAAF,GAAkDM,EAAAJ,EAAaA,IAC/DmB,GAAAnB,EACAF,IAAAM,EAGA,QAAAjB,IAAAmC,EAAAjP,EAAA9B,GACA,UAAAqH,IAAA0J,EAAAjP,EAAA9B,GAEA,QAAAgR,IAAAD,GAEA,MADArQ,IAAA,gEACAkO,GAAAmC,EAAAnP,GAAA2M,KAAA,MAGA,QAAAjF,IAAA1D,GACA,MAAAA,aAAAyB,IAkKA,QAAAnB,IAAA6K,EAAAE,GACA,UAAArM,IAAAmM,EAAAE,GAGA,QAAA1H,IAAA3D,GACA,MAAAA,aAAAhB,IAIA,QAAA/B,IAAAX,EAAAlC,EAAA8B,GAEA,GADA,SAAAA,IAA0BA,EAAAF,GAAAC,WAC1BK,EAAAsF,MAAA,CACA,GAAAtF,EAAAsF,MAAAiJ,OAAAS,GACA,SAAAhO,OAAA,8DACA,OAAAhB,GAAAsF,MAEAsB,GAAA5G,KACAlC,EAAAkC,EAAAjE,YAAA+B,MACAA,IACAA,EAAA,mBACA,IAAAgF,IACAyL,KAAAS,GACAzJ,UACA0J,OAAArO,OACAxF,GAAA8G,IACAlC,SAAAlC,OAAA8B,OAQA,OANA1D,QAAA6E,eAAAf,EAAA,SACAS,YAAA,EACAD,cAAA,EACA2B,UAAA,EACAtC,MAAAiD,IAEAA,EAEA,QAAApC,IAAAoC,EAAAoM,EAAArP,GACAiD,EAAAyC,OAAA2J,GACApM,EAAA9C,OAAAkP,GAAArP,EAEAsP,GAAArM,EAAAoM,EAAArP,GAEA,QAAAsP,IAAArM,EAAAoM,EAAArP,GACAM,GAAA2C,EAAA9C,OAAAkP,EACA,IAAApJ,GACAhI,EAAAgF,EAAAhF,KAAA,IAAAgF,EAAA1H,GAAA,YAAA8T,EAAA,IACAE,GAAA,CACA,mBAAAvP,IAAA,IAAAA,EAAAnC,OACAoI,EAAA,GAAAhG,IAAAD,EAAAiD,EAAA9C,QAAA,EAAAlC,GACA+B,YAAAoM,KAAA,kBAAApM,UAAA,IAAAA,QAAAnC,OACAoI,EAAA,GAAAhG,IAAAD,QAAAiD,EAAA9C,QAAA,EAAAlC,IAEAsR,GAAA,EACAtJ,EAAA,GAAAU,IAAA3G,EAAAiD,EAAAlD,KAAA9B,IAEAgF,EAAAyC,OAAA2J,GAAApJ,EACA5J,OAAA6E,eAAA+B,EAAA9C,OAAAkP,GACA1O,cAAA,EACAC,YAAA2O,EACA9O,IAAA,WACA,MAAAwF,GAAAxF,OAEAC,IAAA6O,EACAtO,EACA,SAAAuO,GACA,GAAAlB,GAAArI,EAAAjG,KACAiG,GAAAvF,IAAA8O,IAAAzO,SAAAkC,EAAAmM,QACAnM,EAAAmM,OAAAzL,MACA+K,KAAA,SACA3M,OAAAjG,KACAmC,KAAAoR,EACAf,gBAKAvN,SAAAkC,EAAAmM,QACAnM,EAAAmM,OAAAzL,MACA+K,KAAA,MACA3M,OAAAkB,EAAA9C,OACAlC,KAAAoR,IAKA,QAAA5H,IAAA1F,EAAA0N,EAAAtI,GACAvJ,GAAA2H,GAAAxD,GAAA,8BACAnE,GAAAuJ,KAAA,oFACA,IAAAlE,GAAAlB,EAAA0D,KAGA,OAFA1E,UAAAkC,EAAAmM,SACAnM,EAAAmM,OAAA,GAAArK,KACAhD,EAAA0D,MAAA2J,OAAAnK,GAAAwK,GAEA,QAAAlK,IAAA1B,GACA,MAAAA,MAAA4B,OAAA5B,EAAA4B,MAAAiJ,OAAAS,GA4EA,QAAAvR,IAAA8R,EAAA5C,EAAAjJ,GACA,IAAA6L,EACA,SAAAvO,OAAA,4BAAA2L,GAAAjJ,EAAA,QAAAA,EAAA,SAGA,QAAAlF,IAAAgR,GACA,KAAAC,GAAAzF,QAAAwF,KAEAC,GAAAhL,KAAA+K,GACAnN,QAAAgH,MAAA,sBAAAmG,IAEA,QAAAzK,IAAArG,GACA,GAAAgR,IAAA,CACA,mBACA,MAAAA,GAAA,QAEAA,GAAA,EACAhR,EAAA/B,MAAAhB,KAAAiB,aAIA,QAAAmH,IAAA4L,GACA,GAAAzM,KAKA,OAJAyM,GAAAhN,QAAA,SAAAiN,GACA,KAAA1M,EAAA8G,QAAA4F,IACA1M,EAAAuB,KAAAmL,KAEA1M,EAEA,QAAA0D,IAAA/G,GACA,cAAAA,GAAA,gBAAAA,IAAA3D,OAAA2T,eAAAhQ,KAAA3D,OAAAD,UAEA,QAAA6T,IAAAC,EAAA5B,EAAAkB,GACA,MAAAU,IACAnB,GAAAT,EAAAkB,GACAlB,IAAAkB,EAEA,QAAAW,IAAApO,EAAAqO,GACA,OAAAlI,GAAA,EAAmBA,EAAAkI,EAAAvS,OAAkBqK,IACrC7L,OAAA6E,eAAAa,EAAAqO,EAAAlI,IACAvH,cAAA,EACA2B,UAAA,EACA1B,YAAA,EACAZ,MAAA+B,EAAAqO,EAAAlI,MAIA,QAAAhF,IAAAnB,EAAAsO,GACA,GAAA9P,GAAAlE,OAAAiU,yBAAAvO,EAAAsO,EACA,QAAA9P,KAAAI,gBAAA,GAAAJ,EAAA+B,YAAA,EAEA,QAAAhC,IAAAyB,EAAAsO,GACAzS,GAAAsF,GAAAnB,EAAAsO,GAAA,yBAAAA,EAAA,0EAEA,QAAAtB,IAAAwB,EAAAvU,GACA,UAAAuU,GAAA,OAAAvU,EACA,QACA,IAAA+E,SAAAwP,GAAAxP,SAAA/E,EACA,QACA,IAAAwU,GAAAjK,MAAAO,QAAAyJ,IAAAhJ,GAAAgJ,EACA,IAAAC,KAAAjK,MAAAO,QAAA9K,IAAAuL,GAAAvL,IACA,QAEA,IAAAwU,EAAA,CACA,GAAAD,EAAA1S,SAAA7B,EAAA6B,OACA,QACA,QAAAqK,GAAAqI,EAAA1S,OAA8BqK,GAAA,EAAQA,IACtC,IAAA6G,GAAAwB,EAAArI,GAAAlM,EAAAkM,IACA,QACA,UAEA,mBAAAqI,IAAA,gBAAAvU,GAAA,CACA,UAAAuU,GAAA,OAAAvU,EACA,QACA,IAAAK,OAAAoU,KAAAF,GAAA1S,SAAAxB,OAAAoU,KAAAzU,GAAA6B,OACA,QACA,QAAAwS,KAAAE,GAAA,CACA,IAAAvU,EAAAG,eAAAkU,GACA,QACA,KAAAtB,GAAAwB,EAAAF,GAAArU,EAAAqU,IACA,SAEA,SAEA,MAAAE,KAAAvU,EAEA,QAAA0N,IAAAgH,EAAAC,GACA,IAAAA,MAAA9S,OACA,OAAA6S,KACA,KAAAA,MAAA7S,OACA,UAAA8S,EAIA,KAHA,GAAAhH,MACAC,KACAgH,EAAA,EAAAC,EAAA,EAAA3D,EAAAwD,EAAA7S,OAAAiT,GAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAAN,EAAA9S,OAAAqT,GAAA,EAAAC,GAAA,GACAA,IAAAL,GAAA,CACA,IAAAI,EAAA,CACA,GAAAhE,EAAA0D,GAAAK,EAAAF,GAAAL,EAAAE,KAAAD,EAAAI,GAAA,CAGA,GAFAH,IACAG,IACAH,IAAA1D,GAAA6D,IAAAE,EACA,OAAAtH,EAAAC,EACA,UAEAiH,EAAAD,EACAI,EAAAD,EACAG,GAAA,EAEAF,GAAA,EACAH,GAAA,EACAG,GAAAC,IACAE,GAAA,GACAN,GAAA3D,IACA4D,GAAA,GACAA,GAAAJ,EAAAG,KAAAF,EAAAI,GAMAI,GAAAR,EAAAK,KAAAN,EAAAE,KACAhH,EAAAhF,KAAA9H,MAAA8M,EAAA+G,EAAA3F,MAAA+F,EAAAC,IACAD,EAAAC,EAAA,EACAJ,IACAM,GAAA,IATAvH,EAAA/E,KAAA9H,MAAA6M,EAAA+G,EAAA1F,MAAA4F,EAAAC,IACAD,EAAAC,EAAA,EACAE,IACAG,GAAA,GAWA,MAFAvH,GAAA/E,KAAA9H,MAAA6M,EAAA+G,EAAA1F,MAAA4F,IACAhH,EAAAhF,KAAA9H,MAAA8M,EAAA+G,EAAA3F,MAAA+F,KACApH,EAAAC,GAxnDA,GAAA/N,IAAAC,WAAAD,WAAA,SAAAE,EAAAC,GAEA,QAAAC,KAAmBH,KAAAI,YAAAH,EADnB,OAAAH,KAAAI,KAAAG,eAAAP,KAAAG,EAAAH,GAAAI,EAAAJ,GAEAG,GAAAK,UAAA,OAAAJ,EAAAK,OAAAC,OAAAN,IAAAC,EAAAG,UAAAJ,EAAAI,UAAA,GAAAH,IAEAoO,KACAhP,EAAA+V,GACA1H,aACAD,oBAEApO,EAAAgW,QACAlO,oBACAS,oBACAQ,kBACA7B,wBACAkH,mBACA5E,oBAcAxJ,EAAAmC,UAgBAnC,EAAAgD,OAKAhD,EAAAqD,eAmBArD,EAAAuD,eAMAvD,EAAA8D,WAoEA9D,EAAA+F,oBAqBA/F,EAAAqE,OAeArE,EAAAqH,kBAkBA,IAAAgB,IAAA,IAiFArI,GAAA+J,eA0DA/J,EAAA4K,YACA,IAAAI,KACA,SAAAA,GACAA,IAAA,yBACAA,IAAA,6BACAA,IAAA,iCACAA,IAAA,iBACAA,IAAA,+BACAA,IAAA,sCACCA,aAkBDhL,EAAA2L,UAwEA3L,EAAAwM,QAOA,IAAAlC,IAAA,WACA,QAAAA,GAAA1H,EAAAuM,EAAA3I,GACA,SAAA5D,IAA8BA,EAAA,QAC9B,SAAAuM,IAA0CA,EAAA8G,IAC1C,SAAAzP,IAA4CA,EAAAyP,IAC5CxV,KAAAmC,OACAnC,KAAA0O,mBACA1O,KAAA+F,qBACA/F,KAAAP,GAAA8G,IACAvG,KAAAyM,SAAA,EACAzM,KAAAmP,kBACAnP,KAAAwI,aA8BA,MA5BAqB,GAAAvJ,UAAAuO,eAAA,WACAA,EAAA7O,OAEA6J,EAAAvJ,UAAAmS,cAAA,WACAzS,KAAAyM,UACAzM,KAAAyV,cACAzV,KAAA0V,gBAGA7L,EAAAvJ,UAAAmV,YAAA,WACAzV,KAAAyM,UACAzM,KAAAyM,SAAA,EACAjF,EAAAxH,KAAA,SACAgN,EAAAhN,QAGA6J,EAAAvJ,UAAAoV,YAAA,WACA5T,GAAA9B,KAAAyM,QAAA,kBACA9G,GAAA+J,cAAA,EACA/J,GAAAyK,aAAAtH,KAAA9I,OAEAuM,EAAAvM,MACAwP,MAGA3F,EAAAvJ,UAAAyP,SAAA,WACA,MAAA/P,MAAAmC,KAAA,IAAAnC,KAAAP,IAEAoK,IAEAtK,GAAAsK,OACA,IAAA1F,IAAA,WACA,QAAAA,GAAA2I,EAAAlL,EAAAwS,EAAAjS,GACA,GAAA4H,GAAA/J,IACA,UAAAmC,IAA8BA,EAAA,iBAC9BnC,KAAA8M,aACA9M,KAAA4B,QACA5B,KAAAoU,oBACApU,KAAAmC,OACAnC,KAAAP,GAAA8G,IACAvG,KAAA2V,QAAA,EACA3V,KAAA4V,aAAA,EACA5V,KAAAmP,kBACAnP,KAAAwI,aACAxI,KAAAkI,aACAlI,KAAAmN,sBAAA,EACAnN,KAAA+M,qBAAA,EACA/M,KAAAkE,MAAAe,OACAjF,KAAA6V,KAAA,WACA9L,EAAA6L,aAAA,EACAjQ,GAAAmQ,0BACA,IAAAC,GAAApQ,GAAA0B,iBACA1B,IAAA0B,mBAAA,CACA,IAAAE,GAAAuF,EAAAnN,KAAAiC,EAIA,OAHA+D,IAAA0B,kBAAA0O,EACApQ,GAAAmQ,2BACA/L,EAAA6L,aAAA,EACArO,GA4DA,MAzDApD,GAAA7D,UAAAoO,iBAAA,aAEAvK,EAAA7D,UAAAyF,mBAAA,WACA,OAAAqG,GAAA,EAAAC,EAAArM,KAAAkI,UAAAnG,OAAkDsK,EAAAD,EAAOA,IACzD8B,EAAAlO,KAAAkI,UAAAkE,GAAApM,KACAA,MAAAkI,aACAlI,KAAA2V,QAAA,EACA3V,KAAAkE,MAAAe,QAEAd,EAAA7D,UAAA8M,oBAAA,WACA,GAAAzF,GAAA3H,KAAAgW,iBAEA,OADAxO,GAAAxH,KAAA,QAAA2H,GACAA,GAEAxD,EAAA7D,UAAAqE,IAAA,WAGA,GAFA7C,IAAA9B,KAAA4V,YAAA,iBAAA5V,KAAA8M,YACA+B,EAAA7O,MACAA,KAAA+M,qBAAA,EACA,MAAA/M,MAAA6V,MAEA,IAAA7V,KAAA2V,OAAA,CACA,IAAAlP,IAKA,MAAAzG,MAAA6V,MAJA7V,MAAA2V,QAAA,EACA3V,KAAAgW,kBAMA,MAAAhW,MAAAkE,OAEAC,EAAA7D,UAAAsE,IAAA,SAAA0Q,GACA,SAAAjQ,OAAA,mBAAAlD,KAAA,qEAEAgC,EAAA7D,UAAA0V,gBAAA,WACA,GAAAxD,GAAAxS,KAAAkE,KAEA,OADAlE,MAAAkE,MAAAmJ,EAAArN,UAAA6V,MACA1B,GAAAnU,KAAAoU,kBAAApU,KAAAkE,MAAAsO,IAEArO,EAAA7D,UAAA4K,QAAA,SAAAM,EAAAH,GACA,GAAAtB,GAAA/J,KACAiW,GAAA,EACAC,EAAAjR,MACA,OAAAvD,GAAA,WACA,GAAAgS,GAAA3J,EAAApF,KACAsR,KAAA5K,IACA1F,GAAAmJ,cACAtD,EAAAkI,EAAAwC,GACAvQ,GAAAmJ,eAEAmH,GAAA,EACAC,EAAAxC,KAGAvP,EAAA7D,UAAAyP,SAAA,WACA,MAAA/P,MAAAmC,KAAA,IAAAnC,KAAAP,GAAA,IAAAO,KAAA8M,WAAAiD,WAAA,KAEA5L,KAyEAsK,GAAA,WACA,QAAAA,KACAzO,KAAAmW,QAAA,EACAnW,KAAA2M,mBACA3M,KAAAsO,SAAA,EACAtO,KAAA0P,cAAA,EACA1P,KAAA8O,YAAA,EACA9O,KAAAyP,oBAAA,EACAzP,KAAAoQ,gBACApQ,KAAA4P,oBACA5P,KAAAqH,mBAAA,EACArH,KAAA0F,QAAA,EAEA,MAAA+I,MAEA9I,GAAA,WACA,GAAA4B,GAAA,GAAAkH,GACA,IAAAhN,EAAA2U,4BAAA3U,EAAA4U,uBACA,SAAAhR,OAAA,mEACA,IAAA5D,EAAA6U,cAAA7U,EAAA6U,aAAAH,UAAA5O,EAAA4O,QACA,SAAA9Q,OAAA,4DACA,OAAA5D,GAAA6U,aACA7U,EAAA6U,aACA7U,EAAA6U,aAAA/O,IAqDAhI,GAAA+P,WACA,IAAApN,IAAA,WACA,QAAAA,GAAAC,EAAAoU,GACA,SAAApU,IAA8BA,EAAA,YAC9BnC,KAAAmC,OACAnC,KAAAuW,eACAvW,KAAAP,GAAA8G,IACAvG,KAAAmP,eAAA+C,GACAlS,KAAAwI,UAAA0J,GACAlS,KAAAkI,aACAlI,KAAAmN,sBAAA,EACAnN,KAAA+M,qBAAA,EACA/M,KAAAoD,YAAA,EACApD,KAAAwW,cAAA,EA8CA,MA5CAtU,GAAA5B,UAAAoO,iBAAA,aAEAxM,EAAA5B,UAAAyF,mBAAA,aAEA7D,EAAA5B,UAAA8M,oBAAA,WAEA,MADApN,MAAAqC,YACA,GAEAH,EAAA5B,UAAA+B,SAAA,WACArC,KAAAwW,eACAxW,KAAAwW,cAAA,EACA7Q,GAAAiK,iBAAA9G,KAAA9I,MACAwP,MAGAtN,EAAA5B,UAAA2C,YAAA,WACA,MAAAjD,MAAA+M,qBAAA,GAAA/M,KAAAwW,cAEAtU,EAAA5B,UAAA2P,YAAA,WACAjQ,KAAAoD,aACApD,KAAAwW,cAAA,EACAxW,KAAAuW,eACA/O,EAAAxH,KAAA,cAGAkC,EAAA5B,UAAA8B,MAAA,SAAAqU,GACApJ,EAAArN,KAAAyW,IAEAvU,EAAA5B,UAAAoW,QAAA,WACA,IAAA1W,KAAAoD,WAAA,CACApD,KAAAoD,YAAA,CAEA,QADA2L,GAAA/O,KAAAkI,UAAA0G,OAAA,GACAxC,EAAA,EAAAC,EAAA0C,EAAAhN,OAA4CsK,EAAAD,EAAOA,IACnD8B,EAAAa,EAAA3C,GAAApM,QAGAkC,EAAA5B,UAAAgC,YAAA,WACA,GAAAY,GAAAlD,KAAA0W,QAAA1U,KAAAhC,KAEA,OADAkD,GAAAyG,MAAA3J,KACAkD,GAEAhB,EAAA5B,UAAAyP,SAAA,WACA,kBAAA/P,KAAAmC,KAAA,KAEAD,IAEA3C,GAAA2C,WACA,IAAA4N,IAAA,GA2BAvQ,GAAA2Q,aACA,IAAAnM,KACA,SAAAA,GACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,gBACCA,aAIDxE,EAAA2K,cAIA3K,EAAA2F,cAIA3F,EAAAgR,QACA,IAAAF,IAAA,WACA,QAAAA,GAAAnM,GACAlE,KAAAkE,QACArC,GAAAqC,EAAA,0CAEA,MAAAmM,MAEAC,GAAA,WACA,QAAAA,GAAApM,GACAlE,KAAAkE,QACArC,GAAAqC,EAAA,0CAEA,MAAAoM,MAEAE,GAAA,WACA,QAAAA,GAAAtM,GACAlE,KAAAkE,QACArC,GAAAqC,EAAA,0CAEA,MAAAsM,MAqDAkB,GAAA,EACAiF,GAAA,WACA,QAAAA,MAEA,MAAAA,KAEAA,IAAArW,YAqEA,IAAAkJ,IAAA,SAAAzI,GAEA,QAAAyI,GAAA0J,EAAAjP,EAAA9B,GACApB,EAAApB,KAAAK,KACA,IAAAmH,GAAAnH,KAAA2J,OACA6C,KAAA,GAAA3C,IAAA1H,GAAA,mBACAyH,OAAA3E,OACAyN,YAAAzN,OACAwM,gBAAA,EACAxN,OACA0O,MAAA3S,KACAmS,kBAAA,SAAA/H,GAA6C,MAAAkI,IAAA3S,KAAAwH,EAAAiD,IAE7C7J,QAAA6E,eAAApF,KAAA,SACA8E,YAAA,EACAD,cAAA,EACA2B,UAAA,IAEA0M,KAAAnR,QACAuP,GAAAnK,EAAA,EAAA+L,EAAAnR,QACAoF,EAAAyC,OAAAsJ,EAAA7K,IAAAlB,EAAAgL,oBAGAhL,EAAAyC,UA6FA,MAnHA7J,IAAAyJ,EAAAzI,GAwBAyI,EAAAlJ,UAAA4K,QAAA,SAAAM,EAAAH,GAMA,MALA,UAAAA,IAAyCA,GAAA,GACzCpG,SAAAjF,KAAA2J,MAAA+I,cACA1S,KAAA2J,MAAA+I,YAAA,GAAAzJ,KACAoC,GACAG,GAAsBvF,OAAAjG,KAAA4S,KAAA,SAAAhB,MAAA,EAAAkB,WAAA9S,KAAA2J,MAAAC,OAAA7H,OAAA+L,aACtB9N,KAAA2J,MAAA+I,YAAAvJ,GAAAqC,IAEAhC,EAAAlJ,UAAAsW,MAAA,WACA,MAAA5W,MAAA4O,OAAA,IAEApF,EAAAlJ,UAAAuW,QAAA,SAAA/E,GACA,MAAAT,IAAArR,KAAA2J,MAAA,EAAA3J,KAAA2J,MAAAC,OAAA7H,OAAA+P,IAEAtI,EAAAlJ,UAAAyL,OAAA,WAEA,MADA/L,MAAA2J,MAAA6C,KAAAqC,iBACA7O,KAAA2J,MAAAC,OAAAsF,SAEA1F,EAAAlJ,UAAAuV,KAAA,WACA,MAAA7V,MAAA2J,MAAAC,QAEAJ,EAAAlJ,UAAAwW,KAAA,SAAAtU,EAAA2N,EAAA4G,GACA,SAAAA,IAAmCA,EAAA,GACnC/W,KAAA2J,MAAA6C,KAAAqC,gBAEA,QADAmI,GAAAhX,KAAA2J,MAAAC,OAAAyC,EAAA2K,EAAAjV,OACAqK,EAAA2K,EAA+B1K,EAAAD,EAAOA,IACtC,GAAA5J,EAAA7C,KAAAwQ,EAAA6G,EAAA5K,KAAApM,MACA,MAAAgX,GAAA5K,EACA,cAEA5C,EAAAlJ,UAAAsO,OAAA,SAAAgD,EAAAC,GAEA,OADAC,MACAhL,EAAA,EAAwBA,EAAA7F,UAAAc,OAAuB+E,IAC/CgL,EAAAhL,EAAA,GAAA7F,UAAA6F,EAEA,QAAA7F,UAAAc,QACA,OACA,QACA,QACA,MAAAsP,IAAArR,KAAA2J,MAAAiI,EACA,QACA,MAAAP,IAAArR,KAAA2J,MAAAiI,EAAAC,GAEA,MAAAR,IAAArR,KAAA2J,MAAAiI,EAAAC,EAAAC,IAEAtI,EAAAlJ,UAAAwI,KAAA,WAEA,OADAkO,MACAlQ,EAAA,EAAwBA,EAAA7F,UAAAc,OAAuB+E,IAC/CkQ,EAAAlQ,EAAA,GAAA7F,UAAA6F,EAGA,OADAuK,IAAArR,KAAA2J,MAAA3J,KAAA2J,MAAAC,OAAA7H,OAAA,EAAAiV,GACAhX,KAAA2J,MAAAC,OAAA7H,QAEAyH,EAAAlJ,UAAA2W,IAAA,WACA,MAAAjX,MAAA4O,OAAAmD,KAAAC,IAAAhS,KAAA2J,MAAAC,OAAA7H,OAAA,YAEAyH,EAAAlJ,UAAA4W,MAAA,WACA,MAAAlX,MAAA4O,OAAA,SAEApF,EAAAlJ,UAAA6W,QAAA,WAEA,OADAH,MACAlQ,EAAA,EAAwBA,EAAA7F,UAAAc,OAAuB+E,IAC/CkQ,EAAAlQ,EAAA,GAAA7F,UAAA6F,EAGA,OADAuK,IAAArR,KAAA2J,MAAA,IAAAqN,GACAhX,KAAA2J,MAAAC,OAAA7H,QAEAyH,EAAAlJ,UAAA8W,QAAA,WACApX,KAAA2J,MAAA6C,KAAAqC,gBACA,IAAAwI,GAAArX,KAAAkP,OACA,OAAAmI,GAAAD,QAAApW,MAAAqW,EAAApW,YAEAuI,EAAAlJ,UAAAgX,KAAA,SAAAC,GACAvX,KAAA2J,MAAA6C,KAAAqC,gBACA,IAAAwI,GAAArX,KAAAkP,OACA,OAAAmI,GAAAC,KAAAtW,MAAAqW,EAAApW,YAEAuI,EAAAlJ,UAAAkX,OAAA,SAAAtT,GACA,GAAAyK,GAAA3O,KAAA2J,MAAAC,OAAAyE,QAAAnK,EACA,OAAAyK,GAAA,IACA3O,KAAA4O,OAAAD,EAAA,IACA,IAEA,GAEAnF,EAAAlJ,UAAAyP,SAAA,WACA,sBAAAtF,MAAAnK,UAAAyP,SAAA/O,MAAAhB,KAAA2J,MAAAC,OAAA3I,YAEAuI,EAAAlJ,UAAAmX,eAAA,WACA,sBAAAhN,MAAAnK,UAAAmX,eAAAzW,MAAAhB,KAAA2J,MAAAC,OAAA3I,YAEAuI,GACCmN,GACDtC,IAAA7K,GAAAlJ,WACA,cACA,UACA,QACA,UACA,SACA,OACA,OACA,SACA,OACA,MACA,QACA,UACA,UACA,OACA,SACA,WACA,mBAEAC,OAAA6E,eAAAoE,GAAAlJ,UAAA,UACAwE,YAAA,EACAD,cAAA,EACAF,IAAA,WACA,MAAAsM,IAAAjR,KAAA2J,QAEA/E,IAAA,SAAAuM,GACAD,GAAAlR,KAAA2J,MAAAwH,OAIA,SACA,QACA,SACA,UACA,UACA,OACA,cACA,MACA,SACA,cACA,QACA,QACAnK,QAAA,SAAA0Q,GACA,GAAAC,GAAAlN,MAAAnK,UAAAoX,EACAnX,QAAA6E,eAAAoE,GAAAlJ,UAAAoX,GACA7S,cAAA,EACA2B,UAAA,EACA1B,YAAA,EACAZ,MAAA,WAEA,MADAlE,MAAA2J,MAAA6C,KAAAqC,iBACA8I,EAAA3W,MAAAhB,KAAA2J,MAAAC,OAAA3I,gBAyCA0Q,GAAA,KAQApS,EAAA4T,aAIA5T,EAAAkM,oBACA,IAAAmM,OACA7Q,GAAA,WACA,QAAAA,GAAA8Q,EAAAC,GACA,GAAA/N,GAAA/J,IACAA,MAAA2J,MAAAiO,GACA5X,KAAA8L,SACA9L,KAAA+X,WACA/X,KAAAgY,QAAA/S,OACAjF,KAAAmC,KAAA,gBACAnC,KAAAP,GAAA8G,IACAvG,KAAAiY,MAAA,GAAAzO,IAAA,KAAAzF,GAAAuG,UAAAtK,KAAAmC,KAAA,IAAAnC,KAAAP,GAAA,aACAO,KAAAkY,WAAAvH,GAAAmH,GACA7M,GAAA4M,GACA7X,KAAAmY,MAAAN,GACApN,MAAAO,QAAA6M,IACAA,EAAA7Q,QAAA,SAAAnD,GACA,GAAAS,GAAAT,EAAA,GAAAK,EAAAL,EAAA,EACA,OAAAkG,GAAAnF,IAAAN,EAAAJ,KA2IA,MAxIA6C,GAAAzG,UAAAuL,KAAA,SAAAvH,GACA,yBAAAtE,MAAA8L,MAAAxH,IAEAyC,EAAAzG,UAAA8X,IAAA,SAAA9T,GACA,MAAAtE,MAAAqY,WAAA/T,GAEAtE,KAAA+X,QAAAzT,GACAtE,KAAA+X,QAAAzT,GAAAK,MACA3E,KAAAsY,mBAAAhU,GAAA,GAAAK,OAHA,GAKAoC,EAAAzG,UAAAsE,IAAA,SAAAN,EAAAJ,GACA,GAAA6F,GAAA/J,IAGA,IAFAA,KAAAuY,eAAAjU,GACAzC,GAAAqC,EAAA,kEAAAI,EAAA,mFACAtE,KAAA6L,KAAAvH,GAAA,CACA,GAAAkO,GAAAxS,KAAA8L,MAAAxH,GAAAJ,MACAyD,EAAA3H,KAAA8L,MAAAxH,GAAAM,IAAAV,EACAyD,IAAA3H,KAAAgY,SACAhY,KAAAgY,QAAAnQ,MACA+K,KAAA,SACA3M,OAAAjG,KACAmC,KAAAmC,EACAkO,iBAKAtC,GAAA,WACAnG,EAAA+B,MAAAxH,GAAA,GAAAuG,IAAA3G,EAAA6F,EAAAmO,WAAAnO,EAAA5H,KAAA,IAAA4H,EAAAtK,GAAA,aAAA6E,EAAA,KACAyF,EAAAuO,mBAAAhU,GAAA,GACAyF,EAAAkO,MAAAnP,KAAAxE,KAEAtE,KAAAgY,SAAAhY,KAAAgY,QAAAnQ,MACA+K,KAAA,MACA3M,OAAAjG,KACAmC,KAAAmC,KAIAyC,EAAAzG,UAAAyG,UAAA,SAAAzC,GACA,GAAAyF,GAAA/J,IACA,IAAAA,KAAA6L,KAAAvH,GAAA,CACA,GAAAkO,GAAAxS,KAAA8L,MAAAxH,GAAAJ,KACAgM,GAAA,WACAnG,EAAAkO,MAAAT,OAAAlT,GACAyF,EAAAuO,mBAAAhU,GAAA,EACA,IAAA6F,GAAAJ,EAAA+B,MAAAxH,EACA6F,GAAAvF,IAAAK,QACA8E,EAAA+B,MAAAxH,GAAAW,SAEAjF,KAAAgY,SAAAhY,KAAAgY,QAAAnQ,MACA+K,KAAA,SACA3M,OAAAjG,KACAmC,KAAAmC,EACAkO,eAIAzL,EAAAzG,UAAAgY,mBAAA,SAAAhU,EAAAJ,GACA,GAAAsU,GAAAxY,KAAA+X,QAAAzT,EAOA,OANAkU,GACAA,EAAA5T,IAAAV,GAGAsU,EAAAxY,KAAA+X,QAAAzT,GAAA,GAAAuG,IAAA3G,EAAAH,GAAAuG,UAAAtK,KAAAmC,KAAA,IAAAnC,KAAAP,GAAA,gBAAA6E,EAAA,KAEAkU,GAEAzR,EAAAzG,UAAAqE,IAAA,SAAAL,GACA,MAAAtE,MAAAoY,IAAA9T,GACAtE,KAAA8L,MAAAxH,GAAAK,MADA,QAIAoC,EAAAzG,UAAAqU,KAAA,WACA,MAAA3U,MAAAiY,MAAA/I,SAEAnI,EAAAzG,UAAAsJ,OAAA,WACA,MAAA5J,MAAA2U,OAAAtM,IAAArI,KAAA2E,IAAA3E,OAEA+G,EAAAzG,UAAAmY,QAAA,WACA,GAAA1O,GAAA/J,IACA,OAAAA,MAAA2U,OAAAtM,IAAA,SAAA/D,GAA+C,OAAAA,EAAAyF,EAAApF,IAAAL,OAE/CyC,EAAAzG,UAAA0G,QAAA,SAAA2M,EAAAxD,GACA,GAAApG,GAAA/J,IACAA,MAAA2U,OAAA3N,QAAA,SAAA1C,GAA4C,MAAAqP,GAAAhU,KAAAwQ,EAAApG,EAAApF,IAAAL,SAE5CyC,EAAAzG,UAAA6X,MAAA,SAAAO,GACA,GAAA3O,GAAA/J,IAOA,OANAkQ,GAAA,WACAwI,YAAA3R,GACA2R,EAAA/D,OAAA3N,QAAA,SAAA1C,GAAqD,MAAAyF,GAAAnF,IAAAN,EAAAoU,EAAA/T,IAAAL,MAErD/D,OAAAoU,KAAA+D,GAAA1R,QAAA,SAAA1C,GAA2D,MAAAyF,GAAAnF,IAAAN,EAAAoU,EAAApU,QAE3DtE,MAEA+G,EAAAzG,UAAAsW,MAAA,WACA,GAAA7M,GAAA/J,IACAkQ,GAAA,WACAnG,EAAA4K,OAAA3N,QAAA+C,kBAGAxJ,OAAA6E,eAAA2B,EAAAzG,UAAA,QACAqE,IAAA,WACA,MAAA3E,MAAAiY,MAAAlW,QAEA+C,YAAA,EACAD,cAAA,IAEAkC,EAAAzG,UAAAqY,KAAA,WACA,GAAA5O,GAAA/J,KACAuH,IAEA,OADAvH,MAAA2U,OAAA3N,QAAA,SAAA1C,GAA4C,MAAAiD,GAAAjD,GAAAyF,EAAApF,IAAAL,KAC5CiD,GAEAR,EAAAzG,UAAA+X,WAAA,SAAA/T,GACA,cAAAA,GAAAW,SAAAX,GACA,EACA,gBAAAA,IAAA,gBAAAA,IAIAyC,EAAAzG,UAAAiY,eAAA,SAAAjU,GACA,IAAAtE,KAAAqY,WAAA/T,GACA,SAAAe,OAAA,4BAAAf,EAAA,MAEAyC,EAAAzG,UAAAyP,SAAA,WACA,GAAAhG,GAAA/J,IACA,sBAA2BA,KAAA2U,OAAAtM,IAAA,SAAA/D,GAAqC,MAAAA,GAAA,KAAAyF,EAAApF,IAAAL,KAA+CsU,KAAA,aAE/G7R,EAAAzG,UAAA4K,QAAA,SAAAyI,GAGA,MAFA3T,MAAAgY,UACAhY,KAAAgY,QAAA,GAAA/O,KACAjJ,KAAAgY,QAAA7O,GAAAwK,IAEA5M,IAEAxH,GAAAwH,iBAIAxH,EAAA8I,OAIA9I,EAAAmM,kBACA,IAAA2H,MAuFA9T,GAAAkK,qBACA,IAAAoB,IAAA,SAAA9J,GAEA,QAAA8J,GAAA3G,EAAAD,EAAA9B,GACA,SAAAA,IAA8BA,EAAA,mBAC9BpB,EAAApB,KAAAK,KAAAmC,GACAnC,KAAAiE,OACAjE,KAAA6Y,qBAAA,EACA7Y,KAAAsT,OAAA,KACAtT,KAAAkE,MAAAe,MACA,IAAApB,GAAAC,EAAAI,EAAAH,GAAAC,WAAA8U,EAAAjV,EAAA,GAAAkV,EAAAlV,EAAA,EACA7D,MAAAiE,OAAAF,GAAAC,YACAhE,KAAAiE,KAAA6U,GACA9Y,KAAAkE,MAAAyG,GAAAoO,EAAA/Y,KAAAiE,KAAAjE,KAAAmC,MA6BA,MAxCApC,IAAA8K,EAAA9J,GAaA8J,EAAAvK,UAAAsE,IAAA,SAAA8O,GACA7R,GAAA6R,EAAA,mDACA9G,GACA,IAAA4F,GAAAxS,KAAAkE,MACAyD,EAAAwM,GAAAnU,KAAAiE,OAAAF,GAAAK,UAAAoO,EAAAkB,EAOA,OANA/L,KACA3H,KAAAkE,MAAAyG,GAAA+I,EAAA1T,KAAAiE,KAAAjE,KAAAmC,MACAnC,KAAAyS,gBACAzS,KAAAsT,QACAtT,KAAAsT,OAAAzL,KAAA6L,EAAAlB,IAEA7K,GAEAkD,EAAAvK,UAAAqE,IAAA,WAEA,MADA3E,MAAA6O,iBACA7O,KAAAkE,OAEA2G,EAAAvK,UAAA4K,QAAA,SAAAM,EAAAH,GAKA,MAJArL,MAAAsT,SACAtT,KAAAsT,OAAA,GAAArK,KACAoC,GACAG,EAAAxL,KAAAkE,MAAAe,QACAjF,KAAAsT,OAAAnK,GAAAqC,IAEAX,EAAAvK,UAAAyP,SAAA,WACA,MAAA/P,MAAAmC,KAAA,IAAAnC,KAAAP,GAAA,IAAAO,KAAAkE,MAAA,KAEA2G,GACChB,IACDZ,GAAA,WACA,QAAAA,KACAjJ,KAAAqJ,aAuBA,MArBAJ,GAAA3I,UAAAuH,KAAA,WAEA,OADAwB,GAAArJ,KAAAqJ,UAAA6F,QACA9C,EAAA,EAAAC,EAAAhD,EAAAtH,OAA6CsK,EAAAD,EAAOA,IACpD/C,EAAA+C,GAAApL,MAAA,KAAAC,YAEAgI,EAAA3I,UAAA6I,GAAA,SAAAqC,GACA,GAAAzB,GAAA/J,IAEA,OADAA,MAAAqJ,UAAAP,KAAA0C,GACApC,GAAA,WACA,GAAAuF,GAAA5E,EAAAV,UAAAgF,QAAA7C,EACA,MAAAmD,GACA5E,EAAAV,UAAAuF,OAAAD,EAAA,MAGA1F,EAAA3I,UAAA8I,KAAA,SAAAoC,GACA,GAAAwN,GAAAhZ,KAAAmJ,GAAA,WACA6P,IACAxN,EAAAxK,MAAAhB,KAAAiB,YAEA,OAAA+X,IAEA/P,IAEA1J,GAAA0J,qBACA,IAAAiJ,MACA3R,QAAA0Y,OAAA/G,GAKA,IAAA4B,OAgBA0B,GAAA,eJiM8B7V,KAAKJ,EAAU,WAAa,MAAOS,WAI3D,SAASR,EAAQD,GKtnDvB,QAAA2Z,GAAiBC,EAAKC,GACpB,GAAIC,EACJ,cAAeF,IACb,IAAK,WACHE,EAAOD,EAAI/Q,IAAI8Q,EACf,MACF,KAAK,SACHE,EAAOD,EAAI/Q,IAAI,SAAAqB,GAAI,MAAAA,GAAEyP,IACrB,MACF,SACEE,EAAOD,EAGX,MAAOC,GA+BT,QAAAC,GAAiBtF,EAAkBuF,EAAgBC,EAAqBC,GACtE,MAAc,KAAVF,EACKvF,EAEFA,EAAK0F,OAAO,SAACC,EAAa1F,EAAM7H,GASrC,MARIoN,KACFvF,EAAOuF,EAAS7Z,KAAK8Z,GAAazF,EAAMC,EAAM7H,EAAG4H,IAE/CvJ,MAAMO,QAAQiJ,GAChB0F,EAAY7Q,KAAI9H,MAAhB2Y,EAAoBL,EAAQrF,EAAMsF,EAAQ,IAE1CI,EAAY7Q,KAAKmL,GAEZ0F,OAhIXlP,MAAMnK,UAAUsZ,QAAU,SAASrF,EAAMsF,GACvC,GAAIvV,GACA2D,EAASjI,KAAK0Z,OAAO,SAACI,EAAc7F,GACtC3P,EAAoE2P,EAAKM,GACzEuF,EAAQxV,GAAOwV,EAAQxV,MACvB,IAAIyV,EACJ,cAAeF,IACb,IAAK,WACHE,EAAMF,EAAO5F,EACb,MACF,KAAK,SACH8F,KACAA,EAAIF,GAAU5F,EAAK4F,EACnB,MACF,KAAK,SACCpP,MAAMO,QAAQ6O,KAChBE,EAAMF,EAAOH,OAAO,SAACpS,EAAM0S,GAAoC,MAAzB1S,GAAK0S,GAAQ/F,EAAK+F,GAAc1S,OAExE,MACF,SACEyS,EAAM9F,EAIV,MADA6F,GAAQxV,GAAKwE,KAAKiR,GACXD,OAELG,IACJ,KAAK,GAAIC,KAAOjS,GAAQ,CACtBvB,QAAQyT,IAAID,EACZ,IAAIjG,MACAmG,EAAuB,kBAAT7F,GAAuB,MAAQA,CACjDN,GAAKmG,GAAOF,EACZjG,EAAKoG,MAAQpS,EAAOiS,GACpBD,EAAInR,KAAKmL,GAEX,MAAOgG,IAGTxP,MAAMnK,UAAUga,UAAY,SAASC,GACnC,MAAOva,MAAKqI,IAAI,SAAA6R,GACd,IAAK,GAAIM,KAASD,GAAQ,CACxB,GAAIxX,GAAOwX,EAAOC,GACdC,EAAOP,EAAIG,MAAMhS,IAAI,SAAAgS,GAAS,MAAAA,GAAMG,KACpCtW,EAAK,OACLwW,EAAO,EACS,iBAAT3X,IACTmB,EAAQuG,MAAMnK,UAAUyC,GAAMpD,KAAK8a,GACnCC,EAAO3X,GAEPmB,EAAQnB,EAAKpD,KAAK8a,GAEpBP,EAAIQ,EAAO,IAAMF,GAAStW,EAI5B,aADOgW,GAAIG,MACJH,KAIXzP,MAAMnK,UAAUqa,MAAQ,WACtB,MAAO3a,MAAK,IAGdyK,MAAMnK,UAAUsa,KAAO,WACrB,MAAO5a,MAAKA,KAAK+B,OAAS,IAG5B0I,MAAMnK,UAAUua,MAAQ,WACtB,MAAO7a,MAAK+B,QAmBd0I,MAAMnK,UAAU2R,IAAM,SAAS6I,GAC7B,MAAO/I,MAAKE,IAAIjR,MAAM,KAAMhB,KAAK+a,GAAGD,KAGtCrQ,MAAMnK,UAAU0R,IAAM,SAAS8I,GAC7B,MAAO/I,MAAKC,IAAIhR,MAAM,KAAMhB,KAAK+a,GAAGD,KAGtCrQ,MAAMnK,UAAU0a,IAAM,SAASF,GAC7B,MAAO9a,MAAK+a,GAAGD,GAAOpB,OAAO,SAACpS,EAAMsN,GAAY,OAAE,EAAYtN,GAAO,IAGvEmD,MAAMnK,UAAU2a,QAAU,SAASH;AACjC,GAAIzB,GAAOH,EAAQ4B,EAAO9a,MACtB6a,EAAQxB,EAAKtX,OACbmZ,EAAQ7B,EAAKK,OAAO,SAACpS,EAAMsN,GAAY,OAAE,EAAYtN,GAAO,EAChE,OAAO4T,GAAQL,GAGjBpQ,MAAMnK,UAAU8H,OAAS,SAAS0S,GAChC,GACY1O,GADRiN,EAAOH,EAAQ4B,EAAO9a,MACtB0J,KAAW2C,EAAIgN,EAAKtX,OAAQmB,IAChC,KAAKkJ,EAAI,EAAOC,EAAJD,EAAOA,GAAK,EAAK1C,EAAEyR,KAAKC,UAAU/B,EAAKjN,KAAOiN,EAAKjN,EAC/D,KAAKA,IAAK1C,GAAKxG,EAAE4F,KAAKY,EAAE0C,GACxB,OAAOlJ,IAqBTuH,MAAMnK,UAAUgZ,QAAU,SAASC,GACjC,MADiC,UAAAA,MAAA8B,KAC1B/B,EAAQtZ,KAAMuZ,IAGvB9O,MAAMnK,UAAUgb,QAAU,SAAS7E,EAAI8E,GACrC,MAAOjC,GAAQtZ,KAAM,EAAGyW,EAAI8E,IAG9B9Q,MAAMnK,UAAUya,GAAK,SAASD,GAC5B,MAAO5B,GAAQ4B,EAAO9a,OAGxByK,MAAMnK,UAAUkb,KAAO,SAASC,GAC9B,GAAIC,GAAOC,CAQX,OAPIF,IAAU,GACZC,EAAQ,EACRC,EAAMF,IAENC,EAAQD,EACRE,EAAM3b,KAAK+B,QAEN/B,KAAKkP,MAAMwM,EAAOC,IAG3BlR,MAAMnK,UAAUsb,SAAW,SAASC,GAClC,YACA,IAAIC,GAAIvb,OAAOP,MACX+b,EAAMC,SAASF,EAAE/Z,SAAW,CAChC,IAAY,IAARga,EACF,OAAO,CAET,IACIE,GADAC,EAAIF,SAAS/a,UAAU,KAAO,CAE9Bib,IAAK,EACPD,EAAIC,GAEJD,EAAIF,EAAMG,EACF,EAAJD,IAAQA,EAAI,GAGlB,KADA,GAAIE,GACOJ,EAAJE,GAAS,CAEd,GADAE,EAAiBL,EAAEG,GACfJ,IAAkBM,GACjBN,IAAkBA,GAAiBM,IAAmBA,EACzD,OAAO,CAETF,KAEF,OAAO,ILgsDH,SAASzc,EAAQD,GMx4DvB,YAEA,IAAI6B,KACHgb,KAAK,sHAAuHC,MAAM,cAAcC,MAAM,WAAWC,MAAM,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,iBAAiBC,MAAM,mBAAmBC,MAAM,iJAAiJ,6HAA6HC,OAAM,EAAMC,IAAI,oDAAoDC,KAAK,yBAClsBV,KAAK,8IAA+IC,MAAM,mBAAmB,qBAAqB,oBAAoB,mBAAmB,uBAAuB,4BAA4B,YAAY,oBAAoB,oBAAoB,eAAe,iBAAiB,iBAAiB,wBAAwB,oBAAoB,qBAAqB,iBAAiB,yBAAyB,kBAAkB,yBAAyB,sBAAsB,2BAA2B,gBAAgB,yBAAyB,mBAAmB,mBAAmB,kBAAkB,sBAAsB,qBAAqB,wBAAwB,qBAAqB,6BAA6B,aAAa,YAAY,qBAAqB,uBAAuB,2BAA2B,mCAAmC,qBAAqB,wBAAwB,0BAA0B,uBAAuB,oBAAoB,kBAAkB,sBAAsB,uBAAuB,yBAAyB,qBAAqB,gBAAgB,gBAAgB,iBAAiB,kBAAkB,uBAAuB,iBAAiB,2BAA2B,mBAAmB,qBAAqB,sBAAsB,sBAAsB,oBAAoB,qCAAqC,yCAAyC,oCAAoC,uCAAuC,0CAA0C,0CAA0CC,MAAM,UAAU,QAAQ,SAAS,SAAS,QAAQ,SAAS,SAAS,UAAUC,MAAM,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,kBAAkBC,MAAM,+BAA+BC,MAAM,4KAA8K,8EAA8E,mDAAmD,wEAAwEC,OAAM,EAAMC,IAAI,wDAAwDC,KAAK,sBACp0EV,KAAK,0HAA2HC,MAAM,qBAAqB,kBAAkB,sBAAsB,mBAAmB,mBAAmB,mBAAmB,wBAAwB,qBAAqB,kBAAkB,wBAAwB,iBAAiB,yBAAyB,qBAAqB,iBAAiB,0BAA0B,wBAAwB,kBAAkB,kBAAkB,sBAAsB,kBAAkB,kBAAkB,mBAAmB,kBAAkB,mBAAmB,kBAAkB,oBAAoB,2BAA2BC,MAAM,UAAUC,MAAM,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,wBAAwBC,MAAM,qBAAqBC,MAAM,qBAAqBC,OAAM,EAAMC,IAAI,kDAAkDC,KAAK,wBAC3+BV,KAAK,kIAAmIC,MAAM,cAAc,iBAAiB,qBAAqB,kBAAkB,aAAa,mBAAmBC,MAAM,UAAU,QAAQ,SAAS,SAAS,QAAQ,SAAS,SAAS,UAAUC,MAAM,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,kCAAkCC,MAAM,cAAcC,MAAM,sNAAwN,qEAAqE,uJAAuJC,OAAM,EAAMC,IAAI,wDAAwDC,KAAK,sBACzhCV,KAAK,kCAAmCC,MAAM,aAAaC,MAAM,0BAA0BC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,2KAA2K,kIAAkI,6HAA6H,uEAAuEC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACt/BV,KAAK,2FAA4FC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,0QAA0Q,qMAAuM,+SAA+SC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC/rCV,KAAK,wFAAyFC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,2YAA2Y,+SAA+SC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC9pCV,KAAK,iFAAkFC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,0QAA0Q,gTAAkT,+SAA+SC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACrtCV,KAAK,wFAAyFC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,2QAA2Q,ufAA2f,+SAA+SC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACv+CV,KAAK,2FAA4FC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,0QAA0Q,8VAA+V,+SAA+SC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC13CV,KAAK,kCAAmCC,MAAM,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,YAAYC,MAAM,8CAA8CC,MAAM,qQAAuQ,uXAAuXC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAChoCV,KAAK,wHAAyHC,MAAM,8BAA8BC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,sCAAsCC,MAAM,oBAAoBC,MAAM,+IAAiJC,OAAM,EAAMC,IAAI,2DAA2DC,KAAK,sBAClnBV,KAAK,wHAAyHC,MAAM,8BAA8BC,MAAM,UAAUC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,sCAAsCC,MAAM,oBAAoBC,MAAM,qNAAuN,mGAAmGC,OAAM,EAAMC,IAAI,2DAA2DC,KAAK,sBAC5xBV,KAAK,wHAAyHC,MAAM,8BAA8BC,MAAM,0BAA0BC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,sCAAsCC,MAAM,oBAAoBC,MAAM,kKAAoKC,OAAM,EAAMC,IAAI,2DAA2DC,KAAK,sBACtpBV,KAAK,4IAA6IC,MAAM,aAAa,WAAW,kBAAkB,oBAAoB,iCAAiC,eAAe,gBAAgB,sBAAsB,sBAAsB,cAAc,iBAAiB,gBAAgB,eAAe,yBAAyB,qBAAqB,kBAAkB,YAAY,kBAAkB,eAAe,iBAAiB,cAAc,qBAAqB,eAAe,aAAa,eAAe,yCAAyC,wBAAwB,eAAe,oBAAoB,iCAAiC,qBAAqB,mBAAmB,oBAAoB,eAAe,mBAAmB,aAAa,oBAAoB,eAAe,cAAc,kBAAkB,oBAAoB,mBAAmB,oBAAoB,kBAAkB,oBAAoB,kBAAkB,aAAa,mBAAmB,mBAAmB,wCAAwC,sBAAsB,sBAAsB,8CAA8C,sBAAsB,kBAAkB,+CAA+C,YAAY,mBAAmB,mBAAmB,8BAA8B,iBAAiB,oBAAoB,qBAAqB,uBAAuB,qCAAqC,qCAAqC,kBAAkB,cAAc,kBAAkB,gBAAgB,gBAAgB,wBAAwB,0BAA0B,YAAY,iBAAiB,mBAAmB,eAAe,oBAAoB,6BAA6B,kBAAkB,oBAAoB,cAAc,sBAAsB,eAAe,eAAe,uBAAuB,sBAAsB,sBAAsB,kBAAkB,sBAAsB,oBAAoB,cAAc,eAAe,kBAAkB,kBAAkB,gBAAgB,kCAAkC,oBAAoB,cAAc,kBAAkB,4BAA4B,iBAAiB,cAAc,eAAe,kBAAkB,gCAAgC,mBAAmB,mBAAmB,uBAAuB,qBAAqB,oCAAoC,kBAAkB,gBAAgB,gBAAgB,mBAAmB,eAAe,YAAY,uBAAuB,YAAY,aAAa,aAAa,0BAA0B,yBAAyB,qBAAqB,mBAAmB,gBAAgB,kBAAkB,iBAAiB,sBAAsB,aAAa,cAAc,mBAAmB,mBAAmB,qBAAqB,YAAY,kBAAkB,gBAAgB,YAAY,kBAAkB,8BAA8B,2BAA2B,aAAaC,MAAM,QAAQ,WAAW,UAAU,SAAS,aAAa,UAAU,UAAU,QAAQ,QAAQ,WAAWC,MAAM,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,4CAA4CC,MAAM,8BAA8BC,MAAM,wNAA0N,gFAAgFC,OAAM,EAAMC,IAAI,oDAAoDC,KAAK,sBACjlHV,KAAK,4IAA6IC,MAAM,aAAa,WAAW,kBAAkB,oBAAoB,iCAAiC,eAAe,gBAAgB,sBAAsB,sBAAsB,cAAc,iBAAiB,gBAAgB,eAAe,yBAAyB,qBAAqB,kBAAkB,YAAY,kBAAkB,eAAe,iBAAiB,cAAc,qBAAqB,eAAe,aAAa,eAAe,yCAAyC,wBAAwB,eAAe,oBAAoB,iCAAiC,qBAAqB,mBAAmB,oBAAoB,eAAe,mBAAmB,aAAa,oBAAoB,eAAe,cAAc,kBAAkB,oBAAoB,mBAAmB,oBAAoB,kBAAkB,oBAAoB,kBAAkB,aAAa,mBAAmB,mBAAmB,wCAAwC,sBAAsB,sBAAsB,8CAA8C,sBAAsB,kBAAkB,+CAA+C,YAAY,mBAAmB,mBAAmB,8BAA8B,iBAAiB,oBAAoB,qBAAqB,uBAAuB,qCAAqC,qCAAqC,kBAAkB,cAAc,kBAAkB,gBAAgB,gBAAgB,wBAAwB,0BAA0B,YAAY,iBAAiB,mBAAmB,eAAe,oBAAoB,6BAA6B,kBAAkB,oBAAoB,cAAc,sBAAsB,eAAe,eAAe,uBAAuB,sBAAsB,sBAAsB,kBAAkB,sBAAsB,oBAAoB,cAAc,eAAe,kBAAkB,kBAAkB,gBAAgB,kCAAkC,oBAAoB,cAAc,kBAAkB,4BAA4B,iBAAiB,cAAc,eAAe,kBAAkB,gCAAgC,mBAAmB,mBAAmB,uBAAuB,qBAAqB,oCAAoC,kBAAkB,gBAAgB,gBAAgB,mBAAmB,eAAe,YAAY,uBAAuB,YAAY,aAAa,aAAa,0BAA0B,yBAAyB,qBAAqB,mBAAmB,gBAAgB,kBAAkB,iBAAiB,sBAAsB,aAAa,cAAc,mBAAmB,mBAAmB,qBAAqB,YAAY,kBAAkB,gBAAgB,YAAY,kBAAkB,8BAA8B,2BAA2B,aAAaC,MAAM,UAAUC,MAAM,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,4CAA4CC,MAAM,8BAA8BC,MAAM,+OAAiPC,OAAM,EAAMC,IAAI,oDAAoDC,KAAK,sBACh8GV,KAAK,kHAAmHC,MAAM,cAAc,kBAAkB,iBAAiBC,MAAM,QAAQ,WAAW,UAAU,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,oEAAoEC,MAAM,iBAAiBC,MAAM,iFAAiF,gKAAgK,QAAQC,OAAM,EAAMC,IAAI,+CAA+CC,KAAK,yBACnxBV,KAAK,kHAAmHC,MAAM,cAAc,kBAAkB,iBAAiBC,MAAM,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,oEAAoEC,MAAM,iBAAiBC,MAAM,sIAAsI,yHAAyH,sLAAsL,mGAAmG,yJAAyJC,OAAM,EAAMC,IAAI,+CAA+CC,KAAK,yBACjuCV,KAAK,sGAAuGC,MAAM,cAAc,kBAAkB,gBAAgB,sBAAsBC,MAAM,QAAQ,WAAW,UAAU,QAAQ,QAAQ,UAAUC,MAAM,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,+BAA+BC,MAAM,WAAWC,MAAM,OAAO,gZAAgZC,OAAM,EAAMC,IAAI,sDAAsDC,KAAK,sBACv6BV,KAAK,kIAAmIC,MAAM,eAAeC,MAAM,QAAQ,WAAW,UAAU,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,mDAAmDC,MAAM,yBAAyBC,MAAM,OAAO,2FAA2FC,OAAM,EAAMC,IAAI,yDAAyDC,KAAK,sBAC3mBV,KAAK,kIAAmIC,MAAM,eAAeC,MAAM,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,mDAAmDC,MAAM,yBAAyBC,MAAM,sMAAwM,yDAAyDC,OAAM,EAAMC,IAAI,yDAAyDC,KAAK,sBAC9uBV,KAAK,kHAAmHC,MAAM,qBAAqB,yBAAyB,gBAAgB,oBAAoB,mBAAmB,sBAAsB,qBAAqB,mBAAmBC,MAAM,UAAU,SAAS,UAAUC,MAAM,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,sBAAsBC,MAAM,iBAAiBC,MAAM,QAAQC,OAAM,EAAMC,IAAI,GAAGC,KAAK,KACjjBV,KAAK,8HAA+HC,MAAM,0BAA0BC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,uBAAuBC,MAAM,uBAAuBC,MAAM,OAAO,8UAA8UC,OAAM,EAAMC,IAAI,wDAAwDC,KAAK,sBACzyBV,KAAK,kCAAmCC,MAAM,iBAAiB,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,OAAO,6CAA6C,uOAAuO,2DAA2DC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBAC/1BV,KAAK,wFAAyFC,MAAM,iBAAiB,aAAaC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,+QAA+Q,0HAA0H,+SAA+SC,MAAM3X,OAAU4X,IAAI;AAA4DC,KAAK,sBACrqCV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,8SAA8S,0HAA0H,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBAC5nCV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,sHAAsH,gEAAgE,8SAA8S,sHAAsHC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBACx8BV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,sHAAsH,yDAAyD,8SAA8S,sGAAsGC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBACx+BV,KAAK,0EAA2EC,MAAM,iBAAiB,aAAaC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,0QAA0Q,kSAAoS,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBAC1rCV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,WAAWC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,8SAA8S,oGAAoG,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBACviCV,KAAK,wFAAyFC,MAAM,iBAAiB,aAAaC,MAAM,WAAWC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,8SAA8S,oGAAoG,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBAC/mCV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,yQAAyQ,8VAA+V,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBAClzCV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,0QAA0Q,gYAAkY,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBAC/xCV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,0QAA0Q,gYAAkY,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBACt1CV,KAAK,iFAAkFC,MAAM,iBAAiB,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,6TAA6T,4WAA8W,8SAA8S,sFAAsFC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBACn5CV,KAAK,wFAAyFC,MAAM,iBAAiB,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,0QAA0Q,4WAA8W,8SAA8S,sFAAsFC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBACx6CV,KAAK,0EAA2EC,MAAM,iBAAiB,aAAaC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,MAAMC,KAAK,gCAAgCC,MAAM,oBAAoBC,MAAM,2QAA2Q,gYAAkY,+SAA+SC,MAAM3X,OAAU4X,IAAI,4DAA4DC,KAAK,sBAC/wCV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,gGAAgG,0EAA0E,2GAA2G,uOAAuOC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC/6BV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,gGAAgG,0EAA0E,2GAA2G,sOAAsO,wuCAAwuCC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC/lEV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,gGAAgG,0EAA0E,2GAA2G,sOAAsO,0UAA0UC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACjsCV,KAAK,qEAAsEC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,gGAAgG,iNAAiN,0EAA0E,2GAA2G,sOAAsO,skDAAskDC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACxrFV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,oKAAsK,0EAA0E,2GAA2G,sOAAsO,wjDAAwjDC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC5iFV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,oKAAsK,0EAA0E,2GAA2G,sOAAsO,ouCAAouCC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACjqEV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,oKAAsK,0EAA0E,2GAA2G,sOAAsO,w/CAAw/CC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACr7EV,KAAK,sFAAuFC,MAAM,YAAY,kBAAkBC,MAAM,SAAS,UAAUC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,snDAAsnD,uOAAuOC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAClzEV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,uGAAuG,0GAA0G,iOAAiOC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC31BV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,uGAAuG,0GAA0G,gOAAgO,uuCAAuuCC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC1gEV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,uGAAuG,0GAA0G,gOAAgO,yUAAyU,8DAA8DC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBAC/qCV,KAAK,oEAAqEC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,uGAAuG,iNAAiN,0GAA0G,sOAAsO,wkDAAwkD,8DAA8DC,OAAM,EAAMC,IAAI,4DAA4DC,KAAK,sBACzqFV,KAAK,6EAA8EC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,sBAAsB,mOAAmO,kjDAAkjD,2DAA2DC,OAAM,EAAKC,IAAI,4DAA4DC,KAAK,sBACxxEV,KAAK,sFAAuFC,MAAM,YAAY,kBAAkBC,MAAM,SAASC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,2BAA2BC,MAAM,iBAAiBC,MAAM,qBAAqB,yjDAAyjD,mOAAmO,2DAA2DC,OAAM,EAAKC,IAAI,4DAA4DC,KAAK,sBACtzEV,KAAK,kGAAmGC,MAAM,kBAAkBC,MAAM,UAAUC,MAAM,KAAK,MAAMC,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,KAAK,wBAAwBC,MAAM,wBAAwBC,MAAM,uSAAuS,4FAA4F,oEAAoEC,OAAM,EAAMC,IAAI,iEAAiEC,KAAK,yBAiV53Bvd,GAAA6B,GAAEA,CA9UV,IAAI2b,KACHC,QAAQ,8BAA8BC,QAAQ,sBAC9CD,QAAQ,gBAAgBC,QAAQ,gBAChCD,QAAQ,uBAAuBC,QAAQ,gBACvCD,QAAQ,OAAOC,QAAQ,0BACvBD,QAAQ,SAASC,QAAQ,eACzBD,QAAQ,OAAOC,QAAQ,qBACvBD,QAAQ,mBAAmBC,QAAQ,uBACnCD,QAAQ,iBAAiBC,QAAQ,uBACjCD,QAAQ,UAAUC,QAAQ,0BAC1BD,QAAQ,6BAA6BC,QAAQ,mBAC7CD,QAAQ,QAAQC,QAAQ,iBACxBD,QAAQ,kBAAkBC,QAAQ,oBAClCD,QAAQ,eAAeC,QAAQ,iBAC/BD,QAAQ,qBAAqBC,QAAQ,wBACrCD,QAAQ,+BAA+BC,QAAQ,yBAC/CD,QAAQ,UAAUC,QAAQ,oBAC1BD,QAAQ,QAAQC,QAAQ,cACxBD,QAAQ,cAAcC,QAAQ,iBAC9BD,QAAQ,gBAAgBC,QAAQ,mBAChCD,QAAQ,cAAcC,QAAQ,oBAC9BD,QAAQ,iBAAiBC,QAAQ,gBACjCD,QAAQ,oBAAoBC,QAAQ,sBACpCD,QAAQ,oBAAoBC,QAAQ,sBACpCD,QAAQ,mBAAmBC,QAAQ,qBACnCD,QAAQ,SAASC,QAAQ,gBACzBD,QAAQ,qBAAqBC,QAAQ,oBACrCD,QAAQ,cAAcC,QAAQ,uBAC9BD,QAAQ,aAAaC,QAAQ,uBAC7BD,QAAQ,UAAUC,QAAQ,oBAC1BD,QAAQ,gBAAgBC,QAAQ,mBAChCD,QAAQ,SAASC,QAAQ,eACzBD,QAAQ,UAAUC,QAAQ,qBAC1BD,QAAQ,+BAA+BC,QAAQ,gDAC/CD,QAAQ,qBAAqBC,QAAQ,wBACrCD,QAAQ,qCAAqCC,QAAQ,uCACrDD,QAAQ,cAAcC,QAAQ,yBAC9BD,QAAQ,qBAAqBC,QAAQ,8BACrCD,QAAQ,eAAeC,QAAQ,uCAC/BD,QAAQ,QAAQC,QAAQ,iBACxBD,QAAQ,QAAQC,QAAQ,qBACxBD,QAAQ,oBAAoBC,QAAQ,wBACpCD,QAAQ,qBAAqBC,QAAQ,0CACrCD,QAAQ,WAAWC,QAAQ,oBAC3BD,QAAQ,WAAWC,QAAQ,oBAC3BD,QAAQ,UAAUC,QAAQ,uBAC1BD,QAAQ,SAASC,QAAQ,cACzBD,QAAQ,sBAAsBC,QAAQ,sBACtCD,QAAQ,SAASC,QAAQ,eACzBD,QAAQ,gCAAgCC,QAAQ,sBAChDD,QAAQ,+BAA+BC,QAAQ,qBAC/CD,QAAQ,eAAeC,QAAQ,uBAC/BD,QAAQ,eAAeC,QAAQ,iBAC/BD,QAAQ,eAAeC,QAAQ,iBAC/BD,QAAQ,eAAeC,QAAQ,2CAC/BD,QAAQ,iBAAiBC,QAAQ,0BACjCD,QAAQ,eAAeC,QAAQ,iBAC/BD,QAAQ,eAAeC,QAAQ,sBAC/BD,QAAQ,eAAeC,QAAQ,oCAC/BD,QAAQ,UAAUC,QAAQ,0BAC1BD,QAAQ,QAAQC,QAAQ,aACxBD,QAAQ,8BAA8BC,QAAQ,wBAC9CD,QAAQ,8BAA8BC,QAAQ,wBAC9CD,QAAQ,kBAAkBC,QAAQ,mCAClCD,QAAQ,qBAAqBC,QAAQ,iBACrCD,QAAQ,sBAAsBC,QAAQ,mBACtCD,QAAQ,sBAAsBC,QAAQ,kBACtCD,QAAQ,mBAAmBC,QAAQ,oBACnCD,QAAQ,gBAAgBC,QAAQ,kBAChCD,QAAQ,mCAAmCC,QAAQ,sBACnDD,QAAQ,6BAA6BC,QAAQ,gBAC7CD,QAAQ,0BAA0BC,QAAQ,sBAC1CD,QAAQ,SAASC,QAAQ,sBACzBD,QAAQ,kBAAkBC,QAAQ,oBAClCD,QAAQ,UAAUC,QAAQ,0BAC1BD,QAAQ,YAAYC,QAAQ,mBAC5BD,QAAQ,OAAOC,QAAQ,2BACvBD,QAAQ,gBAAgBC,QAAQ,iBAChCD,QAAQ,YAAYC,QAAQ,uBAC5BD,QAAQ,oBAAoBC,QAAQ,0BACpCD,QAAQ,UAAUC,QAAQ,iBAC1BD,QAAQ,kBAAkBC,QAAQ,qBAClCD,QAAQ,WAAWC,QAAQ,gBAC3BD,QAAQ,gBAAgBC,QAAQ,uBAChCD,QAAQ,qBAAqBC,QAAQ,kBACrCD,QAAQ,kBAAkBC,QAAQ,iBAClCD,QAAQ,2BAA2BC,QAAQ,oBAC3CD,QAAQ,yBAAyBC,QAAQ,qBACzCD,QAAQ,iCAAiCC,QAAQ,kCACjDD,QAAQ,8BAA8BC,QAAQ,kBAC9CD,QAAQ,uBAAuBC,QAAQ,oBACvCD,QAAQ,qBAAqBC,QAAQ,qBACrCD,QAAQ,0BAA0BC,QAAQ,uBAC1CD,QAAQ,oBAAoBC,QAAQ,uBACpCD,QAAQ,6BAA6BC,QAAQ,uBAC7CD,QAAQ,kBAAkBC,QAAQ,yBAClCD,QAAQ,mBAAmBC,QAAQ,yBACnCD,QAAQ,sBAAsBC,QAAQ,sCACtCD,QAAQ,kBAAkBC,QAAQ,uBAClCD,QAAQ,kBAAkBC,QAAQ,qBAClCD,QAAQ,iBAAiBC,QAAQ,qBACjCD,QAAQ,iBAAiBC,QAAQ,kBACjCD,QAAQ,oBAAoBC,QAAQ,kBACpCD,QAAQ,2CAA2CC,QAAQ,kCAC3DD,QAAQ,wCAAwCC,QAAQ,kBACxDD,QAAQ,oBAAoBC,QAAQ,iBACpCD,QAAQ,uCAAuCC,QAAQ,2BACvDD,QAAQ,sBAAsBC,QAAQ,qBACtCD,QAAQ,oBAAoBC,QAAQ,kBACpCD,QAAQ,6BAA6BC,QAAQ,sBAC7CD,QAAQ,YAAYC,QAAQ,iBAC5BD,QAAQ,oBAAoBC,QAAQ,oCACpCD,QAAQ,kBAAkBC,QAAQ,oBAClCD,QAAQ,eAAeC,QAAQ,sBAC/BD,QAAQ,SAASC,QAAQ,iBACzBD,QAAQ,iBAAiBC,QAAQ,wBACjCD,QAAQ,gBAAgBC,QAAQ,iBAChCD,QAAQ,2BAA2BC,QAAQ,yBAC3CD,QAAQ,kBAAkBC,QAAQ,oBAClCD,QAAQ,iBAAiBC,QAAQ,wBACjCD,QAAQ,gBAAgBC,QAAQ,0BAChCD,QAAQ,WAAWC,QAAQ,oBAC3BD,QAAQ,oBAAoBC,QAAQ,eACpCD,QAAQ,gBAAgBC,QAAQ,uCAChCD,QAAQ,SAASC,QAAQ,gBACzBD,QAAQ,yBAAyBC,QAAQ,sBACzCD,QAAQ,WAAWC,QAAQ,mBAC3BD,QAAQ,iBAAiBC,QAAQ,mBACjCD,QAAQ,SAASC,QAAQ,0BACzBD,QAAQ,mBAAmBC,QAAQ,0BACnCD,QAAQ,OAAOC,QAAQ,eACvBD,QAAQ,aAAaC,QAAQ,sBAC7BD,QAAQ,iBAAiBC,QAAQ,wBACjCD,QAAQ,cAAcC,QAAQ,uBAC9BD,QAAQ,OAAOC,QAAQ,cACvBD,QAAQ,iBAAiBC,QAAQ,oBACjCD,QAAQ,aAAaC,QAAQ,qBAC7BD,QAAQ,kBAAkBC,QAAQ,qBAClCD,QAAQ,gBAAgBC,QAAQ,iDAChCD,QAAQ,YAAYC,QAAQ,gCAC5BD,QAAQ,yBAAyBC,QAAQ,uBACzCD,QAAQ,UAAUC,QAAQ,oBAC1BD,QAAQ,eAAeC,QAAQ,gBAC/BD,QAAQ,aAAaC,QAAQ,kBAC7BD,QAAQ,YAAYC,QAAQ,oBAC5BD,QAAQ,uBAAuBC,QAAQ,sBACvCD,QAAQ,wBAAwBC,QAAQ,uBACxCD,QAAQ,YAAYC,QAAQ,uBAC5BD,QAAQ,kBAAkBC,QAAQ,yBAClCD,QAAQ,SAASC,QAAQ,oBACzBD,QAAQ,aAAaC,QAAQ,oBAC7BD,QAAQ,SAASC,QAAQ,mBACzBD,QAAQ,cAAcC,QAAQ,sBAC9BD,QAAQ,YAAYC,QAAQ,mBAC5BD,QAAQ,yCAAyCC,QAAQ,2CACzDD,QAAQ,OAAOC,QAAQ,4BACvBD,QAAQ,2BAA2BC,QAAQ,oBAC3CD,QAAQ,iCAAiCC,QAAQ,0BACjDD,QAAQ,eAAeC,QAAQ,oBAC/BD,QAAQ,aAAaC,QAAQ,oBAC7BD,QAAQ,iBAAiBC,QAAQ,wBACjCD,QAAQ,SAASC,QAAQ,2BACzBD,QAAQ,UAAUC,QAAQ,gBAC1BD,QAAQ,qBAAqBC,QAAQ,oBACrCD,QAAQ,yBAAyBC,QAAQ,wBACzCD,QAAQ,SAASC,QAAQ,eACzBD,QAAQ,SAASC,QAAQ,oBACzBD,QAAQ,SAASC,QAAQ,wBACzBD,QAAQ,UAAUC,QAAQ,oBAC1BD,QAAQ,gBAAgBC,QAAQ,qBAChCD,QAAQ,eAAeC,QAAQ,oBAC/BD,QAAQ,UAAUC,QAAQ,oBAC1BD,QAAQ,eAAeC,QAAQ,qBAC/BD,QAAQ,oBAAoBC,QAAQ,iBACpCD,QAAQ,mBAAmBC,QAAQ,6BACnCD,QAAQ,kBAAkBC,QAAQ,qBAClCD,QAAQ,OAAOC,QAAQ,cACvBD,QAAQ,qBAAqBC,QAAQ,mBACrCD,QAAQ,mBAAmBC,QAAQ,iBACnCD,QAAQ,iCAAiCC,QAAQ,+BACjDD,QAAQ,wBAAwBC,QAAQ,sBACxCD,QAAQ,qBAAqBC,QAAQ,gBACrCD,QAAQ,cAAcC,QAAQ,qBAC9BD,QAAQ,iBAAiBC,QAAQ,qBACjCD,QAAQ,eAAeC,QAAQ,yBAC/BD,QAAQ,WAAWC,QAAQ,sBAC3BD,QAAQ,QAAQC,QAAQ,qBACxBD,QAAQ,WAAWC,QAAQ,qBAC3BD,QAAQ,YAAYC,QAAQ,2BAC5BD,QAAQ,QAAQC,QAAQ,wBACxBD,QAAQ,0BAA0BC,QAAQ,uBAC1CD,QAAQ,QAAQC,QAAQ,uBACxBD,QAAQ,oCAAoCC,QAAQ,sCACpDD,QAAQ,aAAaC,QAAQ,wBAC7BD,QAAQ,MAAMC,QAAQ,uBACtBD,QAAQ,WAAWC,QAAQ,gBAC3BD,QAAQ,kBAAkBC,QAAQ,sBAClCD,QAAQ,kBAAkBC,QAAQ,eAClCD,QAAQ,mCAAmCC,QAAQ,gBACnDD,QAAQ,iCAAiCC,QAAQ,oBACjDD,QAAQ,2BAA2BC,QAAQ,iBAC3CD,QAAQ,kBAAkBC,QAAQ,oBAClCD,QAAQ,iBAAiBC,QAAQ,kBACjCD,QAAQ,oBAAoBC,QAAQ,kBACpCD,QAAQ,gBAAgBC,QAAQ,sBAChCD,QAAQ,iBAAiBC,QAAQ,kBACjCD,QAAQ,gBAAgBC,QAAQ,gBAChCD,QAAQ,OAAOC,QAAQ,cACvBD,QAAQ,iBAAiBC,QAAQ,oBACjCD,QAAQ,eAAeC,QAAQ,gCAC/BD,QAAQ,WAAWC,QAAQ,wBAC3BD,QAAQ,eAAeC,QAAQ,wBAC/BD,QAAQ,mBAAmBC,QAAQ,2BACnCD,QAAQ,2BAA2BC,QAAQ,kBAC3CD,QAAQ,iBAAiBC,QAAQ,cACjCD,QAAQ,uBAAuBC,QAAQ,qBACvCD,QAAQ,mBAAmBC,QAAQ,qBACnCD,QAAQ,gBAAgBC,QAAQ,uBAChCD,QAAQ,sBAAsBC,QAAQ,uBACtCD,QAAQ,sBAAsBC,QAAQ,oBACtCD,QAAQ,sCAAsCC,QAAQ,6BACtDD,QAAQ,yBAAyBC,QAAQ,yBACzCD,QAAQ,uBAAuBC,QAAQ,uBACvCD,QAAQ,wBAAwBC,QAAQ,6BACxCD,QAAQ,uBAAuBC,QAAQ,qCACvCD,QAAQ,qBAAqBC,QAAQ,wBACrCD,QAAQ,mBAAmBC,QAAQ,0BACnCD,QAAQ,iBAAiBC,QAAQ,uBACjCD,QAAQ,gBAAgBC,QAAQ,4BAChCD,QAAQ,kCAAkCC,QAAQ,yBAClDD,QAAQ,iBAAiBC,QAAQ,sBACjCD,QAAQ,2BAA2BC,QAAQ,oBAC3CD,QAAQ,0BAA0BC,QAAQ,wBAC1CD,QAAQ,yBAAyBC,QAAQ,yBACzCD,QAAQ,oBAAoBC,QAAQ,0BACpCD,QAAQ,6BAA6BC,QAAQ,2BAC7CD,QAAQ,oBAAoBC,QAAQ,uBACpCD,QAAQ,oCAAoCC,QAAQ,2BACpDD,QAAQ,yCAAyCC,QAAQ,kBACzDD,QAAQ,yCAAyCC,QAAQ,kBACzDD,QAAQ,0BAA0BC,QAAQ,uBAC1CD,QAAQ,iBAAiBC,QAAQ,mBACjCD,QAAQ,gBAAgBC,QAAQ,oBAChCD,QAAQ,4BAA4BC,QAAQ,+BAC5CD,QAAQ,gBAAgBC,QAAQ,eAChCD,QAAQ,qBAAqBC,QAAQ,yBACrCD,QAAQ,sBAAsBC,QAAQ,mBACtCD,QAAQ,uCAAuCC,QAAQ,yCACvDD,QAAQ,eAAeC,QAAQ,eAC/BD,QAAQ,2BAA2BC,QAAQ,qBAC3CD,QAAQ,gBAAgBC,QAAQ,oBAChCD,QAAQ,aAAaC,QAAQ,oBAC7BD,QAAQ,mBAAmBC,QAAQ,mBACnCD,QAAQ,mBAAmBC,QAAQ,8BACnCD,QAAQ,mBAAmBC,QAAQ,oBACnCD,QAAQ,kBAAkBC,QAAQ,oBAClCD,QAAQ,QAAQC,QAAQ,eACxBD,QAAQ,mBAAmBC,QAAQ,qBACnCD,QAAQ,UAAUC,QAAQ,wBAC1BD,QAAQ,mBAAmBC,QAAQ,wBACnCD,QAAQ,SAASC,QAAQ,oBACzBD,QAAQ,WAAWC,QAAQ,kBAC3BD,QAAQ,cAAcC,QAAQ,6BAC9BD,QAAQ,UAAUC,QAAQ,qBAC1BD,QAAQ,oBAAoBC,QAAQ,uBACpCD,QAAQ,QAAQC,QAAQ,cACxBD,QAAQ,OAAOC,QAAQ,cACvBD,QAAQ,gBAAgBC,QAAQ,iBAChCD,QAAQ,mBAAmBC,QAAQ,eACnCD,QAAQ,kBAAkBC,QAAQ,kBAClCD,QAAQ,oBAAoBC,QAAQ,4BACpCD,QAAQ,6BAA6BC,QAAQ,uBAC7CD,QAAQ,kBAAkBC,QAAQ,oBAClCD,QAAQ,oBAAoBC,QAAQ,mBACpCD,QAAQ,6BAA6BC,QAAQ,2BAC7CD,QAAQ,wBAAwBC,QAAQ,qBACxCD,QAAQ,QAAQC,QAAQ,eACxBD,QAAQ,YAAYC,QAAQ,mBAC5BD,QAAQ,SAASC,QAAQ,qBACzBD,QAAQ,cAAcC,QAAQ,uBAC9BD,QAAQ,aAAaC,QAAQ,uBAC7BD,QAAQ,SAASC,QAAQ,wBACzBD,QAAQ,QAAQC,QAAQ,oBACxBD,QAAQ,QAAQC,QAAQ,eACxBD,QAAQ,uBAAuBC,QAAQ,qBACvCD,QAAQ,0CAA0CC,QAAQ,4CAC1DD,QAAQ,iBAAiBC,QAAQ,iBACjCD,QAAQ,YAAYC,QAAQ,wBAC5BD,QAAQ,yBAAyBC,QAAQ,wBACzCD,QAAQ,uBAAuBC,QAAQ,sBACvCD,QAAQ,YAAYC,QAAQ,sBAC5BD,QAAQ,WAAWC,QAAQ,mBAC3BD,QAAQ,OAAOC,QAAQ,oBACvBD,QAAQ,OAAOC,QAAQ,kBACvBD,QAAQ,OAAOC,QAAQ,kBACvBD,QAAQ,QAAQC,QAAQ,kBACxBD,QAAQ,OAAOC,QAAQ,kBACvBD,QAAQ,QAAQC,QAAQ,kBACxBD,QAAQ,QAAQC,QAAQ,cACxBD,QAAQ,UAAUC,QAAQ,kBAC1BD,QAAQ,OAAOC,QAAQ,oBACvBD,QAAQ,SAASC,QAAQ,4BACzBD,QAAQ,UAAUC,QAAQ,oBAC1BD,QAAQ,aAAaC,QAAQ,qBAC7BD,QAAQ,YAAYC,QAAQ,4BAC5BD,QAAQ,SAASC,QAAQ,oBACzBD,QAAQ,UAAUC,QAAQ,cAC1BD,QAAQ,eAAeC,QAAQ,eAC/BD,QAAQ,0BAA0BC,QAAQ,+BAC1CD,QAAQ,kBAAkBC,QAAQ,mBAClCD,QAAQ,QAAQC,QAAQ,cACxBD,QAAQ,yCAAyCC,QAAQ,0CAuB9C1d,GAAAwd,YAAWA,GN03DjB,SAASvd,EAAQD,EAASH,GAE/B,YOpwED,IAAYqB,GAAKrB,EAAM,GAGnB8d,EAAO,SAACrZ,GAAO,MAAApD,GAAAU,cAAA,OAAKgc,QAAM,UAAS1c,EAAAU,cAAA,OAAKic,IAAI,sBAAsBC,MAAM,SAG5E9c,QAAA6E,eAAA7F,EAAA,cAAA2E,OAAA,IPowEC3E,aOpwEc2d,GPywET,SAAS1d,EAAQD,EAASH,GAE/B,YACA,IAAIke,GAActd,MAAQA,KAAKsd,YAAe,SAAUC,EAAYlZ,EAAQC,EAAK8X,GAC7E,GAA2Hnc,GAAvHJ,EAAIoB,UAAUc,OAAQmB,EAAQ,EAAJrD,EAAQwE,EAAkB,OAAT+X,EAAgBA,EAAO7b,OAAOiU,yBAAyBnQ,EAAQC,GAAO8X,CACrH,IAAuB,gBAAZoB,UAAoD,kBAArBA,SAAQC,SAAyBva,EAAIsa,QAAQC,SAASF,EAAYlZ,EAAQC,EAAK8X,OACpH,KAAK,GAAIhQ,GAAImR,EAAWxb,OAAS,EAAGqK,GAAK,EAAGA,KAASnM,EAAIsd,EAAWnR,MAAIlJ,GAAS,EAAJrD,EAAQI,EAAEiD,GAAKrD,EAAI,EAAII,EAAEoE,EAAQC,EAAKpB,GAAKjD,EAAEoE,EAAQC,KAASpB,EAChJ,OAAOrD,GAAI,GAAKqD,GAAK3C,OAAO6E,eAAef,EAAQC,EAAKpB,GAAIA,GQtxEjEwa,EAAAte,EAAqC,EACrCA,GAAO,EACP,IAAAue,GAAAve,EAAoC,GAgBpCwe,EAAA,mBAAAA,KACE5d,KAAAoB,GAAKuc,EAAAvc,GACLpB,KAAA+c,YAAcY,EAAAZ,YACd/c,KAAA6d,cAAgBF,EAAAZ,YAAY3U,OAAO,WAEvBpI,KAAA8d,OACVC,QAAS,KACTC,QAAS,KACTC,KAAM,KACN1B,KAAM,KACNC,KAAM,MA+BRxc,KAAAke,UACGC,OAAQ,OAAQC,GAAI,OAAOD,OAAQ,UAAWC,GAAI,OAAOD,OAAQ,WAAYC,GAAI,OACjFD,OAAQ,QAASC,GAAI,OAAOD,OAAQ,QAASC,GAAI,OAAOD,OAAQ,QAASC,GAAI,OAC7ED,OAAQ,mBAAoBC,GAAI,OAAOD,OAAQ,iBAAkBC,GAAI,OAAOD,OAAQ,QAASC,GAAI,OACjGD,OAAQ,WAAYC,GAAI,OAAOD,OAAQ,eAAgBC,GAAI,OAAOD,OAAQ,qBAAsBC,GAAI,OACpGD,OAAQ,cAAeC,GAAI,OAAOD,OAAQ,OAAQC,GAAI,OAAOD,OAAQ,UAAWC,GAAI,OACpFD,OAAQ,aAAcC,GAAI,OAAOD,OAAQ,QAASC,GAAI,OAAOD,OAAQ,SAAUC,GAAI,OACnFD,OAAQ,iBAAkBC,GAAI,OAAOD,OAAQ,sBAAuBC,GAAI,OACxED,OAAQ,WAAYC,GAAI,OAAOD,OAAQ,UAAWC,GAAI,OAAOD,OAAQ,oBAAqBC,GAAI,OAC9FD,OAAQ,iBAAkBC,GAAI,OAAOD,OAAQ,UAAWC,GAAI,OAAOD,OAAQ,YAAaC,GAAI,OAC5FD,OAAQ,YAAaC,GAAI,OAE9B,MAxCY7d,QAAA6E,eAAIwY,EAAAtd,UAAA,URsxEPqE,IQtxEG,cAAAoF,GAAA/J,IAAe,OAAOA,MAAKke,QAAQG,OAAO,SAACF,GAAU,MAAAA,GAAOC,KAAOrU,EAAK+T,MAAMtB,QR0xEjF1X,YAAY,EACZD,cAAc,IQzxEXtE,OAAA6E,eAAIwY,EAAAtd,UAAA,WR6xEPqE,IQ7xEG,cAAAoF,GAAA/J,IAAgB,OAAOA,MAAKke,QAAQG,OAAO,SAACF,GAAU,MAAAA,GAAOC,KAAOrU,EAAK+T,MAAMvB,QRiyElFzX,YAAY,EACZD,cAAc,IQhyEXtE,OAAA6E,eAAIwY,EAAAtd,UAAA,URoyEPqE,IQpyEG,cAAAoF,GAAA/J,IACR,OAAO2d,GAAAvc,GACJid,OAAO,SAAC1B,GAAc,MAAAA,GAAKN,KAAKT,SAAS7R,EAAK+T,MAAMC,WACpDhD,GAAG,QACHzB,UACAlR,URuyEEtD,YAAY,EACZD,cAAc,IQryEXtE,OAAA6E,eAAIwY,EAAAtd,UAAA,URwyEPqE,IQxyEG,WAAsB,MAAO3E,MAAK8d,MAAMC,QAAQO,MAAM,KAAK,IRyyE9DxZ,YAAY,EACZD,cAAc,IQxyEXtE,OAAA6E,eAAIwY,EAAAtd,UAAA;AR2yEPqE,IQ3yEG,cAAAoF,GAAA/J,IAAqB,OAAO2d,GAAAvc,GAAGid,OAAO,SAAC1B,GAAe,OAExDA,EAAKN,KAAKT,SAAS7R,EAAK+T,MAAMC,UAC9BpB,EAAKN,KAAKT,SAAS7R,EAAKwU,OAAS,SACjC5B,EAAKN,KAAKT,SAAS7R,EAAKwU,OAAS,WAErC5B,EAAKJ,KAAKX,SAAS7R,EAAK+T,MAAMvB,OAC9BI,EAAKH,KAAKZ,SAAS7R,EAAK+T,MAAMtB,OAC9BG,EAAKL,KAAKV,SAAS7R,EAAK+T,MAAMG,SR8yE3BnZ,YAAY,EACZD,cAAc,IQ70ErByY,GAACI,EAAAvT,YRi1EKyT,EAAMtd,UAAW,QAAS,QQz0EhCgd,GAACI,EAAAra,UR40EKua,EAAMtd,UAAW,SAAU,MQ10EjCgd,GAACI,EAAAra,UR60EKua,EAAMtd,UAAW,UAAW,MQ30ElCgd,GAACI,EAAAra,UR80EKua,EAAMtd,UAAW,SAAU,MQt0EjCgd,GAACI,EAAAra,URy0EKua,EAAMtd,UAAW,SAAU,MQv0EjCgd,GAACI,EAAAra,UR00EKua,EAAMtd,UAAW,SAAU,MQhzEnCsd,IAEWre,GAAA+B,MAAQ,GAAIsc,GACvBrd,OAAA6E,eAAA7F,EAAA,cAAA2E,OAAA,IRkzEC3E,aQlzEcA,EAAA+B,OR00ET,SAAS9B,EAAQD,GSp5EvBC,EAAAD,QAAAif,UT05EM,SAAShf,EAAQD,EAASH,GAE/B,YU55ED,IAAYqB,GAAKrB,EAAM,GAInBqf,EAAO,SAAC5a,GV45EP,GU55EQzC,GAAAyC,EAAAzC,EACX,OACGX,GAAAU,cAAA,OAAIud,UAAS,YACRje,EAAAU,cAAA,KAAG,MAEHV,EAAAU,cAAA,SAAOwd,OAAQtB,MAAS,QAASF,QAAM,cACrC1c,EAAAU,cAAA,UAAQ,KAAC,cACTV,EAAAU,cAAA,QAAM,KACJV,EAAAU,cAAA,KAAG,KACDV,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ,aAC7B5c,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ,cAC7B5c,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ,WAC7B5c,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ,UAC7B5c,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ,WAC7B5c,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ,cAC7B5c,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ,cAC7B5c,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,OAAO,uBAGhC5c,EAAAU,cAAA,QAAM,KACLC,EAAGiH,IAAI,SAAC4L,EAAM7H,GAAM,MACnB3L,GAAAU,cAAA,MAAImD,IAAK8H,GACP3L,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ5c,EAAAU,cAAA,OAAK,KAAE8S,EAAKmI,OACzC3b,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,OAAQF,QAAM,UAAS1c,EAAAU,cAAA,OAAK,KAAE8S,EAAKoI,OACxD5b,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ5c,EAAAU,cAAA,OAAK,KAAE8S,EAAKqI,OACzC7b,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ5c,EAAAU,cAAA,OAAK,KAAE8S,EAAKsI,OACzC9b,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QAAQ5c,EAAAU,cAAA,OAAK,KAAE8S,EAAKuI,OACzC/b,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QACnB5c,EAAAU,cAAA,KAAGkD,OAAO,SAAQua,UAAS,eAAe3K,EAAK4I,KAC/Cpc,EAAAU,cAAA,KAAG,MACHV,EAAAU,cAAA,KAAG,MACHV,EAAAU,cAAA,OAAK,KAAE8S,EAAKyI,OACZjc,EAAAU,cAAA,KAAG,MACHV,EAAAU,cAAA,KAAG,MACHV,EAAAU,cAAA,QAAMgc,QAAM,UAAUlJ,EAAKwI,OAE7Bhc,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,QACnB5c,EAAAU,cAAA,OAAI0d,YAAW,oCAAoCF,OAAQG,OAAS,QAAQre,EAAAU,cAAA,OAAK,KAAE,WAAY,MAAG,UAEpGV,EAAAU,cAAA,MAAIwd,OAAQtB,MAAS,MAAO0B,MAAM,UAChCte,EAAAU,cAAA,SAAOyR,KAAK,WAAWoM,QAAQ,gBAAeC,WAAU,oBAK9Dxe,EAAAU,cAAA,SAAOgc,QAAM,qBACX1c,EAAAU,cAAA,KAAG,KACDV,EAAAU,cAAA,KAAG,UAQnBZ,QAAA6E,eAAA7F,EAAA,cAAA2E,OAAA,IVi6EC3E,aUj6Eckf","file":"./dist/bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar React = __webpack_require__(1);\r\n\tvar ReactDom = __webpack_require__(7);\r\n\tvar store_1 = __webpack_require__(6);\r\n\tvar mapa_1 = __webpack_require__(5);\r\n\tvar basex_1 = __webpack_require__(8);\r\n\tvar App = (function (_super) {\r\n\t    __extends(App, _super);\r\n\t    function App() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    App.prototype.render = function () {\r\n\t        return (React.createElement(\"div\", {id: \"container\"}, \r\n\t            React.createElement(mapa_1.default, null), \r\n\t            React.createElement(basex_1.default, {db: store_1.default})));\r\n\t    };\r\n\t    return App;\r\n\t}(React.Component));\r\n\tReactDom.render(React.createElement(App, {store: store_1.default}), document.getElementById('app'));\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = React;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tregisterGlobals();\n\texports._ = {\n\t    quickDiff: quickDiff,\n\t    resetGlobalState: resetGlobalState\n\t};\n\texports.extras = {\n\t    allowStateChanges: allowStateChanges,\n\t    getDependencyTree: getDependencyTree,\n\t    getObserverTree: getObserverTree,\n\t    isComputingDerivation: isComputingDerivation,\n\t    resetGlobalState: resetGlobalState,\n\t    trackTransitions: trackTransitions\n\t};\n\tfunction autorun(view, scope) {\n\t    assertUnwrapped(view, \"autorun methods cannot have modifiers\");\n\t    invariant(typeof view === \"function\", \"autorun expects a function\");\n\t    invariant(view.length === 0, \"autorun expects a function without arguments\");\n\t    if (scope)\n\t        view = view.bind(scope);\n\t    var reaction = new Reaction(view.name || \"Autorun\", function () {\n\t        this.track(view);\n\t    });\n\t    reaction.schedule();\n\t    return reaction.getDisposer();\n\t}\n\texports.autorun = autorun;\n\tfunction when(predicate, effect, scope) {\n\t    var disposeImmediately = false;\n\t    var disposer = autorun(function () {\n\t        if (predicate.call(scope)) {\n\t            if (disposer)\n\t                disposer();\n\t            else\n\t                disposeImmediately = true;\n\t            effect.call(scope);\n\t        }\n\t    });\n\t    if (disposeImmediately)\n\t        disposer();\n\t    return disposer;\n\t}\n\texports.when = when;\n\tfunction autorunUntil(predicate, effect, scope) {\n\t    deprecated(\"`autorunUntil` is deprecated, please use `when`.\");\n\t    return when.apply(null, arguments);\n\t}\n\texports.autorunUntil = autorunUntil;\n\tfunction autorunAsync(func, delay, scope) {\n\t    if (delay === void 0) { delay = 1; }\n\t    if (scope)\n\t        func = func.bind(scope);\n\t    var isScheduled = false;\n\t    var r = new Reaction(func.name || \"AutorunAsync\", function () {\n\t        if (!isScheduled) {\n\t            isScheduled = true;\n\t            setTimeout(function () {\n\t                isScheduled = false;\n\t                if (!r.isDisposed)\n\t                    r.track(func);\n\t            }, delay);\n\t        }\n\t    });\n\t    r.schedule();\n\t    return r.getDisposer();\n\t}\n\texports.autorunAsync = autorunAsync;\n\tfunction computed(targetOrExpr, keyOrScope, baseDescriptor, options) {\n\t    if (arguments.length < 3 && typeof targetOrExpr === \"function\")\n\t        return computedExpr(targetOrExpr, keyOrScope);\n\t    return computedDecorator.apply(null, arguments);\n\t}\n\texports.computed = computed;\n\tfunction computedExpr(expr, scope) {\n\t    var _a = getValueModeFromValue(expr, ValueMode.Recursive), mode = _a[0], value = _a[1];\n\t    return new ComputedValue(value, scope, mode === ValueMode.Structure, value.name || \"ComputedValue\");\n\t}\n\tfunction computedDecorator(target, key, baseDescriptor, options) {\n\t    if (arguments.length === 1) {\n\t        var options_1 = target;\n\t        return function (target, key, baseDescriptor) { return computedDecorator.call(null, target, key, baseDescriptor, options_1); };\n\t    }\n\t    invariant(baseDescriptor && baseDescriptor.hasOwnProperty(\"get\"), \"@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'\");\n\t    assertPropertyConfigurable(target, key);\n\t    var descriptor = {};\n\t    var getter = baseDescriptor.get;\n\t    invariant(typeof target === \"object\", \"The @observable decorator can only be used on objects\", key);\n\t    invariant(typeof getter === \"function\", \"@observable expects a getter function if used on a property.\", key);\n\t    invariant(!baseDescriptor.set, \"@observable properties cannot have a setter.\", key);\n\t    invariant(getter.length === 0, \"@observable getter functions should not take arguments.\", key);\n\t    descriptor.configurable = true;\n\t    descriptor.enumerable = false;\n\t    descriptor.get = function () {\n\t        setObservableObjectProperty(asObservableObject(this, undefined, ValueMode.Recursive), key, options && options.asStructure === true ? asStructure(getter) : getter);\n\t        return this[key];\n\t    };\n\t    descriptor.set = throwingComputedValueSetter;\n\t    if (!baseDescriptor) {\n\t        Object.defineProperty(target, key, descriptor);\n\t    }\n\t    else {\n\t        return descriptor;\n\t    }\n\t}\n\tfunction throwingComputedValueSetter() {\n\t    throw new Error(\"[ComputedValue] It is not allowed to assign new values to computed properties.\");\n\t}\n\tfunction createTransformer(transformer, onCleanup) {\n\t    invariant(typeof transformer === \"function\" && transformer.length === 1, \"createTransformer expects a function that accepts one argument\");\n\t    var objectCache = {};\n\t    var resetId = globalState.resetId;\n\t    var Transformer = (function (_super) {\n\t        __extends(Transformer, _super);\n\t        function Transformer(sourceIdentifier, sourceObject) {\n\t            _super.call(this, function () { return transformer(sourceObject); }, null, false, \"Transformer-\" + transformer.name + \"-\" + sourceIdentifier);\n\t            this.sourceIdentifier = sourceIdentifier;\n\t            this.sourceObject = sourceObject;\n\t        }\n\t        Transformer.prototype.onBecomeUnobserved = function () {\n\t            var lastValue = this.value;\n\t            _super.prototype.onBecomeUnobserved.call(this);\n\t            delete objectCache[this.sourceIdentifier];\n\t            if (onCleanup)\n\t                onCleanup(lastValue, this.sourceObject);\n\t        };\n\t        return Transformer;\n\t    }(ComputedValue));\n\t    return function (object) {\n\t        if (resetId !== globalState.resetId) {\n\t            objectCache = {};\n\t            resetId = globalState.resetId;\n\t        }\n\t        var identifier = getMemoizationId(object);\n\t        var reactiveTransformer = objectCache[identifier];\n\t        if (reactiveTransformer)\n\t            return reactiveTransformer.get();\n\t        reactiveTransformer = objectCache[identifier] = new Transformer(identifier, object);\n\t        return reactiveTransformer.get();\n\t    };\n\t}\n\texports.createTransformer = createTransformer;\n\tfunction getMemoizationId(object) {\n\t    if (object === null || typeof object !== \"object\")\n\t        throw new Error(\"[mobx] transform expected some kind of object, got: \" + object);\n\t    var tid = object.$transformId;\n\t    if (tid === undefined) {\n\t        tid = getNextId();\n\t        Object.defineProperty(object, '$transformId', {\n\t            configurable: true,\n\t            writable: true,\n\t            enumerable: false,\n\t            value: tid\n\t        });\n\t    }\n\t    return tid;\n\t}\n\tfunction expr(expr, scope) {\n\t    if (!isComputingDerivation())\n\t        console.warn(\"[mobx.expr] 'expr' should only be used inside other reactive functions.\");\n\t    return computed(expr, scope).get();\n\t}\n\texports.expr = expr;\n\tfunction extendObservable(target) {\n\t    var properties = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        properties[_i - 1] = arguments[_i];\n\t    }\n\t    invariant(arguments.length >= 2, \"extendObservable expected 2 or more arguments\");\n\t    invariant(typeof target === \"object\", \"extendObservable expects an object as first argument\");\n\t    invariant(!(target instanceof ObservableMap), \"extendObservable should not be used on maps, use map.merge instead\");\n\t    properties.forEach(function (propSet) {\n\t        invariant(typeof propSet === \"object\", \"all arguments of extendObservable should be objects\");\n\t        extendObservableHelper(target, propSet, ValueMode.Recursive, null);\n\t    });\n\t    return target;\n\t}\n\texports.extendObservable = extendObservable;\n\tfunction extendObservableHelper(target, properties, mode, name) {\n\t    var adm = asObservableObject(target, name, mode);\n\t    for (var key in properties)\n\t        if (properties.hasOwnProperty(key)) {\n\t            if (target === properties && !isPropertyConfigurable(target, key))\n\t                continue;\n\t            setObservableObjectProperty(adm, key, properties[key]);\n\t        }\n\t    return target;\n\t}\n\tfunction allowStateChanges(allowStateChanges, func) {\n\t    var prev = globalState.allowStateChanges;\n\t    globalState.allowStateChanges = allowStateChanges;\n\t    var res = func();\n\t    globalState.allowStateChanges = prev;\n\t    return res;\n\t}\n\tvar transitionTracker = null;\n\tfunction reportTransition(node, state, changed) {\n\t    if (changed === void 0) { changed = false; }\n\t    if (transitionTracker)\n\t        transitionTracker.emit({\n\t            id: node.id,\n\t            name: node.name + \"@\" + node.id,\n\t            node: node, state: state, changed: changed\n\t        });\n\t}\n\tfunction getDependencyTree(thing) {\n\t    return nodeToDependencyTree(thing);\n\t}\n\tfunction nodeToDependencyTree(node) {\n\t    var result = {\n\t        id: node.id,\n\t        name: node.name + \"@\" + node.id\n\t    };\n\t    if (node.observing && node.observing.length)\n\t        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n\t    return result;\n\t}\n\tfunction getObserverTree(thing) {\n\t    return nodeToObserverTree(thing);\n\t}\n\tfunction nodeToObserverTree(node) {\n\t    var result = {\n\t        id: node.id,\n\t        name: node.name + \"@\" + node.id\n\t    };\n\t    if (node.observers && node.observers.length)\n\t        result.observers = unique(node.observers).map(nodeToObserverTree);\n\t    return result;\n\t}\n\tfunction createConsoleReporter(extensive) {\n\t    var lines = [];\n\t    var scheduled = false;\n\t    return function (line) {\n\t        if (extensive || line.changed)\n\t            lines.push(line);\n\t        if (!scheduled) {\n\t            scheduled = true;\n\t            setTimeout(function () {\n\t                console[console[\"table\"] ? \"table\" : \"dir\"](lines);\n\t                lines = [];\n\t                scheduled = false;\n\t            }, 1);\n\t        }\n\t    };\n\t}\n\tfunction trackTransitions(extensive, onReport) {\n\t    if (extensive === void 0) { extensive = false; }\n\t    if (!transitionTracker)\n\t        transitionTracker = new SimpleEventEmitter();\n\t    var reporter = onReport\n\t        ? function (line) {\n\t            if (extensive || line.changed)\n\t                onReport(line);\n\t        }\n\t        : createConsoleReporter(extensive);\n\t    var disposer = transitionTracker.on(reporter);\n\t    return once(function () {\n\t        disposer();\n\t        if (transitionTracker.listeners.length === 0)\n\t            transitionTracker = null;\n\t    });\n\t}\n\tfunction isObservable(value, property) {\n\t    if (value === null || value === undefined)\n\t        return false;\n\t    if (property !== undefined) {\n\t        if (value instanceof ObservableMap || value instanceof ObservableArray)\n\t            throw new Error(\"[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n\t        else if (isObservableObject(value)) {\n\t            var o = value.$mobx;\n\t            return o.values && !!o.values[property];\n\t        }\n\t        return false;\n\t    }\n\t    return !!value.$mobx || value instanceof Atom || value instanceof Reaction || value instanceof ComputedValue;\n\t}\n\texports.isObservable = isObservable;\n\tfunction observableDecorator(target, key, baseDescriptor) {\n\t    invariant(arguments.length >= 2 && arguments.length <= 3, \"Illegal decorator config\", key);\n\t    assertPropertyConfigurable(target, key);\n\t    if (baseDescriptor && baseDescriptor.hasOwnProperty(\"get\")) {\n\t        deprecated(\"Using @observable on computed values is deprecated. Use @computed instead.\");\n\t        return computed.apply(null, arguments);\n\t    }\n\t    var descriptor = {};\n\t    invariant(typeof target === \"object\", \"The @observable decorator can only be used on objects\", key);\n\t    descriptor.configurable = true;\n\t    descriptor.enumerable = true;\n\t    descriptor.get = function () {\n\t        var _this = this;\n\t        var baseValue = undefined;\n\t        if (baseDescriptor && baseDescriptor.initializer) {\n\t            baseValue = baseDescriptor.initializer();\n\t            if (typeof baseValue === \"function\")\n\t                baseValue = asReference(baseValue);\n\t        }\n\t        allowStateChanges(true, function () {\n\t            setObservableObjectProperty(asObservableObject(_this, undefined, ValueMode.Recursive), key, baseValue);\n\t        });\n\t        return this[key];\n\t    };\n\t    descriptor.set = function (value) {\n\t        setObservableObjectProperty(asObservableObject(this, undefined, ValueMode.Recursive), key, typeof value === \"function\" ? asReference(value) : value);\n\t    };\n\t    if (!baseDescriptor) {\n\t        Object.defineProperty(target, key, descriptor);\n\t    }\n\t    else {\n\t        return descriptor;\n\t    }\n\t}\n\tfunction observable(v, keyOrScope) {\n\t    if (typeof arguments[1] === \"string\")\n\t        return observableDecorator.apply(null, arguments);\n\t    invariant(arguments.length === 1 || arguments.length === 2, \"observable expects one or two arguments\");\n\t    if (isObservable(v))\n\t        return v;\n\t    var _a = getValueModeFromValue(v, ValueMode.Recursive), mode = _a[0], value = _a[1];\n\t    var sourceType = mode === ValueMode.Reference ? ValueType.Reference : getTypeOfValue(value);\n\t    switch (sourceType) {\n\t        case ValueType.Array:\n\t        case ValueType.PlainObject:\n\t            return makeChildObservable(value, mode);\n\t        case ValueType.Reference:\n\t        case ValueType.ComplexObject:\n\t            return new ObservableValue(value, mode);\n\t        case ValueType.ComplexFunction:\n\t            throw new Error(\"[mobx.observable] To be able to make a function reactive it should not have arguments. If you need an observable reference to a function, use `observable(asReference(f))`\");\n\t        case ValueType.ViewFunction:\n\t            deprecated(\"Use `computed(expr)` instead of `observable(expr)`\");\n\t            return computed(v, keyOrScope);\n\t    }\n\t    invariant(false, \"Illegal State\");\n\t}\n\texports.observable = observable;\n\tvar ValueType;\n\t(function (ValueType) {\n\t    ValueType[ValueType[\"Reference\"] = 0] = \"Reference\";\n\t    ValueType[ValueType[\"PlainObject\"] = 1] = \"PlainObject\";\n\t    ValueType[ValueType[\"ComplexObject\"] = 2] = \"ComplexObject\";\n\t    ValueType[ValueType[\"Array\"] = 3] = \"Array\";\n\t    ValueType[ValueType[\"ViewFunction\"] = 4] = \"ViewFunction\";\n\t    ValueType[ValueType[\"ComplexFunction\"] = 5] = \"ComplexFunction\";\n\t})(ValueType || (ValueType = {}));\n\tfunction getTypeOfValue(value) {\n\t    if (value === null || value === undefined)\n\t        return ValueType.Reference;\n\t    if (typeof value === \"function\")\n\t        return value.length ? ValueType.ComplexFunction : ValueType.ViewFunction;\n\t    if (Array.isArray(value) || value instanceof ObservableArray)\n\t        return ValueType.Array;\n\t    if (typeof value === \"object\")\n\t        return isPlainObject(value) ? ValueType.PlainObject : ValueType.ComplexObject;\n\t    return ValueType.Reference;\n\t}\n\tfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n\t    if (typeof cbOrFire === \"function\")\n\t        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n\t    else\n\t        return observeObservable(thing, propOrCb, cbOrFire);\n\t}\n\texports.observe = observe;\n\tfunction observeObservable(thing, listener, fireImmediately) {\n\t    if (isObservableArray(thing))\n\t        return thing.observe(listener);\n\t    if (isObservableMap(thing))\n\t        return thing.observe(listener);\n\t    if (isObservableObject(thing))\n\t        return observeObservableObject(thing, listener, fireImmediately);\n\t    if (thing instanceof ObservableValue || thing instanceof ComputedValue)\n\t        return thing.observe(listener, fireImmediately);\n\t    if (isPlainObject(thing))\n\t        return observeObservable(observable(thing), listener, fireImmediately);\n\t    invariant(false, \"first argument of observe should be some observable value or plain object\");\n\t}\n\tfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n\t    var propError = \"[mobx.observe] the provided observable map has no key with name: \" + property;\n\t    if (isObservableMap(thing)) {\n\t        if (!thing._has(property))\n\t            throw new Error(propError);\n\t        return observe(thing._data[property], listener);\n\t    }\n\t    if (isObservableObject(thing)) {\n\t        if (!isObservable(thing, property))\n\t            throw new Error(propError);\n\t        return observe(thing.$mobx.values[property], listener, fireImmediately);\n\t    }\n\t    if (isPlainObject(thing)) {\n\t        extendObservable(thing, {\n\t            property: thing[property]\n\t        });\n\t        return observeObservableProperty(thing, property, listener, fireImmediately);\n\t    }\n\t    invariant(false, \"first argument of observe should be an (observable)object or observableMap if a property name is given\");\n\t}\n\tfunction toJSON(source, detectCycles, __alreadySeen) {\n\t    if (detectCycles === void 0) { detectCycles = true; }\n\t    if (__alreadySeen === void 0) { __alreadySeen = null; }\n\t    function cache(value) {\n\t        if (detectCycles)\n\t            __alreadySeen.push([source, value]);\n\t        return value;\n\t    }\n\t    if (detectCycles && __alreadySeen === null)\n\t        __alreadySeen = [];\n\t    if (detectCycles && source !== null && typeof source === \"object\") {\n\t        for (var i = 0, l = __alreadySeen.length; i < l; i++)\n\t            if (__alreadySeen[i][0] === source)\n\t                return __alreadySeen[i][1];\n\t    }\n\t    if (!source)\n\t        return source;\n\t    if (Array.isArray(source) || source instanceof ObservableArray) {\n\t        var res = cache([]);\n\t        res.push.apply(res, source.map(function (value) { return toJSON(value, detectCycles, __alreadySeen); }));\n\t        return res;\n\t    }\n\t    if (source instanceof ObservableMap) {\n\t        var res_1 = cache({});\n\t        source.forEach(function (value, key) { return res_1[key] = toJSON(value, detectCycles, __alreadySeen); });\n\t        return res_1;\n\t    }\n\t    if (typeof source === \"object\" && isPlainObject(source)) {\n\t        var res = cache({});\n\t        for (var key in source)\n\t            if (source.hasOwnProperty(key))\n\t                res[key] = toJSON(source[key], detectCycles, __alreadySeen);\n\t        return res;\n\t    }\n\t    if (isObservable(source) && source.$mobx instanceof ObservableValue)\n\t        return toJSON(source(), detectCycles, __alreadySeen);\n\t    return source;\n\t}\n\texports.toJSON = toJSON;\n\tfunction propagateAtomReady(atom) {\n\t    invariant(atom.isDirty, \"atom not dirty\");\n\t    atom.isDirty = false;\n\t    reportTransition(atom, \"READY\", true);\n\t    propagateReadiness(atom, true);\n\t}\n\tvar Atom = (function () {\n\t    function Atom(name, onBecomeObserved, onBecomeUnobserved) {\n\t        if (name === void 0) { name = \"Atom\"; }\n\t        if (onBecomeObserved === void 0) { onBecomeObserved = noop; }\n\t        if (onBecomeUnobserved === void 0) { onBecomeUnobserved = noop; }\n\t        this.name = name;\n\t        this.onBecomeObserved = onBecomeObserved;\n\t        this.onBecomeUnobserved = onBecomeUnobserved;\n\t        this.id = getNextId();\n\t        this.isDirty = false;\n\t        this.staleObservers = [];\n\t        this.observers = [];\n\t    }\n\t    Atom.prototype.reportObserved = function () {\n\t        reportObserved(this);\n\t    };\n\t    Atom.prototype.reportChanged = function () {\n\t        if (!this.isDirty) {\n\t            this.reportStale();\n\t            this.reportReady();\n\t        }\n\t    };\n\t    Atom.prototype.reportStale = function () {\n\t        if (!this.isDirty) {\n\t            this.isDirty = true;\n\t            reportTransition(this, \"STALE\");\n\t            propagateStaleness(this);\n\t        }\n\t    };\n\t    Atom.prototype.reportReady = function () {\n\t        invariant(this.isDirty, \"atom not dirty\");\n\t        if (globalState.inTransaction > 0)\n\t            globalState.changedAtoms.push(this);\n\t        else {\n\t            propagateAtomReady(this);\n\t            runReactions();\n\t        }\n\t    };\n\t    Atom.prototype.toString = function () {\n\t        return this.name + \"@\" + this.id;\n\t    };\n\t    return Atom;\n\t}());\n\texports.Atom = Atom;\n\tvar ComputedValue = (function () {\n\t    function ComputedValue(derivation, scope, compareStructural, name) {\n\t        var _this = this;\n\t        if (name === void 0) { name = \"ComputedValue\"; }\n\t        this.derivation = derivation;\n\t        this.scope = scope;\n\t        this.compareStructural = compareStructural;\n\t        this.name = name;\n\t        this.id = getNextId();\n\t        this.isLazy = true;\n\t        this.isComputing = false;\n\t        this.staleObservers = [];\n\t        this.observers = [];\n\t        this.observing = [];\n\t        this.dependencyChangeCount = 0;\n\t        this.dependencyStaleCount = 0;\n\t        this.value = undefined;\n\t        this.peek = function () {\n\t            _this.isComputing = true;\n\t            globalState.isComputingComputedValue++;\n\t            var prevAllowStateChanges = globalState.allowStateChanges;\n\t            globalState.allowStateChanges = false;\n\t            var res = derivation.call(scope);\n\t            globalState.allowStateChanges = prevAllowStateChanges;\n\t            globalState.isComputingComputedValue--;\n\t            _this.isComputing = false;\n\t            return res;\n\t        };\n\t    }\n\t    ComputedValue.prototype.onBecomeObserved = function () {\n\t    };\n\t    ComputedValue.prototype.onBecomeUnobserved = function () {\n\t        for (var i = 0, l = this.observing.length; i < l; i++)\n\t            removeObserver(this.observing[i], this);\n\t        this.observing = [];\n\t        this.isLazy = true;\n\t        this.value = undefined;\n\t    };\n\t    ComputedValue.prototype.onDependenciesReady = function () {\n\t        var changed = this.trackAndCompute();\n\t        reportTransition(this, \"READY\", changed);\n\t        return changed;\n\t    };\n\t    ComputedValue.prototype.get = function () {\n\t        invariant(!this.isComputing, \"Cycle detected\", this.derivation);\n\t        reportObserved(this);\n\t        if (this.dependencyStaleCount > 0) {\n\t            return this.peek();\n\t        }\n\t        if (this.isLazy) {\n\t            if (isComputingDerivation()) {\n\t                this.isLazy = false;\n\t                this.trackAndCompute();\n\t            }\n\t            else {\n\t                return this.peek();\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    ComputedValue.prototype.set = function (_) {\n\t        throw new Error(\"[ComputedValue '\" + name + \"'] It is not possible to assign a new value to a computed value.\");\n\t    };\n\t    ComputedValue.prototype.trackAndCompute = function () {\n\t        var oldValue = this.value;\n\t        this.value = trackDerivedFunction(this, this.peek);\n\t        return valueDidChange(this.compareStructural, this.value, oldValue);\n\t    };\n\t    ComputedValue.prototype.observe = function (listener, fireImmediately) {\n\t        var _this = this;\n\t        var firstTime = true;\n\t        var prevValue = undefined;\n\t        return autorun(function () {\n\t            var newValue = _this.get();\n\t            if (!firstTime || fireImmediately) {\n\t                globalState.inUntracked++;\n\t                listener(newValue, prevValue);\n\t                globalState.inUntracked--;\n\t            }\n\t            firstTime = false;\n\t            prevValue = newValue;\n\t        });\n\t    };\n\t    ComputedValue.prototype.toString = function () {\n\t        return this.name + \"@\" + this.id + \"[\" + this.derivation.toString() + \"]\";\n\t    };\n\t    return ComputedValue;\n\t}());\n\tfunction isComputingDerivation() {\n\t    return globalState.derivationStack.length > 0;\n\t}\n\tfunction checkIfStateModificationsAreAllowed() {\n\t    invariant(globalState.allowStateChanges, \"It is not allowed to change the state when a computed value is being evaluated. Use 'autorun' to create reactive functions with side-effects. Or use 'extras.allowStateChanges(true, block)' to supress this message.\");\n\t}\n\tfunction notifyDependencyStale(derivation) {\n\t    if (++derivation.dependencyStaleCount === 1) {\n\t        reportTransition(derivation, \"STALE\");\n\t        propagateStaleness(derivation);\n\t    }\n\t}\n\tfunction notifyDependencyReady(derivation, dependencyDidChange) {\n\t    invariant(derivation.dependencyStaleCount > 0, \"unexpected ready notification\");\n\t    if (dependencyDidChange)\n\t        derivation.dependencyChangeCount += 1;\n\t    if (--derivation.dependencyStaleCount === 0) {\n\t        if (derivation.dependencyChangeCount > 0) {\n\t            derivation.dependencyChangeCount = 0;\n\t            reportTransition(derivation, \"PENDING\");\n\t            var changed = derivation.onDependenciesReady();\n\t            propagateReadiness(derivation, changed);\n\t        }\n\t        else {\n\t            reportTransition(derivation, \"READY\", false);\n\t            propagateReadiness(derivation, false);\n\t        }\n\t    }\n\t}\n\tfunction trackDerivedFunction(derivation, f) {\n\t    var hasException = true;\n\t    var prevObserving = derivation.observing;\n\t    derivation.observing = [];\n\t    globalState.derivationStack.push(derivation);\n\t    try {\n\t        var result = f();\n\t        hasException = false;\n\t        bindDependencies(derivation, prevObserving);\n\t        return result;\n\t    }\n\t    finally {\n\t        if (hasException) {\n\t            console.error(\"[mobx] An uncaught exception occurred while calculating your computed value, autorun or transformer. Or inside the render method of a React component. \" +\n\t                \"These methods should never throw exceptions as MobX will usually not be able to recover from them. \" +\n\t                (\"Please enable 'Pause on (caught) exceptions' in your debugger to find the root cause. In: '\" + derivation.name + \"#\" + derivation.id + \"'\"));\n\t            resetGlobalState();\n\t        }\n\t    }\n\t}\n\tfunction bindDependencies(derivation, prevObserving) {\n\t    globalState.derivationStack.length -= 1;\n\t    var _a = quickDiff(derivation.observing, prevObserving), added = _a[0], removed = _a[1];\n\t    for (var i = 0, l = added.length; i < l; i++) {\n\t        var dependency = added[i];\n\t        invariant(!findCycle(derivation, dependency), \"Cycle detected\", derivation);\n\t        addObserver(added[i], derivation);\n\t    }\n\t    for (var i = 0, l = removed.length; i < l; i++)\n\t        removeObserver(removed[i], derivation);\n\t}\n\tfunction findCycle(needle, node) {\n\t    var obs = node.observing;\n\t    if (obs === undefined)\n\t        return false;\n\t    if (obs.indexOf(node) !== -1)\n\t        return true;\n\t    for (var l = obs.length, i = 0; i < l; i++)\n\t        if (findCycle(needle, obs[i]))\n\t            return true;\n\t    return false;\n\t}\n\tvar MobXGlobals = (function () {\n\t    function MobXGlobals() {\n\t        this.version = 1;\n\t        this.derivationStack = [];\n\t        this.mobxGuid = 0;\n\t        this.inTransaction = 0;\n\t        this.inUntracked = 0;\n\t        this.isRunningReactions = false;\n\t        this.changedAtoms = [];\n\t        this.pendingReactions = [];\n\t        this.allowStateChanges = true;\n\t        this.resetId = 0;\n\t    }\n\t    return MobXGlobals;\n\t}());\n\tvar globalState = (function () {\n\t    var res = new MobXGlobals();\n\t    if (global.__mobservableTrackingStack || global.__mobservableViewStack)\n\t        throw new Error(\"[mobx] An incompatible version of mobservable is already loaded.\");\n\t    if (global.__mobxGlobal && global.__mobxGlobal.version !== res.version)\n\t        throw new Error(\"[mobx] An incompatible version of mobx is already loaded.\");\n\t    if (global.__mobxGlobal)\n\t        return global.__mobxGlobal;\n\t    return global.__mobxGlobal = res;\n\t})();\n\tfunction getNextId() {\n\t    return ++globalState.mobxGuid;\n\t}\n\tfunction registerGlobals() {\n\t}\n\tfunction resetGlobalState() {\n\t    globalState.resetId++;\n\t    var defaultGlobals = new MobXGlobals();\n\t    for (var key in defaultGlobals)\n\t        if (key !== \"mobxGuid\" && key !== \"resetId\")\n\t            globalState[key] = defaultGlobals[key];\n\t}\n\tfunction addObserver(observable, node) {\n\t    var obs = observable.observers, l = obs.length;\n\t    obs[l] = node;\n\t    if (l === 0)\n\t        observable.onBecomeObserved();\n\t}\n\tfunction removeObserver(observable, node) {\n\t    var obs = observable.observers, idx = obs.indexOf(node);\n\t    if (idx !== -1)\n\t        obs.splice(idx, 1);\n\t    if (obs.length === 0)\n\t        observable.onBecomeUnobserved();\n\t}\n\tfunction reportObserved(observable) {\n\t    if (globalState.inUntracked > 0)\n\t        return;\n\t    var derivationStack = globalState.derivationStack;\n\t    var l = derivationStack.length;\n\t    if (l > 0) {\n\t        var deps = derivationStack[l - 1].observing, depslength = deps.length;\n\t        if (deps[depslength - 1] !== observable && deps[depslength - 2] !== observable)\n\t            deps[depslength] = observable;\n\t    }\n\t}\n\tfunction propagateStaleness(observable) {\n\t    var os = observable.observers.slice();\n\t    os.forEach(notifyDependencyStale);\n\t    observable.staleObservers = observable.staleObservers.concat(os);\n\t}\n\tfunction propagateReadiness(observable, valueDidActuallyChange) {\n\t    observable.staleObservers.splice(0).forEach(function (o) { return notifyDependencyReady(o, valueDidActuallyChange); });\n\t}\n\tfunction untracked(action) {\n\t    deprecated(\"This feature is experimental and might be removed in a future minor release. Please report if you use this feature in production: https://github.com/mobxjs/mobx/issues/49\");\n\t    globalState.inUntracked++;\n\t    var res = action();\n\t    globalState.inUntracked--;\n\t    return res;\n\t}\n\texports.untracked = untracked;\n\tvar Reaction = (function () {\n\t    function Reaction(name, onInvalidate) {\n\t        if (name === void 0) { name = \"Reaction\"; }\n\t        this.name = name;\n\t        this.onInvalidate = onInvalidate;\n\t        this.id = getNextId();\n\t        this.staleObservers = EMPTY_ARRAY;\n\t        this.observers = EMPTY_ARRAY;\n\t        this.observing = [];\n\t        this.dependencyChangeCount = 0;\n\t        this.dependencyStaleCount = 0;\n\t        this.isDisposed = false;\n\t        this._isScheduled = false;\n\t    }\n\t    Reaction.prototype.onBecomeObserved = function () {\n\t    };\n\t    Reaction.prototype.onBecomeUnobserved = function () {\n\t    };\n\t    Reaction.prototype.onDependenciesReady = function () {\n\t        this.schedule();\n\t        return false;\n\t    };\n\t    Reaction.prototype.schedule = function () {\n\t        if (!this._isScheduled) {\n\t            this._isScheduled = true;\n\t            globalState.pendingReactions.push(this);\n\t            runReactions();\n\t        }\n\t    };\n\t    Reaction.prototype.isScheduled = function () {\n\t        return this.dependencyStaleCount > 0 || this._isScheduled;\n\t    };\n\t    Reaction.prototype.runReaction = function () {\n\t        if (!this.isDisposed) {\n\t            this._isScheduled = false;\n\t            this.onInvalidate();\n\t            reportTransition(this, \"READY\", true);\n\t        }\n\t    };\n\t    Reaction.prototype.track = function (fn) {\n\t        trackDerivedFunction(this, fn);\n\t    };\n\t    Reaction.prototype.dispose = function () {\n\t        if (!this.isDisposed) {\n\t            this.isDisposed = true;\n\t            var deps = this.observing.splice(0);\n\t            for (var i = 0, l = deps.length; i < l; i++)\n\t                removeObserver(deps[i], this);\n\t        }\n\t    };\n\t    Reaction.prototype.getDisposer = function () {\n\t        var r = this.dispose.bind(this);\n\t        r.$mobx = this;\n\t        return r;\n\t    };\n\t    Reaction.prototype.toString = function () {\n\t        return \"Reaction[\" + this.name + \"]\";\n\t    };\n\t    return Reaction;\n\t}());\n\texports.Reaction = Reaction;\n\tvar MAX_REACTION_ITERATIONS = 100;\n\tfunction runReactions() {\n\t    if (globalState.isRunningReactions === true || globalState.inTransaction > 0)\n\t        return;\n\t    globalState.isRunningReactions = true;\n\t    var allReactions = globalState.pendingReactions;\n\t    var iterations = 0;\n\t    while (allReactions.length > 0) {\n\t        if (++iterations === MAX_REACTION_ITERATIONS)\n\t            throw new Error(\"Reaction doesn't converge to a stable state. Probably there is a cycle in the reactive function: \" + allReactions[0].toString());\n\t        var remainingReactions = allReactions.splice(0);\n\t        for (var i = 0, l = remainingReactions.length; i < l; i++)\n\t            remainingReactions[i].runReaction();\n\t    }\n\t    globalState.isRunningReactions = false;\n\t}\n\tfunction transaction(action, thisArg) {\n\t    globalState.inTransaction += 1;\n\t    var res = action.call(thisArg);\n\t    if (--globalState.inTransaction === 0) {\n\t        var values = globalState.changedAtoms.splice(0);\n\t        for (var i = 0, l = values.length; i < l; i++)\n\t            propagateAtomReady(values[i]);\n\t        runReactions();\n\t    }\n\t    return res;\n\t}\n\texports.transaction = transaction;\n\tvar ValueMode;\n\t(function (ValueMode) {\n\t    ValueMode[ValueMode[\"Recursive\"] = 0] = \"Recursive\";\n\t    ValueMode[ValueMode[\"Reference\"] = 1] = \"Reference\";\n\t    ValueMode[ValueMode[\"Structure\"] = 2] = \"Structure\";\n\t    ValueMode[ValueMode[\"Flat\"] = 3] = \"Flat\";\n\t})(ValueMode || (ValueMode = {}));\n\tfunction asReference(value) {\n\t    return new AsReference(value);\n\t}\n\texports.asReference = asReference;\n\tfunction asStructure(value) {\n\t    return new AsStructure(value);\n\t}\n\texports.asStructure = asStructure;\n\tfunction asFlat(value) {\n\t    return new AsFlat(value);\n\t}\n\texports.asFlat = asFlat;\n\tvar AsReference = (function () {\n\t    function AsReference(value) {\n\t        this.value = value;\n\t        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n\t    }\n\t    return AsReference;\n\t}());\n\tvar AsStructure = (function () {\n\t    function AsStructure(value) {\n\t        this.value = value;\n\t        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n\t    }\n\t    return AsStructure;\n\t}());\n\tvar AsFlat = (function () {\n\t    function AsFlat(value) {\n\t        this.value = value;\n\t        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n\t    }\n\t    return AsFlat;\n\t}());\n\tfunction getValueModeFromValue(value, defaultMode) {\n\t    if (value instanceof AsReference)\n\t        return [ValueMode.Reference, value.value];\n\t    if (value instanceof AsStructure)\n\t        return [ValueMode.Structure, value.value];\n\t    if (value instanceof AsFlat)\n\t        return [ValueMode.Flat, value.value];\n\t    return [defaultMode, value];\n\t}\n\tfunction getValueModeFromModifierFunc(func) {\n\t    if (func === asReference)\n\t        return ValueMode.Reference;\n\t    else if (func === asStructure)\n\t        return ValueMode.Structure;\n\t    else if (func === asFlat)\n\t        return ValueMode.Flat;\n\t    invariant(func === undefined, \"Cannot determine value mode from function. Please pass in one of these: mobx.asReference, mobx.asStructure or mobx.asFlat, got: \" + func);\n\t    return ValueMode.Recursive;\n\t}\n\tfunction makeChildObservable(value, parentMode, name) {\n\t    var childMode;\n\t    if (isObservable(value))\n\t        return value;\n\t    switch (parentMode) {\n\t        case ValueMode.Reference:\n\t            return value;\n\t        case ValueMode.Flat:\n\t            assertUnwrapped(value, \"Items inside 'asFlat' cannot have modifiers\");\n\t            childMode = ValueMode.Reference;\n\t            break;\n\t        case ValueMode.Structure:\n\t            assertUnwrapped(value, \"Items inside 'asStructure' cannot have modifiers\");\n\t            childMode = ValueMode.Structure;\n\t            break;\n\t        case ValueMode.Recursive:\n\t            _a = getValueModeFromValue(value, ValueMode.Recursive), childMode = _a[0], value = _a[1];\n\t            break;\n\t        default:\n\t            invariant(false, \"Illegal State\");\n\t    }\n\t    if (Array.isArray(value) && Object.isExtensible(value))\n\t        return createObservableArray(value, childMode, name);\n\t    if (isPlainObject(value) && Object.isExtensible(value))\n\t        return extendObservableHelper(value, value, childMode, name);\n\t    return value;\n\t    var _a;\n\t}\n\tfunction assertUnwrapped(value, message) {\n\t    if (value instanceof AsReference || value instanceof AsStructure || value instanceof AsFlat)\n\t        throw new Error(\"[mobx] asStructure / asReference / asFlat cannot be used here. \" + message);\n\t}\n\tvar OBSERVABLE_ARRAY_BUFFER_SIZE = 0;\n\tvar StubArray = (function () {\n\t    function StubArray() {\n\t    }\n\t    return StubArray;\n\t}());\n\tStubArray.prototype = [];\n\tfunction getArrayLength(adm) {\n\t    adm.atom.reportObserved();\n\t    return adm.values.length;\n\t}\n\tfunction setArrayLength(adm, newLength) {\n\t    if (typeof newLength !== \"number\" || newLength < 0)\n\t        throw new Error(\"[mobx.array] Out of range: \" + newLength);\n\t    var currentLength = adm.values.length;\n\t    if (newLength === currentLength)\n\t        return;\n\t    else if (newLength > currentLength)\n\t        spliceWithArray(adm, currentLength, 0, new Array(newLength - currentLength));\n\t    else\n\t        spliceWithArray(adm, newLength, currentLength - newLength);\n\t}\n\tfunction updateArrayLength(adm, oldLength, delta) {\n\t    if (oldLength !== adm.lastKnownLength)\n\t        throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?\");\n\t    checkIfStateModificationsAreAllowed();\n\t    adm.lastKnownLength += delta;\n\t    if (delta > 0 && oldLength + delta > OBSERVABLE_ARRAY_BUFFER_SIZE)\n\t        reserveArrayBuffer(oldLength + delta);\n\t}\n\tfunction spliceWithArray(adm, index, deleteCount, newItems) {\n\t    var length = adm.values.length;\n\t    if ((newItems === undefined || newItems.length === 0) && (deleteCount === 0 || length === 0))\n\t        return [];\n\t    if (index === undefined)\n\t        index = 0;\n\t    else if (index > length)\n\t        index = length;\n\t    else if (index < 0)\n\t        index = Math.max(0, length + index);\n\t    if (arguments.length === 2)\n\t        deleteCount = length - index;\n\t    else if (deleteCount === undefined || deleteCount === null)\n\t        deleteCount = 0;\n\t    else\n\t        deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n\t    if (newItems === undefined)\n\t        newItems = EMPTY_ARRAY;\n\t    else\n\t        newItems = newItems.map(adm.makeChildReactive);\n\t    var lengthDelta = newItems.length - deleteCount;\n\t    updateArrayLength(adm, length, lengthDelta);\n\t    var res = (_a = adm.values).splice.apply(_a, [index, deleteCount].concat(newItems));\n\t    notifyArraySplice(adm, index, res, newItems);\n\t    return res;\n\t    var _a;\n\t}\n\tfunction makeReactiveArrayItem(value) {\n\t    assertUnwrapped(value, \"Array values cannot have modifiers\");\n\t    if (this.mode === ValueMode.Flat || this.mode === ValueMode.Reference)\n\t        return value;\n\t    return makeChildObservable(value, this.mode, this.atom.name + \"@\" + this.atom.id + \" / ArrayEntry\");\n\t}\n\tfunction notifyArrayChildUpdate(adm, index, oldValue) {\n\t    adm.atom.reportChanged();\n\t    if (adm.changeEvent)\n\t        adm.changeEvent.emit({ object: adm.array, type: \"update\", index: index, oldValue: oldValue });\n\t}\n\tfunction notifyArraySplice(adm, index, deleted, added) {\n\t    if (deleted.length === 0 && added.length === 0)\n\t        return;\n\t    adm.atom.reportChanged();\n\t    if (adm.changeEvent)\n\t        adm.changeEvent.emit({ object: adm.array, type: \"splice\", index: index, addedCount: added.length, removed: deleted });\n\t}\n\tvar ObservableArray = (function (_super) {\n\t    __extends(ObservableArray, _super);\n\t    function ObservableArray(initialValues, mode, name) {\n\t        _super.call(this);\n\t        var adm = this.$mobx = {\n\t            atom: new Atom(name || \"ObservableArray\"),\n\t            values: undefined,\n\t            changeEvent: undefined,\n\t            lastKnownLength: 0,\n\t            mode: mode,\n\t            array: this,\n\t            makeChildReactive: function (v) { return makeReactiveArrayItem.call(adm, v); }\n\t        };\n\t        Object.defineProperty(this, \"$mobx\", {\n\t            enumerable: false,\n\t            configurable: false,\n\t            writable: false\n\t        });\n\t        if (initialValues && initialValues.length) {\n\t            updateArrayLength(adm, 0, initialValues.length);\n\t            adm.values = initialValues.map(adm.makeChildReactive);\n\t        }\n\t        else\n\t            adm.values = [];\n\t    }\n\t    ObservableArray.prototype.observe = function (listener, fireImmediately) {\n\t        if (fireImmediately === void 0) { fireImmediately = false; }\n\t        if (this.$mobx.changeEvent === undefined)\n\t            this.$mobx.changeEvent = new SimpleEventEmitter();\n\t        if (fireImmediately)\n\t            listener({ object: this, type: \"splice\", index: 0, addedCount: this.$mobx.values.length, removed: [] });\n\t        return this.$mobx.changeEvent.on(listener);\n\t    };\n\t    ObservableArray.prototype.clear = function () {\n\t        return this.splice(0);\n\t    };\n\t    ObservableArray.prototype.replace = function (newItems) {\n\t        return spliceWithArray(this.$mobx, 0, this.$mobx.values.length, newItems);\n\t    };\n\t    ObservableArray.prototype.toJSON = function () {\n\t        this.$mobx.atom.reportObserved();\n\t        return this.$mobx.values.slice();\n\t    };\n\t    ObservableArray.prototype.peek = function () {\n\t        return this.$mobx.values;\n\t    };\n\t    ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {\n\t        if (fromIndex === void 0) { fromIndex = 0; }\n\t        this.$mobx.atom.reportObserved();\n\t        var items = this.$mobx.values, l = items.length;\n\t        for (var i = fromIndex; i < l; i++)\n\t            if (predicate.call(thisArg, items[i], i, this))\n\t                return items[i];\n\t        return null;\n\t    };\n\t    ObservableArray.prototype.splice = function (index, deleteCount) {\n\t        var newItems = [];\n\t        for (var _i = 2; _i < arguments.length; _i++) {\n\t            newItems[_i - 2] = arguments[_i];\n\t        }\n\t        switch (arguments.length) {\n\t            case 0:\n\t                return [];\n\t            case 1:\n\t                return spliceWithArray(this.$mobx, index);\n\t            case 2:\n\t                return spliceWithArray(this.$mobx, index, deleteCount);\n\t        }\n\t        return spliceWithArray(this.$mobx, index, deleteCount, newItems);\n\t    };\n\t    ObservableArray.prototype.push = function () {\n\t        var items = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            items[_i - 0] = arguments[_i];\n\t        }\n\t        spliceWithArray(this.$mobx, this.$mobx.values.length, 0, items);\n\t        return this.$mobx.values.length;\n\t    };\n\t    ObservableArray.prototype.pop = function () {\n\t        return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];\n\t    };\n\t    ObservableArray.prototype.shift = function () {\n\t        return this.splice(0, 1)[0];\n\t    };\n\t    ObservableArray.prototype.unshift = function () {\n\t        var items = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            items[_i - 0] = arguments[_i];\n\t        }\n\t        spliceWithArray(this.$mobx, 0, 0, items);\n\t        return this.$mobx.values.length;\n\t    };\n\t    ObservableArray.prototype.reverse = function () {\n\t        this.$mobx.atom.reportObserved();\n\t        var clone = this.slice();\n\t        return clone.reverse.apply(clone, arguments);\n\t    };\n\t    ObservableArray.prototype.sort = function (compareFn) {\n\t        this.$mobx.atom.reportObserved();\n\t        var clone = this.slice();\n\t        return clone.sort.apply(clone, arguments);\n\t    };\n\t    ObservableArray.prototype.remove = function (value) {\n\t        var idx = this.$mobx.values.indexOf(value);\n\t        if (idx > -1) {\n\t            this.splice(idx, 1);\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    ObservableArray.prototype.toString = function () {\n\t        return \"[mobx.array] \" + Array.prototype.toString.apply(this.$mobx.values, arguments);\n\t    };\n\t    ObservableArray.prototype.toLocaleString = function () {\n\t        return \"[mobx.array] \" + Array.prototype.toLocaleString.apply(this.$mobx.values, arguments);\n\t    };\n\t    return ObservableArray;\n\t}(StubArray));\n\tmakeNonEnumerable(ObservableArray.prototype, [\n\t    \"constructor\",\n\t    \"observe\",\n\t    \"clear\",\n\t    \"replace\",\n\t    \"toJSON\",\n\t    \"peek\",\n\t    \"find\",\n\t    \"splice\",\n\t    \"push\",\n\t    \"pop\",\n\t    \"shift\",\n\t    \"unshift\",\n\t    \"reverse\",\n\t    \"sort\",\n\t    \"remove\",\n\t    \"toString\",\n\t    \"toLocaleString\",\n\t]);\n\tObject.defineProperty(ObservableArray.prototype, \"length\", {\n\t    enumerable: false,\n\t    configurable: true,\n\t    get: function () {\n\t        return getArrayLength(this.$mobx);\n\t    },\n\t    set: function (newLength) {\n\t        setArrayLength(this.$mobx, newLength);\n\t    }\n\t});\n\t[\n\t    \"concat\",\n\t    \"every\",\n\t    \"filter\",\n\t    \"forEach\",\n\t    \"indexOf\",\n\t    \"join\",\n\t    \"lastIndexOf\",\n\t    \"map\",\n\t    \"reduce\",\n\t    \"reduceRight\",\n\t    \"slice\",\n\t    \"some\"\n\t].forEach(function (funcName) {\n\t    var baseFunc = Array.prototype[funcName];\n\t    Object.defineProperty(ObservableArray.prototype, funcName, {\n\t        configurable: false,\n\t        writable: true,\n\t        enumerable: false,\n\t        value: function () {\n\t            this.$mobx.atom.reportObserved();\n\t            return baseFunc.apply(this.$mobx.values, arguments);\n\t        }\n\t    });\n\t});\n\tfunction createArrayBufferItem(index) {\n\t    Object.defineProperty(ObservableArray.prototype, \"\" + index, {\n\t        enumerable: false,\n\t        configurable: false,\n\t        set: function (value) {\n\t            var impl = this.$mobx;\n\t            var values = impl.values;\n\t            assertUnwrapped(value, \"Modifiers cannot be used on array values. For non-reactive array values use makeReactive(asFlat(array)).\");\n\t            if (index < values.length) {\n\t                checkIfStateModificationsAreAllowed();\n\t                var oldValue = values[index];\n\t                var changed = impl.mode === ValueMode.Structure ? !deepEquals(oldValue, value) : oldValue !== value;\n\t                if (changed) {\n\t                    values[index] = impl.makeChildReactive(value);\n\t                    notifyArrayChildUpdate(impl, index, oldValue);\n\t                }\n\t            }\n\t            else if (index === values.length)\n\t                spliceWithArray(impl, index, 0, [value]);\n\t            else\n\t                throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values.length);\n\t        },\n\t        get: function () {\n\t            var impl = this.$mobx;\n\t            if (impl && index < impl.values.length) {\n\t                impl.atom.reportObserved();\n\t                return impl.values[index];\n\t            }\n\t            return undefined;\n\t        }\n\t    });\n\t}\n\tfunction reserveArrayBuffer(max) {\n\t    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++)\n\t        createArrayBufferItem(index);\n\t    OBSERVABLE_ARRAY_BUFFER_SIZE = max;\n\t}\n\treserveArrayBuffer(1000);\n\tfunction createObservableArray(initialValues, mode, name) {\n\t    return new ObservableArray(initialValues, mode, name);\n\t}\n\tfunction fastArray(initialValues) {\n\t    deprecated(\"fastArray is deprecated. Please use `observable(asFlat([]))`\");\n\t    return createObservableArray(initialValues, ValueMode.Flat, null);\n\t}\n\texports.fastArray = fastArray;\n\tfunction isObservableArray(thing) {\n\t    return thing instanceof ObservableArray;\n\t}\n\texports.isObservableArray = isObservableArray;\n\tvar ObservableMapMarker = {};\n\tvar ObservableMap = (function () {\n\t    function ObservableMap(initialData, valueModeFunc) {\n\t        var _this = this;\n\t        this.$mobx = ObservableMapMarker;\n\t        this._data = {};\n\t        this._hasMap = {};\n\t        this._events = undefined;\n\t        this.name = \"ObservableMap\";\n\t        this.id = getNextId();\n\t        this._keys = new ObservableArray(null, ValueMode.Reference, this.name + \"@\" + this.id + \" / keys()\");\n\t        this._valueMode = getValueModeFromModifierFunc(valueModeFunc);\n\t        if (isPlainObject(initialData))\n\t            this.merge(initialData);\n\t        else if (Array.isArray(initialData))\n\t            initialData.forEach(function (_a) {\n\t                var key = _a[0], value = _a[1];\n\t                return _this.set(key, value);\n\t            });\n\t    }\n\t    ObservableMap.prototype._has = function (key) {\n\t        return typeof this._data[key] !== \"undefined\";\n\t    };\n\t    ObservableMap.prototype.has = function (key) {\n\t        if (!this.isValidKey(key))\n\t            return false;\n\t        if (this._hasMap[key])\n\t            return this._hasMap[key].get();\n\t        return this._updateHasMapEntry(key, false).get();\n\t    };\n\t    ObservableMap.prototype.set = function (key, value) {\n\t        var _this = this;\n\t        this.assertValidKey(key);\n\t        assertUnwrapped(value, \"[mobx.map.set] Expected unwrapped value to be inserted to key '\" + key + \"'. If you need to use modifiers pass them as second argument to the constructor\");\n\t        if (this._has(key)) {\n\t            var oldValue = this._data[key].value;\n\t            var changed = this._data[key].set(value);\n\t            if (changed && this._events) {\n\t                this._events.emit({\n\t                    type: \"update\",\n\t                    object: this,\n\t                    name: key,\n\t                    oldValue: oldValue\n\t                });\n\t            }\n\t        }\n\t        else {\n\t            transaction(function () {\n\t                _this._data[key] = new ObservableValue(value, _this._valueMode, _this.name + \"@\" + _this.id + \" / Entry \\\"\" + key + \"\\\"\");\n\t                _this._updateHasMapEntry(key, true);\n\t                _this._keys.push(key);\n\t            });\n\t            this._events && this._events.emit({\n\t                type: \"add\",\n\t                object: this,\n\t                name: key\n\t            });\n\t        }\n\t    };\n\t    ObservableMap.prototype.delete = function (key) {\n\t        var _this = this;\n\t        if (this._has(key)) {\n\t            var oldValue = this._data[key].value;\n\t            transaction(function () {\n\t                _this._keys.remove(key);\n\t                _this._updateHasMapEntry(key, false);\n\t                var observable = _this._data[key];\n\t                observable.set(undefined);\n\t                _this._data[key] = undefined;\n\t            });\n\t            this._events && this._events.emit({\n\t                type: \"delete\",\n\t                object: this,\n\t                name: key,\n\t                oldValue: oldValue\n\t            });\n\t        }\n\t    };\n\t    ObservableMap.prototype._updateHasMapEntry = function (key, value) {\n\t        var entry = this._hasMap[key];\n\t        if (entry) {\n\t            entry.set(value);\n\t        }\n\t        else {\n\t            entry = this._hasMap[key] = new ObservableValue(value, ValueMode.Reference, this.name + \"@\" + this.id + \" / Contains \\\"\" + key + \"\\\"\");\n\t        }\n\t        return entry;\n\t    };\n\t    ObservableMap.prototype.get = function (key) {\n\t        if (this.has(key))\n\t            return this._data[key].get();\n\t        return undefined;\n\t    };\n\t    ObservableMap.prototype.keys = function () {\n\t        return this._keys.slice();\n\t    };\n\t    ObservableMap.prototype.values = function () {\n\t        return this.keys().map(this.get, this);\n\t    };\n\t    ObservableMap.prototype.entries = function () {\n\t        var _this = this;\n\t        return this.keys().map(function (key) { return [key, _this.get(key)]; });\n\t    };\n\t    ObservableMap.prototype.forEach = function (callback, thisArg) {\n\t        var _this = this;\n\t        this.keys().forEach(function (key) { return callback.call(thisArg, _this.get(key), key); });\n\t    };\n\t    ObservableMap.prototype.merge = function (other) {\n\t        var _this = this;\n\t        transaction(function () {\n\t            if (other instanceof ObservableMap)\n\t                other.keys().forEach(function (key) { return _this.set(key, other.get(key)); });\n\t            else\n\t                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });\n\t        });\n\t        return this;\n\t    };\n\t    ObservableMap.prototype.clear = function () {\n\t        var _this = this;\n\t        transaction(function () {\n\t            _this.keys().forEach(_this.delete, _this);\n\t        });\n\t    };\n\t    Object.defineProperty(ObservableMap.prototype, \"size\", {\n\t        get: function () {\n\t            return this._keys.length;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    ObservableMap.prototype.toJs = function () {\n\t        var _this = this;\n\t        var res = {};\n\t        this.keys().forEach(function (key) { return res[key] = _this.get(key); });\n\t        return res;\n\t    };\n\t    ObservableMap.prototype.isValidKey = function (key) {\n\t        if (key === null || key === undefined)\n\t            return false;\n\t        if (typeof key !== \"string\" && typeof key !== \"number\")\n\t            return false;\n\t        return true;\n\t    };\n\t    ObservableMap.prototype.assertValidKey = function (key) {\n\t        if (!this.isValidKey(key))\n\t            throw new Error(\"[mobx.map] Invalid key: '\" + key + \"'\");\n\t    };\n\t    ObservableMap.prototype.toString = function () {\n\t        var _this = this;\n\t        return \"[mobx.map { \" + this.keys().map(function (key) { return (key + \": \" + (\"\" + _this.get(key))); }).join(\", \") + \" }]\";\n\t    };\n\t    ObservableMap.prototype.observe = function (callback) {\n\t        if (!this._events)\n\t            this._events = new SimpleEventEmitter();\n\t        return this._events.on(callback);\n\t    };\n\t    return ObservableMap;\n\t}());\n\texports.ObservableMap = ObservableMap;\n\tfunction map(initialValues, valueModifier) {\n\t    return new ObservableMap(initialValues, valueModifier);\n\t}\n\texports.map = map;\n\tfunction isObservableMap(thing) {\n\t    return thing instanceof ObservableMap;\n\t}\n\texports.isObservableMap = isObservableMap;\n\tvar ObservableObjectMarker = {};\n\tfunction asObservableObject(target, name, mode) {\n\t    if (mode === void 0) { mode = ValueMode.Recursive; }\n\t    if (target.$mobx) {\n\t        if (target.$mobx.type !== ObservableObjectMarker)\n\t            throw new Error(\"The given object is observable but not an observable object\");\n\t        return target.$mobx;\n\t    }\n\t    if (!isPlainObject(target))\n\t        name = target.constructor.name;\n\t    if (!name)\n\t        name = \"ObservableObject\";\n\t    var adm = {\n\t        type: ObservableObjectMarker,\n\t        values: {},\n\t        events: undefined,\n\t        id: getNextId(),\n\t        target: target, name: name, mode: mode\n\t    };\n\t    Object.defineProperty(target, \"$mobx\", {\n\t        enumerable: false,\n\t        configurable: false,\n\t        writable: false,\n\t        value: adm\n\t    });\n\t    return adm;\n\t}\n\tfunction setObservableObjectProperty(adm, propName, value) {\n\t    if (adm.values[propName])\n\t        adm.target[propName] = value;\n\t    else\n\t        defineObservableProperty(adm, propName, value);\n\t}\n\tfunction defineObservableProperty(adm, propName, value) {\n\t    assertPropertyConfigurable(adm.target, propName);\n\t    var observable;\n\t    var name = adm.name + \"@\" + adm.id + \" / Prop \\\"\" + propName + \"\\\"\";\n\t    var isComputed = true;\n\t    if (typeof value === \"function\" && value.length === 0)\n\t        observable = new ComputedValue(value, adm.target, false, name);\n\t    else if (value instanceof AsStructure && typeof value.value === \"function\" && value.value.length === 0)\n\t        observable = new ComputedValue(value.value, adm.target, true, name);\n\t    else {\n\t        isComputed = false;\n\t        observable = new ObservableValue(value, adm.mode, name);\n\t    }\n\t    adm.values[propName] = observable;\n\t    Object.defineProperty(adm.target, propName, {\n\t        configurable: true,\n\t        enumerable: !isComputed,\n\t        get: function () {\n\t            return observable.get();\n\t        },\n\t        set: isComputed\n\t            ? throwingComputedValueSetter\n\t            : function (newValue) {\n\t                var oldValue = observable.value;\n\t                if (observable.set(newValue) && adm.events !== undefined) {\n\t                    adm.events.emit({\n\t                        type: \"update\",\n\t                        object: this,\n\t                        name: propName,\n\t                        oldValue: oldValue\n\t                    });\n\t                }\n\t            }\n\t    });\n\t    if (adm.events !== undefined) {\n\t        adm.events.emit({\n\t            type: \"add\",\n\t            object: adm.target,\n\t            name: propName\n\t        });\n\t    }\n\t    ;\n\t}\n\tfunction observeObservableObject(object, callback, fireImmediately) {\n\t    invariant(isObservableObject(object), \"Expected observable object\");\n\t    invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n\t    var adm = object.$mobx;\n\t    if (adm.events === undefined)\n\t        adm.events = new SimpleEventEmitter();\n\t    return object.$mobx.events.on(callback);\n\t}\n\tfunction isObservableObject(thing) {\n\t    return thing && thing.$mobx && thing.$mobx.type === ObservableObjectMarker;\n\t}\n\texports.isObservableObject = isObservableObject;\n\tvar ObservableValue = (function (_super) {\n\t    __extends(ObservableValue, _super);\n\t    function ObservableValue(value, mode, name) {\n\t        if (name === void 0) { name = \"ObservableValue\"; }\n\t        _super.call(this, name);\n\t        this.mode = mode;\n\t        this.hasUnreportedChange = false;\n\t        this.events = null;\n\t        this.value = undefined;\n\t        var _a = getValueModeFromValue(value, ValueMode.Recursive), childmode = _a[0], unwrappedValue = _a[1];\n\t        if (this.mode === ValueMode.Recursive)\n\t            this.mode = childmode;\n\t        this.value = makeChildObservable(unwrappedValue, this.mode, this.name);\n\t    }\n\t    ObservableValue.prototype.set = function (newValue) {\n\t        assertUnwrapped(newValue, \"Modifiers cannot be used on non-initial values.\");\n\t        checkIfStateModificationsAreAllowed();\n\t        var oldValue = this.value;\n\t        var changed = valueDidChange(this.mode === ValueMode.Structure, oldValue, newValue);\n\t        if (changed) {\n\t            this.value = makeChildObservable(newValue, this.mode, this.name);\n\t            this.reportChanged();\n\t            if (this.events)\n\t                this.events.emit(newValue, oldValue);\n\t        }\n\t        return changed;\n\t    };\n\t    ObservableValue.prototype.get = function () {\n\t        this.reportObserved();\n\t        return this.value;\n\t    };\n\t    ObservableValue.prototype.observe = function (listener, fireImmediately) {\n\t        if (!this.events)\n\t            this.events = new SimpleEventEmitter();\n\t        if (fireImmediately)\n\t            listener(this.value, undefined);\n\t        return this.events.on(listener);\n\t    };\n\t    ObservableValue.prototype.toString = function () {\n\t        return this.name + \"@\" + this.id + \"[\" + this.value + \"]\";\n\t    };\n\t    return ObservableValue;\n\t}(Atom));\n\tvar SimpleEventEmitter = (function () {\n\t    function SimpleEventEmitter() {\n\t        this.listeners = [];\n\t    }\n\t    SimpleEventEmitter.prototype.emit = function () {\n\t        var listeners = this.listeners.slice();\n\t        for (var i = 0, l = listeners.length; i < l; i++)\n\t            listeners[i].apply(null, arguments);\n\t    };\n\t    SimpleEventEmitter.prototype.on = function (listener) {\n\t        var _this = this;\n\t        this.listeners.push(listener);\n\t        return once(function () {\n\t            var idx = _this.listeners.indexOf(listener);\n\t            if (idx !== -1)\n\t                _this.listeners.splice(idx, 1);\n\t        });\n\t    };\n\t    SimpleEventEmitter.prototype.once = function (listener) {\n\t        var subscription = this.on(function () {\n\t            subscription();\n\t            listener.apply(this, arguments);\n\t        });\n\t        return subscription;\n\t    };\n\t    return SimpleEventEmitter;\n\t}());\n\texports.SimpleEventEmitter = SimpleEventEmitter;\n\tvar EMPTY_ARRAY = [];\n\tObject.freeze(EMPTY_ARRAY);\n\tfunction invariant(check, message, thing) {\n\t    if (!check)\n\t        throw new Error(\"[mobx] Invariant failed: \" + message + (thing ? \" in '\" + thing + \"'\" : \"\"));\n\t}\n\tvar deprecatedMessages = [];\n\tfunction deprecated(msg) {\n\t    if (deprecatedMessages.indexOf(msg) !== -1)\n\t        return;\n\t    deprecatedMessages.push(msg);\n\t    console.error(\"[mobx] Deprecated: \" + msg);\n\t}\n\tfunction once(func) {\n\t    var invoked = false;\n\t    return function () {\n\t        if (invoked)\n\t            return;\n\t        invoked = true;\n\t        return func.apply(this, arguments);\n\t    };\n\t}\n\tvar noop = function () { };\n\tfunction unique(list) {\n\t    var res = [];\n\t    list.forEach(function (item) {\n\t        if (res.indexOf(item) === -1)\n\t            res.push(item);\n\t    });\n\t    return res;\n\t}\n\tfunction isPlainObject(value) {\n\t    return value !== null && typeof value === \"object\" && Object.getPrototypeOf(value) === Object.prototype;\n\t}\n\tfunction valueDidChange(compareStructural, oldValue, newValue) {\n\t    return compareStructural\n\t        ? !deepEquals(oldValue, newValue)\n\t        : oldValue !== newValue;\n\t}\n\tfunction makeNonEnumerable(object, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t        Object.defineProperty(object, props[i], {\n\t            configurable: true,\n\t            writable: true,\n\t            enumerable: false,\n\t            value: object[props[i]]\n\t        });\n\t    }\n\t}\n\tfunction isPropertyConfigurable(object, prop) {\n\t    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n\t    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n\t}\n\tfunction assertPropertyConfigurable(object, prop) {\n\t    invariant(isPropertyConfigurable(object, prop), \"Cannot make property '\" + prop + \"' observable, it is not configurable and writable in the target object\");\n\t}\n\tfunction deepEquals(a, b) {\n\t    if (a === null && b === null)\n\t        return true;\n\t    if (a === undefined && b === undefined)\n\t        return true;\n\t    var aIsArray = Array.isArray(a) || isObservableArray(a);\n\t    if (aIsArray !== (Array.isArray(b) || isObservableArray(b))) {\n\t        return false;\n\t    }\n\t    else if (aIsArray) {\n\t        if (a.length !== b.length)\n\t            return false;\n\t        for (var i = a.length; i >= 0; i--)\n\t            if (!deepEquals(a[i], b[i]))\n\t                return false;\n\t        return true;\n\t    }\n\t    else if (typeof a === \"object\" && typeof b === \"object\") {\n\t        if (a === null || b === null)\n\t            return false;\n\t        if (Object.keys(a).length !== Object.keys(b).length)\n\t            return false;\n\t        for (var prop in a) {\n\t            if (!b.hasOwnProperty(prop))\n\t                return false;\n\t            if (!deepEquals(a[prop], b[prop]))\n\t                return false;\n\t        }\n\t        return true;\n\t    }\n\t    return a === b;\n\t}\n\tfunction quickDiff(current, base) {\n\t    if (!base || !base.length)\n\t        return [current, []];\n\t    if (!current || !current.length)\n\t        return [[], base];\n\t    var added = [];\n\t    var removed = [];\n\t    var currentIndex = 0, currentSearch = 0, currentLength = current.length, currentExhausted = false, baseIndex = 0, baseSearch = 0, baseLength = base.length, isSearching = false, baseExhausted = false;\n\t    while (!baseExhausted && !currentExhausted) {\n\t        if (!isSearching) {\n\t            if (currentIndex < currentLength && baseIndex < baseLength && current[currentIndex] === base[baseIndex]) {\n\t                currentIndex++;\n\t                baseIndex++;\n\t                if (currentIndex === currentLength && baseIndex === baseLength)\n\t                    return [added, removed];\n\t                continue;\n\t            }\n\t            currentSearch = currentIndex;\n\t            baseSearch = baseIndex;\n\t            isSearching = true;\n\t        }\n\t        baseSearch += 1;\n\t        currentSearch += 1;\n\t        if (baseSearch >= baseLength)\n\t            baseExhausted = true;\n\t        if (currentSearch >= currentLength)\n\t            currentExhausted = true;\n\t        if (!currentExhausted && current[currentSearch] === base[baseIndex]) {\n\t            added.push.apply(added, current.slice(currentIndex, currentSearch));\n\t            currentIndex = currentSearch + 1;\n\t            baseIndex++;\n\t            isSearching = false;\n\t        }\n\t        else if (!baseExhausted && base[baseSearch] === current[currentIndex]) {\n\t            removed.push.apply(removed, base.slice(baseIndex, baseSearch));\n\t            baseIndex = baseSearch + 1;\n\t            currentIndex++;\n\t            isSearching = false;\n\t        }\n\t    }\n\t    added.push.apply(added, current.slice(currentIndex));\n\t    removed.push.apply(removed, base.slice(baseIndex));\n\t    return [added, removed];\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tArray.prototype.groupBy = function (prop, fields) {\r\n\t    var key;\r\n\t    var result = this.reduce(function (grouped, item) {\r\n\t        key = item[prop];\r\n\t        grouped[key] = grouped[key] || [];\r\n\t        var obj;\r\n\t        switch (typeof fields) {\r\n\t            case 'function':\r\n\t                obj = fields(item);\r\n\t                break;\r\n\t            case 'string':\r\n\t                obj = {};\r\n\t                obj[fields] = item[fields];\r\n\t                break;\r\n\t            case 'object':\r\n\t                if (Array.isArray(fields)) {\r\n\t                    obj = fields.reduce(function (prev, curr) { prev[curr] = item[curr]; return prev; }, {});\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                obj = item;\r\n\t                break;\r\n\t        }\r\n\t        grouped[key].push(obj);\r\n\t        return grouped;\r\n\t    }, {});\r\n\t    var ret = [];\r\n\t    for (var row in result) {\r\n\t        console.log(row);\r\n\t        var item = {};\r\n\t        var cat = (typeof prop === 'function') ? 'key' : prop;\r\n\t        item[cat] = row;\r\n\t        item.group = result[row];\r\n\t        ret.push(item);\r\n\t    }\r\n\t    return ret;\r\n\t};\r\n\tArray.prototype.aggregate = function (querys) {\r\n\t    return this.map(function (row) {\r\n\t        for (var query in querys) {\r\n\t            var func = querys[query];\r\n\t            var data = row.group.map(function (group) { return group[query]; });\r\n\t            var value = void 0;\r\n\t            var name_1 = '';\r\n\t            if (typeof func === 'string') {\r\n\t                value = Array.prototype[func].call(data);\r\n\t                name_1 = func;\r\n\t            }\r\n\t            else {\r\n\t                value = func.call(data);\r\n\t            }\r\n\t            row[name_1 + '_' + query] = value;\r\n\t        }\r\n\t        //console.log('row:', row.category, row)\r\n\t        delete row.group;\r\n\t        return row;\r\n\t    });\r\n\t};\r\n\tArray.prototype.first = function () {\r\n\t    return this[0];\r\n\t};\r\n\tArray.prototype.last = function () {\r\n\t    return this[this.length - 1];\r\n\t};\r\n\tArray.prototype.count = function () {\r\n\t    return this.length;\r\n\t};\r\n\tfunction typeArg(arg, arr) {\r\n\t    var that;\r\n\t    switch (typeof arg) {\r\n\t        case 'function':\r\n\t            that = arr.map(arg);\r\n\t            break;\r\n\t        case 'string':\r\n\t            that = arr.map(function (o) { return o[arg]; });\r\n\t            break;\r\n\t        default:\r\n\t            that = arr;\r\n\t            break;\r\n\t    }\r\n\t    return that;\r\n\t}\r\n\tArray.prototype.min = function (field) {\r\n\t    return Math.min.apply(null, this.by(field));\r\n\t};\r\n\tArray.prototype.max = function (field) {\r\n\t    return Math.max.apply(null, this.by(field));\r\n\t};\r\n\tArray.prototype.sum = function (field) {\r\n\t    return this.by(field).reduce(function (prev, current) { return (+(current) + prev); }, 0); //parseFloat\r\n\t};\r\n\tArray.prototype.average = function (field) {\r\n\t    var that = typeArg(field, this);\r\n\t    var count = that.length;\r\n\t    var total = that.reduce(function (prev, current) { return (+(current) + prev); }, 0); //parseFloat\r\n\t    return total / count;\r\n\t};\r\n\tArray.prototype.unique = function (field) {\r\n\t    var that = typeArg(field, this);\r\n\t    var o = {}, i, l = that.length, r = [];\r\n\t    for (i = 0; i < l; i += 1) {\r\n\t        o[JSON.stringify(that[i])] = that[i];\r\n\t    }\r\n\t    for (i in o) {\r\n\t        r.push(o[i]);\r\n\t    }\r\n\t    return r;\r\n\t};\r\n\tfunction flatten(list, depth, mapperFn, mapperCtx) {\r\n\t    if (depth === 0) {\r\n\t        return list;\r\n\t    }\r\n\t    return list.reduce(function (accumulator, item, i) {\r\n\t        if (mapperFn) {\r\n\t            item = mapperFn.call(mapperCtx || list, item, i, list);\r\n\t        }\r\n\t        if (Array.isArray(item)) {\r\n\t            accumulator.push.apply(accumulator, flatten(item, depth - 1));\r\n\t        }\r\n\t        else {\r\n\t            accumulator.push(item);\r\n\t        }\r\n\t        return accumulator;\r\n\t    }, []);\r\n\t}\r\n\t;\r\n\tArray.prototype.flatten = function (depth) {\r\n\t    if (depth === void 0) { depth = Infinity; }\r\n\t    return flatten(this, depth);\r\n\t};\r\n\tArray.prototype.flatMap = function (fn, ctx) {\r\n\t    return flatten(this, 1, fn, ctx);\r\n\t};\r\n\tArray.prototype.by = function (field) {\r\n\t    return typeArg(field, this);\r\n\t};\r\n\tArray.prototype.take = function (number) {\r\n\t    var begin, end;\r\n\t    if (number >= 0) {\r\n\t        begin = 0;\r\n\t        end = number;\r\n\t    }\r\n\t    else {\r\n\t        begin = number;\r\n\t        end = this.length;\r\n\t    }\r\n\t    return this.slice(begin, end);\r\n\t};\r\n\tArray.prototype.includes = function (searchElement /*, fromIndex*/) {\r\n\t    'use strict';\r\n\t    var O = Object(this);\r\n\t    var len = parseInt(O.length) || 0;\r\n\t    if (len === 0) {\r\n\t        return false;\r\n\t    }\r\n\t    var n = parseInt(arguments[1]) || 0;\r\n\t    var k;\r\n\t    if (n >= 0) {\r\n\t        k = n;\r\n\t    }\r\n\t    else {\r\n\t        k = len + n;\r\n\t        if (k < 0) {\r\n\t            k = 0;\r\n\t        }\r\n\t    }\r\n\t    var currentElement;\r\n\t    while (k < len) {\r\n\t        currentElement = O[k];\r\n\t        if (searchElement === currentElement ||\r\n\t            (searchElement !== searchElement && currentElement !== currentElement)) {\r\n\t            return true;\r\n\t        }\r\n\t        k++;\r\n\t    }\r\n\t    return false;\r\n\t};\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/*jshint maxlen: false, unused: false, quotmark: true, -W097 */\r\n\t\"use strict\";\r\n\tvar db = [\r\n\t    { desc: \"DE UF com ocorrência de Vespa-da-madeira PARA UF reconhecida pelo MAPA como livre da ocorrência de Vespa-da-madeira\", hosp: [\"Pinus spp.\"], part: [\"madeira\"], orig: [\"MG\", \"SP\", \"PR\", \"SC\", \"RS\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RO\", \"RR\", \"SE\", \"TO\"], prag: \"Sirex noctilio\", pragc: \"VESPA-DA-MADEIRA\", exig: [\"Estão isentos desta exigência fitossanitária: compensados ou cavacos de 2,5 cm de espessura ou menores, móveis e pequenos objetos de madeira; \", \"PTV com declaração adicional constando que o material está livre de Sirex noctilio, tanto na fase adulta como na imatura.\"], proib: false, leg: \"Portaria SDA/MAPA nº 125, de 03 de agosto de 1998\", link: \"leg/PORT125-1998.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Ácaro-vermelho-das-palmeiras PARA UF reconhecida pelo MAPA como livre da ocorrência de Ácaro-vermelho-das-palmeiras\", hosp: [\"Euterpe oleracea\", \"Euterpe precatoria\", \"Alpínia purpurata\", \"Alpínia zerumbet\", \"Syagrus schizophylla\", \"Ravenala madagascariensis\", \"Musa spp.\", \"Etlingera alatior\", \"Mauritia flexuosa\", \"Canna indica\", \"Cocos nucifera\", \"Butia capitata\", \"Corypha umbraculifera\", \"Elaeis guineensis\", \"Strelitzia reginae\", \"Heliconia spp.\", \"Syagrus romanzoffianum\", \"Licuala grandis\", \"Coccothrinax miraguama\", \"Microcycas calocoma\", \"Coccothrinax barbadensis\", \"Aiphanes spp.\", \"Pseudophoenix vinifera\", \"Dypsis lutescens\", \"Veitchia arecina\", \"Chamaedora spp.\", \"Veitchia maerrillii\", \"Phoenix roebelenii\", \"Acoelorraphe wrightii\", \"Wodyetia bifurcata\", \"Archontophoenix alexandrae\", \"Cycas spp.\", \"Areca sp.\", \"Bismarckia nobilis\", \"Washingtonia robusta\", \"Ptychosperma macarthurii\", \"Beccariophoenix madagascariensis\", \"Bactris plumeriana\", \"Washingtonia filifera\", \"Pseudophoenix sargentii\", \"Roystonea borinquena\", \"Schippia concolor\", \"Thrinax radiata\", \"Livistona chinensis\", \"Pritchardia pacifica\", \"Coccothrinax argentata\", \"Dictyosperma album\", \"Caryota mitis\", \"Caryota urens\", \"Raphis excelsa\", \"Roystonia regia\", \"Ptychosperma elegans\", \"Dypsis decaryi\", \"Pritchardia vuylstekeana\", \"Bactris gasipaes\", \"Bactris plumeriana\", \"Phoenix dactylifera\", \"Phoenix canariensis\", \"Phoenix reclinata\", \"Arecaceae (espécies desta família)\", \"Heliconiaceae (espécies desta família)\", \"Musaceae (espécies desta família)\", \"Pandanaceae (espécies desta família)\", \"Strelitziaceae (espécies desta família)\", \"Zingiberaceae (espécies desta família)\"], part: [\"plantas\", \"mudas\", \"raízes\", \"caules\", \"ramos\", \"folhas\", \"flores\", \"frutos\"], orig: [\"RR\", \"AM\"], dest: [\"AC\", \"AL\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Raoiella indica\", pragc: \"ÁCARO-VERMELHO-DAS-PALMEIRAS\", exig: [\"PTV com a seguinte declaração adicional: \\\"Não se observou a presença de Raoiella indica no local de produção e a partida foi inspecionada e encontra-se livre da praga\\\"; \", \"A partida deve ser transportada em caminhão lonado ou tipo baú, e lacrado; \", \"A PTV deve conter o(s) número(s) do(s) lacre(s);\", \"Estas exigências fitossanitárias não se aplicam a material in vitro.\"], proib: false, leg: \"Instrução Normativa MAPA nº 14, de 6 de abril de 2010\", link: \"leg/IN14-2010.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Mosca-da-carambola PARA UF reconhecida pelo MAPA como livre da ocorrência de Mosca-da-carambola\", hosp: [\"Averrhoa carambola\", \"Psidium guajava\", \"Syzygium malaccense\", \"Citrus aurantium\", \"Manilkara zapota\", \"Mangifera indica\", \"Malpighia punicifolia\", \"Terminalia catappa\", \"Garcinia dulcis\", \"Chrysophyllum cainito\", \"Spondias lutea\", \"Anacardium occidentale\", \"Artocarpus altilis\", \"Arenga pinnata\", \"Artocarpus integrifolia\", \"Syzygium samarangense\", \"Syzygium aqueum\", \"Syzygium jambos\", \"Ziziphus mauritiana\", \"Ziziphus jujuba\", \"Citrus sinensis\", \"Averrhoa bilimbi\", \"Capsicum annuum\", \"Eugenia uniflora\", \"Citrus paradisi\", \"Citrus reticulata\", \"Licopersicum esculentum\"], part: [\"frutos\"], orig: [\"AP\", \"RR\"], dest: [\"AC\", \"AL\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Bactrocera carambolae\", pragc: \"MOSCA-DA-CARAMBOLA\", exig: [\"TRÂNSITO PROIBIDO\"], proib: false, leg: \"Portaria SDA/MAPA nº 21, de 25 de março de 1999\", link: \"leg/PORT21-1999.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Ácaro-hindu-dos-citros PARA UF reconhecida pelo MAPA como livre da ocorrência de Ácaro-hindu-dos-citros\", hosp: [\"Citrus spp.\", \"Cocos nucifera\", \"Azadirachta indica\", \"Sorghum bicolor\", \"Acacia sp.\", \"Melia azedarach\"], part: [\"plantas\", \"mudas\", \"raízes\", \"caules\", \"ramos\", \"folhas\", \"flores\", \"frutos\"], orig: [\"RR\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Schizotetranychus hindustanicus\", pragc: \"ÁCARO HINDU\", exig: [\"PARA FRUTOS DE CITROS: \\n\\n1.1 - PTV com a declaração adicional: \\\"A partida atende às exigências constantes da Instrução Normativa MAPA nº 8, de 17 de abril de 2012, encontra-se livre do Ácaro Hindu dos Citros\\\";\", \"PARA OUTRAS PLANTAS E DEMAIS PARTES de PLANTAS: TRÂNSITO PROIBIDO.\", \"Estas exigências fitossanitárias não se aplicam a material in vitro, madeira serrada e, ainda, frutos de coco (Cocus nucifera) secos e descascados;\"], proib: false, leg: \"Instrução Normativa MAPA nº 8, de 17 de abril de 2012\", link: \"leg/IN08-2012.pdf\" },\r\n\t    { desc: \"DE qualquer UF PARA qualquer UF\", hosp: [\"Musa spp.\"], part: [\"material para pesquisa\"], orig: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"Autorização Declaratória emitida pela Área de Sanidade Vegetal da Superintendência Federal da Agricultura - SFA, na Unidade da Federação de origem do material genético;\", \"O material genético deve ser transportado em recipiente lacrado, devendo o número do lacre constar da Autorização Declaratória;\", \"O interessado deve comunicar a SFA de destino da partida, quando do recebimento do material, para inspeção fitossanitária;\", \"Estas exigências fitossanitárias só se aplicam a material genético;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE UF sem ocorrência de Moko-da-bananeira PARA UF com ocorrência de de Moko-da-bananeira\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"AC\", \"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SC\", \"SP\", \"TO\"], dest: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF sem ocorrência de Moko-da-bananeira PARA UF com ocorrência de Moko-da-bananeira\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], dest: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n  \\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;  \\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\\n\\n2 - SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA: \\n\\n2.1 - PTV para comprovar a origem.\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], dest: [\"CE\", \"PE\", \"PI\", \"SC\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"Os frutos ou inflorescências foram produzidos sob aplicação de medidas integradas em um enfoque de Sistemas para o Manejo de Risco da praga Ralstonia solanacearum raça 2\\\";\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], dest: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 -  A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"Os frutos ou inflorescências foram produzidos em UP onde não foi observada a presença de Ralstonia solanacearum raça 2, nos últimos doze meses\\\"; OU\\n\\n2.2 - PTV com a seguinte declaração adicional: \\\"Os frutos ou inflorescências foram produzidos sob aplicação de medidas integradas em um enfoque de Sistemas para o Manejo de Risco da praga Ralstonia solanacearum raça 2\\\";\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF sem ocorrência de Moko-da-bananeira PARA UF sem ocorrência de de Moko-da-bananeira\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], dest: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV, para transitar pelas seguintes UF's: AP,AM,PA,RO,RR e SE;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE qualquer UF PARA qualquer UF\", hosp: [\"Musa spp.\"], part: [\"mudas\"], orig: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"BSV e CMV\", pragc: \"BANANA STREAK VIRUS e CUCUMBER MOSAIC VIRUS\", exig: [\"PTV com a seguinte declaração adicional: \\\"A partida encontra-se livre dos vírus Banana streak virus (BSV) e Cucumber mosaic virus (CMV), de acordo com o laudo laboratorial [nº do laudo], [nome do laboratório] -[município e UF de localização do laboratório]\\\";\", \"As mudas de bananeira que transitarem em desrespeito às determinações deste artigo ficam sujeitas à interceptação, caso em que será determinado o retorno das mesmas ao local de origem e comunicado ao órgão fiscalizador da produção e comércio, para adoção das providências cabíveis, conforme o art. 13, § 2º., da Instrução Normativa MAPA nº. 46, de 27 de dezembro de 2010.\"], proib: false, leg: \"Instrução Normativa MAPA nº 46, de 27 de dezembro de 2010\", link: \"leg/IN46-2010.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Cancro-da-videira PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-da-videira\", hosp: [\"Vitis spp. e seus híbridos\"], part: [\"mudas\"], orig: [\"BA\", \"CE\", \"PE\", \"RR\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Xanthomonas campestris pv. viticola\", pragc: \"CANCRO-DA-VIDEIRA\", exig: [\"PTV com a seguinte declaração adicional: \\\"As mudas foram obtidas por micropropagação e indexadas para Xanthomonas campestris pv. viticola\\\".\"], proib: false, leg: \"Instrução Normativa MAPA nº 2, de 6 de fevereiro de 2014\", link: \"leg/IN02-2014.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Cancro-da-videira PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-da-videira\", hosp: [\"Vitis spp. e seus híbridos\"], part: [\"frutos\"], orig: [\"BA\", \"CE\", \"PE\", \"RR\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Xanthomonas campestris pv. viticola\", pragc: \"CANCRO-DA-VIDEIRA\", exig: [\"PTV com a seguinte declaração adicional: \\\"Os frutos foram produzidos em propriedade onde são adotadas as medidas de prevenção e controle do cancro bacteriano da videira, previstas na legislação fitossanitária\\\";\", \"Estas exigências fitossanitárias só se aplicam a frutos, quando destinados a consumo in natura.\"], proib: false, leg: \"Instrução Normativa MAPA nº 2, de 6 de fevereiro de 2014\", link: \"leg/IN02-2014.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Cancro-da-videira PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-da-videira\", hosp: [\"Vitis spp. e seus híbridos\"], part: [\"material para pesquisa\"], orig: [\"BA\", \"CE\", \"PE\", \"RR\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Xanthomonas campestris pv. viticola\", pragc: \"CANCRO-DA-VIDEIRA\", exig: [\"PTV com a seguinte declaração adicional: \\\"O material foi lacrado na origem, sob número de lacre X, e embalado de maneira a garantir a não dispersão da praga\\\".\"], proib: false, leg: \"Instrução Normativa MAPA nº 2, de 6 de fevereiro de 2014\", link: \"leg/IN02-2014.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Cancro-europeu-das-pomáceas PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-europeu-das-pomáceas\", hosp: [\"Acacia sp.\", \"Acer sp.\", \"Acer circinatum\", \"Acer macrophyllum\", \"Acer mono subsp. Heterophyllum\", \"Acer negundo\", \"Acer palmatum\", \"Acer pennsylvanicum\", \"Acer pseudoplatanus\", \"Acer rubrum\", \"Acer saccharum\", \"Acer spicatum\", \"Aesculus sp.\", \"Aesculus hippocastanum\", \"Aesculus turbinata\", \"Albizia lebbeck\", \"Alnus sp.\", \"Alnus glutinosa\", \"Alnus incana\", \"Alnus japonica\", \"Alnus rubra\", \"Amelanchier laevis\", \"Avena sativa\", \"Betula sp.\", \"Betula lenta\", \"Betula lutea (synonym: alleghaniensis)\", \"Betula maximowicziana\", \"Betula nigra\", \"Betula papyrifera\", \"Betula pendula (syn:verrucosa)\", \"Betula populifolia\", \"Betula pubescens\", \"Camellia sinensis\", \"Carpinus sp.\", \"Carpinus betulas\", \"Carya spp.\", \"Carya cordiformis\", \"Carya glabra\", \"Carya ovata\", \"Carya tomentosa\", \"Carya illinoensis\", \"Castanea dentata\", \"Cercis canadensis\", \"Citrus sinensis\", \"Coprosma areolata\", \"Coprosma lucida\", \"Cornus sp.\", \"Cornus muttallii\", \"Corylus avellana\", \"Corylus heterophylla var. thunbergiii\", \"Corylus sieboldiana\", \"Craetaegus monogyna\", \"Crataegus oxyacanthoides (syn: oxyacantha )\", \"Eriobotrya japonica\", \"Fagus americana\", \"Fagus crenata f. grandifolia (syn.Americana)\", \"Fagus sp.\", \"Fagus orientalis\", \"Fagus sylvantica\", \"Fagus silvatica f. purpurea\", \"Frangula almus\", \"Fraxinus bungeana\", \"Fraxinus excelsior\", \"Fraxinus mandshurica\", \"Fraxinus mandshurica var. Japonica\", \"Fraxinus nigra (syn. sambucifolia)\", \"Ilex aquifolium\", \"Juglans sp.\", \"Juglans cinerea\", \"Juglans nigra\", \"Juglans regia\", \"Laburnum anagyrioides\", \"Liriodendron tulipifera\", \"Malus sp.\", \"Malus communis\", \"Malus sylvestris\", \"Malus pumila\", \"Malus x domestica\", \"Malus pumila var domestica\", \"Nyssa sylvatica\", \"Persea gratissima\", \"Picea abies\", \"Platanus orientalis\", \"Populus spp.\", \"Populus alba\", \"Populus x canadensis\", \"Populus balsamifera\", \"Populus grandidenta\", \"Populus tremula\", \"Populus tremuloides\", \"Populus wislizeni\", \"Prunus spp.\", \"Prunus avium\", \"Prunus serotina\", \"Prunus salicina\", \"Prunus ssiori\", \"Prunus subhirtella var. pendula\", \"Prunus virginiana\", \"Pyrus malus\", \"Pyrus pyrifolia\", \"Pyrus pyrifolia var culta\", \"Pyrus communis\", \"Quercus sp.\", \"Quercus alba\", \"Quercus bicolor\", \"Quercus borealis (syn: rubra)\", \"Quercus coccinea\", \"Quercus garryana\", \"Quercus glandulifera\", \"Quercus laurifolia\", \"Quercus mongolica var grosserrata\", \"Quercus montana\", \"Quercus robur\", \"Quercus rubra\", \"Quercus velutina\", \"Rhus typhina\", \"Ribes sp.\", \"Robinia pseudoacacia\", \"Rosa spp.\", \"Salix spp.\", \"Salix alba\", \"Salix alba var Vitelina\", \"Salix alba L. Coerulea\", \"Salix amygdaloides\", \"Salix amygdalina\", \"Salix cinerea\", \"Salix nigricans\", \"Salix purpurea\", \"Sophora microphylla\", \"Sorbus sp.\", \"Sorbus aria\", \"Sorbus aucuparia\", \"Sorbus domestica\", \"Swietenia mahagoni\", \"Tilia sp.\", \"Tilia americana\", \"Tilia cordata\", \"Ulmus sp.\", \"Ulmus americana\", \"Ulmus glabra (syn. montana)\", \"Umbelluraria californica\", \"Viola sp.\"], part: [\"mudas\", \"sementes\", \"estacas\", \"bulbos\", \"tubérculos\", \"manivas\", \"toletes\", \"gemas\", \"ramas\", \"rizomas\"], orig: [\"PR\", \"RS\", \"SC\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RO\", \"RR\", \"SE\", \"SP\", \"TO\"], prag: \"Neonectria galligena (=Nectria galligena)\", pragc: \"CANCRO EUROPEU DAS POMÁCEAS\", exig: [\"PTV com a seguinte declaração adicional: \\\"A Unidade de produção foi inspecionada oficialmente durante o período de produção e não foi constatada a presença de sintomas de infecção pela praga Neonectria galligena\\\";\", \"Esta exigência fitossanitária não se aplica a material propagativo in vitro.\"], proib: false, leg: \"Instrução Normativa nº 20, de 20 de junho de 2013\", link: \"leg/IN20-2013.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Cancro-europeu-das-pomáceas PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-europeu-das-pomáceas\", hosp: [\"Acacia sp.\", \"Acer sp.\", \"Acer circinatum\", \"Acer macrophyllum\", \"Acer mono subsp. Heterophyllum\", \"Acer negundo\", \"Acer palmatum\", \"Acer pennsylvanicum\", \"Acer pseudoplatanus\", \"Acer rubrum\", \"Acer saccharum\", \"Acer spicatum\", \"Aesculus sp.\", \"Aesculus hippocastanum\", \"Aesculus turbinata\", \"Albizia lebbeck\", \"Alnus sp.\", \"Alnus glutinosa\", \"Alnus incana\", \"Alnus japonica\", \"Alnus rubra\", \"Amelanchier laevis\", \"Avena sativa\", \"Betula sp.\", \"Betula lenta\", \"Betula lutea (synonym: alleghaniensis)\", \"Betula maximowicziana\", \"Betula nigra\", \"Betula papyrifera\", \"Betula pendula (syn:verrucosa)\", \"Betula populifolia\", \"Betula pubescens\", \"Camellia sinensis\", \"Carpinus sp.\", \"Carpinus betulas\", \"Carya spp.\", \"Carya cordiformis\", \"Carya glabra\", \"Carya ovata\", \"Carya tomentosa\", \"Carya illinoensis\", \"Castanea dentata\", \"Cercis canadensis\", \"Citrus sinensis\", \"Coprosma areolata\", \"Coprosma lucida\", \"Cornus sp.\", \"Cornus muttallii\", \"Corylus avellana\", \"Corylus heterophylla var. thunbergiii\", \"Corylus sieboldiana\", \"Craetaegus monogyna\", \"Crataegus oxyacanthoides (syn: oxyacantha )\", \"Eriobotrya japonica\", \"Fagus americana\", \"Fagus crenata f. grandifolia (syn.Americana)\", \"Fagus sp.\", \"Fagus orientalis\", \"Fagus sylvantica\", \"Fagus silvatica f. purpurea\", \"Frangula almus\", \"Fraxinus bungeana\", \"Fraxinus excelsior\", \"Fraxinus mandshurica\", \"Fraxinus mandshurica var. Japonica\", \"Fraxinus nigra (syn. sambucifolia)\", \"Ilex aquifolium\", \"Juglans sp.\", \"Juglans cinerea\", \"Juglans nigra\", \"Juglans regia\", \"Laburnum anagyrioides\", \"Liriodendron tulipifera\", \"Malus sp.\", \"Malus communis\", \"Malus sylvestris\", \"Malus pumila\", \"Malus x domestica\", \"Malus pumila var domestica\", \"Nyssa sylvatica\", \"Persea gratissima\", \"Picea abies\", \"Platanus orientalis\", \"Populus spp.\", \"Populus alba\", \"Populus x canadensis\", \"Populus balsamifera\", \"Populus grandidenta\", \"Populus tremula\", \"Populus tremuloides\", \"Populus wislizeni\", \"Prunus spp.\", \"Prunus avium\", \"Prunus serotina\", \"Prunus salicina\", \"Prunus ssiori\", \"Prunus subhirtella var. pendula\", \"Prunus virginiana\", \"Pyrus malus\", \"Pyrus pyrifolia\", \"Pyrus pyrifolia var culta\", \"Pyrus communis\", \"Quercus sp.\", \"Quercus alba\", \"Quercus bicolor\", \"Quercus borealis (syn: rubra)\", \"Quercus coccinea\", \"Quercus garryana\", \"Quercus glandulifera\", \"Quercus laurifolia\", \"Quercus mongolica var grosserrata\", \"Quercus montana\", \"Quercus robur\", \"Quercus rubra\", \"Quercus velutina\", \"Rhus typhina\", \"Ribes sp.\", \"Robinia pseudoacacia\", \"Rosa spp.\", \"Salix spp.\", \"Salix alba\", \"Salix alba var Vitelina\", \"Salix alba L. Coerulea\", \"Salix amygdaloides\", \"Salix amygdalina\", \"Salix cinerea\", \"Salix nigricans\", \"Salix purpurea\", \"Sophora microphylla\", \"Sorbus sp.\", \"Sorbus aria\", \"Sorbus aucuparia\", \"Sorbus domestica\", \"Swietenia mahagoni\", \"Tilia sp.\", \"Tilia americana\", \"Tilia cordata\", \"Ulmus sp.\", \"Ulmus americana\", \"Ulmus glabra (syn. montana)\", \"Umbelluraria californica\", \"Viola sp.\"], part: [\"frutos\"], orig: [\"PR\", \"RS\", \"SC\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RO\", \"RR\", \"SE\", \"SP\", \"TO\"], prag: \"Neonectria galligena (=Nectria galligena)\", pragc: \"CANCRO EUROPEU DAS POMÁCEAS\", exig: [\"PTV com a seguinte declaração adicional: \\\"Na unidade de produção e Unidade de Consolidação - UC foram adotados os procedimentos de controle e prevenção previstos nesta norma e os frutos não apresentam sintomas de Neonectria galligena\\\".\"], proib: false, leg: \"Instrução Normativa nº 20, de 20 de junho de 2013\", link: \"leg/IN20-2013.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Cancro Cítrico PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro Cítrico\", hosp: [\"Citrus spp.\", \"Fortunella spp.\", \"Poncirus spp.\"], part: [\"mudas\", \"sementes\", \"estacas\", \"gemas\"], orig: [\"MT\", \"MS\", \"MG\", \"PR\", \"RS\", \"RR\", \"SC\", \"SP\", \"CE\", \"MA\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"DF\", \"ES\", \"GO\", \"PA\", \"PB\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RO\", \"SE\", \"TO\"], prag: \"Xanthomonas citri susp. Citri (=Xanthomonas axonopodis pv. Citri)\", pragc: \"CANCRO CÍTRICO\", exig: [\"A partida deve ser produzida em propriedade sem ocorrência de Cancro Cítrico; \", \"Autorização emitida pela Comissão Executiva da CANECC da Unidade da Federação produtora, solicitada pelo órgão de Defesa Sanitária Vegetal da UF adquirente; \", \"PTV.\"], proib: false, leg: \"Portaria MAPA nº 291, de 23 de julho de 1997\", link: \"leg/PORT291-1997.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Cancro Cítrico PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro Cítrico\", hosp: [\"Citrus spp.\", \"Fortunella spp.\", \"Poncirus spp.\"], part: [\"frutos\"], orig: [\"MT\", \"MS\", \"MG\", \"PR\", \"RS\", \"RR\", \"SC\", \"SP\", \"CE\", \"MA\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Xanthomonas citri susp. Citri (=Xanthomonas axonopodis pv. Citri)\", pragc: \"CANCRO CÍTRICO\", exig: [\"TRÂNSITO PROIBIDO, se a partida for procedente de plantas remanescentes não contaminadas, localizadas em propriedades interditadas;\", \"Nota Fiscal e PTV, se a partida for produzida em propriedade de município interditado, com itinerário a ser obedecido;\", \"PTV, com itinerário a ser obedecido, se os frutos cítricos forem produzidos em propriedades não contaminadas, de municípios com ocorrência de Cancro Cítrico nos últimos dois anos;\", \"Nenhuma exigência para frutos cítricos produzidos em município sem ocorrência de Cancro Cítrico;\", \"O transporte de frutos cítricos deve ser realizado a granel por veículo adequadamente coberto, em embalagens descartáveis ou em caixas desinfestadas.\"], proib: false, leg: \"Portaria MAPA nº 291, de 23 de julho de 1997\", link: \"leg/PORT291-1997.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Greening PARA UF reconhecida pelo MAPA como livre da ocorrência de Greening\", hosp: [\"Citrus spp.\", \"Fortunella spp.\", \"Poncirus spp.\", \"Murraya paniculata\"], part: [\"mudas\", \"sementes\", \"estacas\", \"gemas\", \"ramas\", \"raízes\"], orig: [\"MG\", \"PR\", \"SP\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"TO\"], prag: \"Candidatus Liberibacter spp.\", pragc: \"GREENING\", exig: [\"PTV;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em\\ndesacordo com o previsto nesta Instrução Normativa, será sumariamente destruída, não cabendo ao infrator qualquer tipo de indenização, sem prejuízo das demais sanções estabelecidas pela legislação estadual e federal de defesa sanitária vegetal, conforme o art. 5º, da Instrução Normativa MAPA nº. 53, de 16 de outubro de 2010.\"], proib: false, leg: \"Instrução Normativa nº 53, de 16 de outubro de 2008\", link: \"leg/IN53-2008.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Pinta-preta-dos-citros PARA UF reconhecida pelo MAPA como livre da ocorrência de Pinta-preta-dos-citros\", hosp: [\"Citrus spp.\"], part: [\"mudas\", \"sementes\", \"estacas\", \"gemas\"], orig: [\"AM\", \"ES\", \"MT\", \"MS\", \"MG\", \"PR\", \"RJ\", \"RS\", \"SC\", \"SP\", \"BA\", \"GO\", \"RO\"], dest: [\"AC\", \"AL\", \"AP\", \"CE\", \"DF\", \"MA\", \"PA\", \"PB\", \"PE\", \"PI\", \"RN\", \"RR\", \"SE\", \"TO\"], prag: \"Guignardia citricarpa (=Phyllosticta citricarpa)\", pragc: \"PINTA-PRETA-DOS-CITROS\", exig: [\"PTV;\", \"A partida deve ser transportada em veículos fechados ou totalmente protegidos por lona.\"], proib: false, leg: \"Instrução Normativa MAPA nº 3, de 8 de janeiro de 2008\", link: \"leg/IN03-2008.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Pinta-preta-dos-citros PARA UF reconhecida pelo MAPA como livre da ocorrência de Pinta-preta-dos-citros\", hosp: [\"Citrus spp.\"], part: [\"frutos\"], orig: [\"AM\", \"ES\", \"MT\", \"MS\", \"MG\", \"PR\", \"RJ\", \"RS\", \"SC\", \"SP\", \"BA\", \"GO\", \"RO\"], dest: [\"AC\", \"AL\", \"AP\", \"CE\", \"DF\", \"MA\", \"PA\", \"PB\", \"PE\", \"PI\", \"RN\", \"RR\", \"SE\", \"TO\"], prag: \"Guignardia citricarpa (=Phyllosticta citricarpa)\", pragc: \"PINTA-PRETA-DOS-CITROS\", exig: [\"PTV com a seguinte declaração adicional: \\\"Os frutos foram produzidos sob Manejo Integrado de Guignardia citricarpa e submetidos a processo de seleção para a retirada de folhas e partes de ramos\\\";\", \"Os frutos devem estar isentos de material vegetativo.\"], proib: false, leg: \"Instrução Normativa MAPA nº 3, de 8 de janeiro de 2008\", link: \"leg/IN03-2008.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Broca Conígera PARA UF reconhecida pelo MAPA como livre da ocorrência de Broca Conígera\", hosp: [\"Myroxylon balsamum\", \"Anacardium occidentale\", \"Delonix regia\", \"Manihot esculenta\", \"Mangifera indica\", \"Switenia macrophyla\", \"Hevea brasiliensis\", \"Tectona grandis\"], part: [\"madeira\", \"maniva\", \"estaca\"], orig: [\"MT\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Sinoxylon conigerum\", pragc: \"BROCA CONÍGERA\", exig: [\"PTV.\"], proib: false, leg: \"\", link: \"\" },\r\n\t    { desc: \"DE UF com ocorrência de Cochonilha-do-carmim PARA UF reconhecida pelo MAPA como livre da ocorrência de Cochonilha-do-carmim\", hosp: [\"Opuntia cochenillifera\"], part: [\"palma\"], orig: [\"CE\", \"PB\", \"PE\", \"PI\", \"RN\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RJ\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Dactylopius opuntiae\", pragc: \"COCHONILHA-DO-CARMIM\", exig: [\"PTV;\", \"Nas barreiras fitossanitárias interestaduais, caso seja constatada por meio de inspeção visual, infestação por cochonilha-do-carmim, independente da espécie, toda a partida será imediatamente apreendida e destruída de modo a impedir a sobrevivência da praga, conforme o art. 6º. da Instrução Normativa MAPA nº. 23 de maio de 2007.\"], proib: false, leg: \"Instrução Normativa MAPA nº 23, de 29 de maio de 2007\", link: \"leg/IN23-2007.pdf\" },\r\n\t    { desc: \"DE qualquer UF PARA qualquer UF\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"mudas\"], orig: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], dest: [\"AC\", \"AL\", \"AM\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RR\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV;\", \"As mudas devem ser transportadas in vitro;\", \"A exigência de PTV não se aplica às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a mudas micropropagadas;\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE UF sem ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], dest: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:  \\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;   \\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:   \\n\\n2.1 - PTV para comprovar a origem.\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF sem ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], dest: [\"CE\", \"PE\", \"PI\", \"SC\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - A partida deve estar acompanhada de Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:   \\n\\n2.1 - PTV para comprovar a origem.\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE área livre de Moko-da-bananeira PARA UF com ocorrência de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"frutos\", \"flores\"], orig: [\"CE\", \"PE\", \"PI\", \"SC\"], dest: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\", \"A partida quando deve ser transportada em recipiente lacrado;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\", \"Estas exigências fitossanitárias só se aplicam a partida destinada a estudo em instituição de pesquisa científica.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE área livre de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"frutos\", \"flores\"], orig: [\"CE\", \"PE\", \"PI\", \"SC\"], dest: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\", \"A partida deve ser transportada em recipiente lacrado;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\", \"Estas exigências só se aplicam a partida destinada a estudo em instituição de pesquisa científica.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE área livre de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"frutos\", \"flores\"], orig: [\"CE\", \"PE\", \"PI\", \"SC\"], dest: [\"CE\", \"PE\", \"PI\", \"SC\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida\\n\\n 1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"rizomas\"], orig: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], dest: [\"CE\", \"PE\", \"PI\", \"SC\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - A partida deve estar acompanhada de Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA: TRÂNSITO PROIBIDO;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"rizomas\"], orig: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], dest: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - A partida deve estar acompanhada de Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA: TRÂNSITO PROIBIDO;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF sem ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"mudas\"], orig: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], dest: [\"CE\", \"PE\", \"PI\", \"SC\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV, para transitar pelas seguintes UF's: AP,AM,PA,RO,RR e SE;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE área livre de Moko-da-bananeira PARA UF com ocorrência de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"mudas\"], orig: [\"CE\", \"PE\", \"PI\", \"SC\"], dest: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE área livre de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"mudas\"], orig: [\"CE\", \"PE\", \"PI\", \"SC\"], dest: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), de UF de origem da partida \\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"mudas\"], orig: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], dest: [\"CE\", \"PE\", \"PI\", \"SC\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n- Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA) de origem, quando a partida for aplicada a estudo em instituição de pesquisa científica e, neste caso, deverá ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\\n\\n2.3 - A PTV deve constar se as mudas são in vitro ou micropropagadas;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\", \"Estas exigências fitossanitárias só se aplicam a mudas in vitro e micropropagadas.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"mudas\"], orig: [\"AM\", \"AP\", \"PA\", \"RO\", \"RR\", \"SE\"], dest: [\"AC\", \"AL\", \"BA\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PB\", \"PR\", \"RJ\", \"RN\", \"RS\", \"SP\", \"TO\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida,\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\\n\\n2.3 - A PTV deve constar se as mudas são in vitro ou micropropagadas;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\", \"Estas exigências fitossanitárias só se aplicam a mudas in vitro e micropropagadas.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE área livre de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp: [\"Heliconia spp.\", \"Musa spp.\"], part: [\"mudas\"], orig: [\"CE\", \"PE\", \"PI\", \"SC\"], dest: [\"CE\", \"PE\", \"PI\", \"SC\"], prag: \"Ralstonia solanacearum raça 2\", pragc: \"MOKO-DA-BANANEIRA\", exig: [\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida ,\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\", \"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\", \"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"], proib: undefined, leg: \"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\", link: \"leg/IN17-2009.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\", \"As bananas não podem transitar em cacho, em todo o território nacional;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"MG\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\", \"As bananas não podem transitar em cacho, em todo o território nacional;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida proveniente do municípios livres de Sigatoka Negra em MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"MS\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\", \"As bananas não podem transitar em cacho, em todo o território nacional;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida proveniente de municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área livre de Sigatoka Negra \", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MG\", \"MS\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], dest: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MG\", \"MS\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\", \"A partida deve estar lacrada para transitar por AC, AM, AP, MA, MG (exceto pelos municípios listados no item 6.1), MS (exceto pelos municípios listados no item 6.2), MT, PA, PR, RS, RJ, RO, RR, SC, SP e TO;\", \"As bananas não podem transitar em cacho, em todo o território nacional;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida proveniente e destinada a município livre de Sigatoka Negra de MG e de MS: \\n\\n6.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n6.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], dest: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a seguinte declaração adicional: \\\"A partida é originária de Unidade de Produção onde foi implantado o Sistema de Mitigação de Risco para Sigatoka Negra\\\";\", \"As bananas não podem transitar em cacho, em todo o território nacional;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida destinada a município livre de Sigatoka Negra de MG e de MS: \\n\\n5.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n5.2-  Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AC\", \"AM\", \"AP\", \"MA\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], dest: [\"MG\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a seguinte declaração adicional: \\\"A partida é originária de Unidade de Produção onde foi implantado o Sistema de Mitigação de Risco para Sigatoka Negra\\\";\", \"As bananas não podem transitar em cacho, em todo o território nacional;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida destinada a municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], dest: [\"MS\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a seguinte declaração adicional: \\\"A partida é originária de Unidade de Produção onde foi implantado o Sistema de Mitigação de Risco para Sigatoka Negra\\\";\", \"As bananas não podem transitar em cacho, em todo o território nacional;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida destinada a municípios livres de Sigatoka Negra de MS: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\nb) Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área com ocorrência de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"frutos\", \"flores\"], orig: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"Partida isenta de PTV, mas é PROIBIDO o trânsito por AL, BA, CE, DF, ES, GO, PB, PE, PI, RN, SE, bem como pelos municípios livres de Sigatoka Negra de MG e de MS: \\n\\n1.1 -  Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n1.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú, Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\", \"exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"MG\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\", \"exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida proveniente de municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"MS\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\", \"exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida proveniente de municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\", \"Estas exigências só se aplicam a mudas não micropopagadas;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área livre de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MG\", \"MS\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], dest: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MG\", \"MS\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra.\", \"A partida deve estar lacrada para transitar por AC, AM, AP, MA, MG (exceto pelos municípios listados no item 5.1), MS (exceto pelos municípios listados no item 5.2), MT, PA, PR, RS, RJ, RO, RR, SC, SP e TO;\", \"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\", \"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Estas exigências só se aplicam a partida proveniente e destinada a município livre de Sigatoka Negra de MG e de MS: \\n\\n5.1 -  Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba, Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n5.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú, Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\", \"Estas exigências só se aplicam a mudas não micropopagadas;\"], proib: false, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], dest: [\"AL\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MG\", \"MS\", \"PB\", \"PE\", \"PI\", \"RN\", \"SE\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"\tTRÂNSITO PROIBIDO;\", \"Esta proibição não se aplica às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Esta proibição só se aplica a partida destinada a município livre de Sigatoka Negra de MG e de MS:\\n\\n3.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo;\\n\\n3.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\", \"Esta proibição só se aplica à mudas não micropopagadas;\"], proib: true, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE área com ocorrência de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp: [\"Musa spp.\", \"Heliconia spp.\"], part: [\"mudas\"], orig: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], dest: [\"AC\", \"AM\", \"AP\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PR\", \"RS\", \"RJ\", \"RO\", \"RR\", \"SC\", \"SP\", \"TO\"], prag: \"Mycosphaerella fijiensis\", pragc: \"SIGATOKA NEGRA\", exig: [\"TRÂNSITO PROIBIDO;\", \"Esta proibição não se aplica a partida proveniente de município livre de Sigatoka Negra de MG e de MS: \\n\\n1.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n1.2 -  Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\", \"Esta proibição não se aplica às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\", \"Esta proibição só se aplica a mudas não micropopagadas;\"], proib: true, leg: \"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\", link: \"leg/IN17-2005.pdf\" },\r\n\t    { desc: \"DE UF com ocorrência de Anthonomus tomentosus PARA UF sem a ocorrência de Anthonomus tomentosus\", hosp: [\"Malpighia spp.\"], part: [\"frutos\"], orig: [\"AM\", \"RR\"], dest: [\"AC\", \"AL\", \"AP\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MG\", \"MS\", \"MT\", \"PA\", \"PB\", \"PE\", \"PI\", \"PR\", \"RJ\", \"RN\", \"RO\", \"RS\", \"SC\", \"SE\", \"SP\", \"TO\"], prag: \"Anthonomus tomentosus\", pragc: \"ANTHONOMUS TOMENTOSUS\", exig: [\"Se a partida for proveniente de todos os municípios de RR, exceto de Boa Vista, Mucajaí e Pacaraima, ou dos municípios de Presidente Figueiredo, Rio Preto da Eva e Manaus, no AM: PTV com a seguinte declaração adicional: A partida foi inspecionada e encontra-se livre de Anthonomus tomentosus;\", \"Se a partida for proveniente de Boa Vista, Mucajaí e Pacaraima, em RR: TRÂNSITO PROIBIDO.\", \"Estas exigências fitossanitárias só se aplicam a frutos frescos;\"], proib: false, leg: \"Instrução Normativa MAPA/SDA nº. 19, de 16 de setembro de 2014\", link: \"leg/IN19-2014.pdf.pdf\" }\r\n\t];\r\n\texports.db = db;\r\n\tvar hospedeiros = [\r\n\t    { nomeVul: \"Abacate (Persea gratissima)\", nomeSci: \"Persea gratissima\" },\r\n\t    { nomeVul: \"Abeto Europeu\", nomeSci: \"Picea abies\" },\r\n\t    { nomeVul: \"Abeto Vermelho Comum\", nomeSci: \"Picea abies\" },\r\n\t    { nomeVul: \"Abiu\", nomeSci: \"Chrysophyllum cainito\" },\r\n\t    { nomeVul: \"Acácia\", nomeSci: \"Acacia sp.\" },\r\n\t    { nomeVul: \"Açaí\", nomeSci: \"Euterpe oleracea\" },\r\n\t    { nomeVul: \"Açaí-do-Amazonas\", nomeSci: \"Euterpe precatoria\" },\r\n\t    { nomeVul: \"Açaí-solitário\", nomeSci: \"Euterpe precatoria\" },\r\n\t    { nomeVul: \"Acerola\", nomeSci: \"Malpighia punicifolia\" },\r\n\t    { nomeVul: \"Acerola (qualquer espécie)\", nomeSci: \"Malpighia spp.\" },\r\n\t    { nomeVul: \"Álamo\", nomeSci: \"Populus spp.\" },\r\n\t    { nomeVul: \"Álamo Americano\", nomeSci: \"Tilia americana\" },\r\n\t    { nomeVul: \"Álamo Branco\", nomeSci: \"Populus alba\" },\r\n\t    { nomeVul: \"Álamo Grande Dente\", nomeSci: \"Populus grandidenta\" },\r\n\t    { nomeVul: \"Álamo (Populus x canadensis)\", nomeSci: \"Populus x canadensis\" },\r\n\t    { nomeVul: \"Albízia\", nomeSci: \"Albizia lebbeck\" },\r\n\t    { nomeVul: \"Alder\", nomeSci: \"Alnus sp.\" },\r\n\t    { nomeVul: \"Alder Cinza\", nomeSci: \"Alnus incana\" },\r\n\t    { nomeVul: \"Alder Japonês\", nomeSci: \"Alnus japonica\" },\r\n\t    { nomeVul: \"Alder Negro\", nomeSci: \"Alnus glutinosa\" },\r\n\t    { nomeVul: \"Alder Vermelha\", nomeSci: \"Alnus rubra\" },\r\n\t    { nomeVul: \"Algodão Americano\", nomeSci: \"Populus wislizeni\" },\r\n\t    { nomeVul: \"Alpínia purpurata\", nomeSci: \"Alpínia purpurata\" },\r\n\t    { nomeVul: \"Alpínia zerumbet\", nomeSci: \"Alpínia zerumbet\" },\r\n\t    { nomeVul: \"Ameixa\", nomeSci: \"Prunus spp.\" },\r\n\t    { nomeVul: \"Ameixeira-japonesa\", nomeSci: \"Prunus salicina\" },\r\n\t    { nomeVul: \"Amelanchier\", nomeSci: \"Amelanchier laevis\" },\r\n\t    { nomeVul: \"Amendoeira\", nomeSci: \"Terminalia catappa\" },\r\n\t    { nomeVul: \"Amieiro\", nomeSci: \"Alnus glutinosa\" },\r\n\t    { nomeVul: \"Amieiro Negro\", nomeSci: \"Frangula almus\" },\r\n\t    { nomeVul: \"Angico\", nomeSci: \"Acacia sp.\" },\r\n\t    { nomeVul: \"Arapaju\", nomeSci: \"Manilkara zapota\" },\r\n\t    { nomeVul: \"Arbusto Espinheiro do Bosque\", nomeSci: \"Crataegus oxyacanthoides (syn: oxyacantha )\" },\r\n\t    { nomeVul: \"Arbusto Espinhento\", nomeSci: \"Craetaegus monogyna\" },\r\n\t    { nomeVul: \"Arecaceae (espécies desta família)\", nomeSci: \"Arecaceae (espécies desta família)\" },\r\n\t    { nomeVul: \"Aricuriroba\", nomeSci: \"Syagrus schizophylla\" },\r\n\t    { nomeVul: \"Árvore-do-viajante\", nomeSci: \"Ravenala madagascariensis\" },\r\n\t    { nomeVul: \"Árvore Preta\", nomeSci: \"Fraxinus nigra (syn. sambucifolia)\" },\r\n\t    { nomeVul: \"Aveia\", nomeSci: \"Avena sativa\" },\r\n\t    { nomeVul: \"Avelã\", nomeSci: \"Corylus avellana\" },\r\n\t    { nomeVul: \"Aveleira Japonesa\", nomeSci: \"Corylus sieboldiana\" },\r\n\t    { nomeVul: \"Aveleira Siberiana\", nomeSci: \"Corylus heterophylla var. thunbergiii\" },\r\n\t    { nomeVul: \"Azevinho\", nomeSci: \"Ilex aquifolium\" },\r\n\t    { nomeVul: \"Bacupari\", nomeSci: \"Garcinia dulcis\" },\r\n\t    { nomeVul: \"Bálsamo\", nomeSci: \"Myroxylon balsamum\" },\r\n\t    { nomeVul: \"Banana\", nomeSci: \"Musa spp.\" },\r\n\t    { nomeVul: \"Bastão-do-imperador\", nomeSci: \"Etlingera alatior\" },\r\n\t    { nomeVul: \"Bétula\", nomeSci: \"Betula sp.\" },\r\n\t    { nomeVul: \"Bétula Branca (B. papyrifera)\", nomeSci: \"Betula papyrifera\" },\r\n\t    { nomeVul: \"Bétula Branca (B. pubescens)\", nomeSci: \"Betula pubescens\" },\r\n\t    { nomeVul: \"Bétula Cinza\", nomeSci: \"Betula populifolia\" },\r\n\t    { nomeVul: \"Bétula lenta\", nomeSci: \"Betula nigra\" },\r\n\t    { nomeVul: \"Bétula Lenta\", nomeSci: \"Betula lenta\" },\r\n\t    { nomeVul: \"Bétula Lutea\", nomeSci: \"Betula lutea (synonym: alleghaniensis)\" },\r\n\t    { nomeVul: \"Bétula Monarca\", nomeSci: \"Betula maximowicziana\" },\r\n\t    { nomeVul: \"Bétula Negra\", nomeSci: \"Betula nigra\" },\r\n\t    { nomeVul: \"Bétula Papel\", nomeSci: \"Betula papyrifera\" },\r\n\t    { nomeVul: \"Bétula Prata\", nomeSci: \"Betula pendula (syn: verrucosa)\" },\r\n\t    { nomeVul: \"Bilimbi\", nomeSci: \"Chrysophyllum cainito\" },\r\n\t    { nomeVul: \"Bordo\", nomeSci: \"Acer sp.\" },\r\n\t    { nomeVul: \"Bordo (Acer pennsylvanicum)\", nomeSci: \"Acer pennsylvanicum\" },\r\n\t    { nomeVul: \"Bordo (Acer pseudoplatanus)\", nomeSci: \"Acer pseudoplatanus\" },\r\n\t    { nomeVul: \"Bordo (A. mono)\", nomeSci: \"Acer mono subsp. Heterophyllum\" },\r\n\t    { nomeVul: \"Bordo (A. negundo)\", nomeSci: \"Acer negundo\" },\r\n\t    { nomeVul: \"Bordo (A. sacharum)\", nomeSci: \"Acer saccharum\" },\r\n\t    { nomeVul: \"Bordo (A. spicatum)\", nomeSci: \"Acer spicatum\" },\r\n\t    { nomeVul: \"Bordo-da-videira\", nomeSci: \"Acer circinatum\" },\r\n\t    { nomeVul: \"Bordo Japonês\", nomeSci: \"Acer palmatum\" },\r\n\t    { nomeVul: \"Bordo Vermelho (A. macrophyllum)\", nomeSci: \"Acer macrophyllum\" },\r\n\t    { nomeVul: \"Bordo Vermelho (A. rubrum)\", nomeSci: \"Acer rubrum\" },\r\n\t    { nomeVul: \"Broto Vermelho Oriental\", nomeSci: \"Cercis canadensis\" },\r\n\t    { nomeVul: \"Buriti\", nomeSci: \"Mauritia flexuosa\" },\r\n\t    { nomeVul: \"Cabeça-de-negro\", nomeSci: \"Albizia lebbeck\" },\r\n\t    { nomeVul: \"Caimito\", nomeSci: \"Chrysophyllum cainito\" },\r\n\t    { nomeVul: \"Cajazeiro\", nomeSci: \"Spondias lutea\" },\r\n\t    { nomeVul: \"Caju\", nomeSci: \"Anacardium occidentale\" },\r\n\t    { nomeVul: \"Cana-da-Índia\", nomeSci: \"Canna indica\" },\r\n\t    { nomeVul: \"Carambola\", nomeSci: \"Averrhoa carambola\" },\r\n\t    { nomeVul: \"Carambola amarela\", nomeSci: \"Chrysophyllum cainito\" },\r\n\t    { nomeVul: \"Cárpino\", nomeSci: \"Carpinus sp.\" },\r\n\t    { nomeVul: \"Cárpino Betulas\", nomeSci: \"Carpinus betulas\" },\r\n\t    { nomeVul: \"Carvalho\", nomeSci: \"Quercus sp.\" },\r\n\t    { nomeVul: \"Carvalho Água\", nomeSci: \"Quercus laurifolia\" },\r\n\t    { nomeVul: \"Carvalho-alvarinho\", nomeSci: \"Quercus robur\" },\r\n\t    { nomeVul: \"Carvalho Branco\", nomeSci: \"Quercus alba\" },\r\n\t    { nomeVul: \"Carvalho Branco do Brejo\", nomeSci: \"Quercus bicolor\" },\r\n\t    { nomeVul: \"Carvalho Branco Oregon\", nomeSci: \"Quercus garryana\" },\r\n\t    { nomeVul: \"Carvalho Campeão (Q. borealis)\", nomeSci: \"Quercus borealis (syn: rubra)\" },\r\n\t    { nomeVul: \"Carvalho Campeão (Q. rubra)\", nomeSci: \"Quercus rubra\" },\r\n\t    { nomeVul: \"Carvalho Castanheiro\", nomeSci: \"Quercus montana\" },\r\n\t    { nomeVul: \"Carvalho Escarlata\", nomeSci: \"Quercus coccinea\" },\r\n\t    { nomeVul: \"Carvalho Folha Diamante\", nomeSci: \"Quercus laurifolia\" },\r\n\t    { nomeVul: \"Carvalho Glorioso\", nomeSci: \"Quercus laurifolia\" },\r\n\t    { nomeVul: \"Carvalho Glorioso do Brejo\", nomeSci: \"Quercus laurifolia\" },\r\n\t    { nomeVul: \"Carvalho Konara\", nomeSci: \"Quercus glandulifera\" },\r\n\t    { nomeVul: \"Carvalho Koreano\", nomeSci: \"Quercus glandulifera\" },\r\n\t    { nomeVul: \"Carvalho Mongoliano\", nomeSci: \"Quercus mongolica var grosserrata\" },\r\n\t    { nomeVul: \"Carvalho Obtuso\", nomeSci: \"Quercus laurifolia\" },\r\n\t    { nomeVul: \"Carvalho Oregon\", nomeSci: \"Quercus garryana\" },\r\n\t    { nomeVul: \"Carvalho Preto\", nomeSci: \"Quercus velutina\" },\r\n\t    { nomeVul: \"Carvalho-roble\", nomeSci: \"Quercus robur\" },\r\n\t    { nomeVul: \"Carvalho-vermelho\", nomeSci: \"Quercus robur\" },\r\n\t    { nomeVul: \"Carvalho Vermelho do Norte (Q. borealis)\", nomeSci: \"Quercus borealis (syn: rubra)\" },\r\n\t    { nomeVul: \"Carvalho Vermelho do Norte (Q. rubra)\", nomeSci: \"Quercus rubra\" },\r\n\t    { nomeVul: \"Castanha-da-Índia\", nomeSci: \"Aesculus sp.\" },\r\n\t    { nomeVul: \"Castanha-da-Índia (A. hippocastanum)\", nomeSci: \"Aesculus hippocastanum\" },\r\n\t    { nomeVul: \"Castanheiro Europeu\", nomeSci: \"Castanea dentata\" },\r\n\t    { nomeVul: \"Cereja de Pássaro\", nomeSci: \"Prunus ssiori\" },\r\n\t    { nomeVul: \"Cereja de Pássaro Virginia\", nomeSci: \"Prunus virginiana\" },\r\n\t    { nomeVul: \"Cerejeira\", nomeSci: \"Prunus avium\" },\r\n\t    { nomeVul: \"Cerejeira Chorona\", nomeSci: \"Prunus subhirtella var. pendula\" },\r\n\t    { nomeVul: \"Cerejeira Negra\", nomeSci: \"Prunus serotina\" },\r\n\t    { nomeVul: \"Chá-da-Índia\", nomeSci: \"Camellia sinensis\" },\r\n\t    { nomeVul: \"Choupo\", nomeSci: \"Populus spp.\" },\r\n\t    { nomeVul: \"Choupo-bálsamo\", nomeSci: \"Populus balsamifera\" },\r\n\t    { nomeVul: \"Choupo Branco\", nomeSci: \"Populus alba\" },\r\n\t    { nomeVul: \"Choupo (P. x canadensis)\", nomeSci: \"Populus x canadensis\" },\r\n\t    { nomeVul: \"Choupo Tremedor\", nomeSci: \"Populus tremula\" },\r\n\t    { nomeVul: \"Choupo Trêmulo\", nomeSci: \"Populus tremuloides\" },\r\n\t    { nomeVul: \"Chuva-de-ouro\", nomeSci: \"Laburnum anagyrioides\" },\r\n\t    { nomeVul: \"Cinamomo\", nomeSci: \"Melia azedarach\" },\r\n\t    { nomeVul: \"Cinza-da-montanha\", nomeSci: \"Sorbus sp.\" },\r\n\t    { nomeVul: \"Cinza Japonês\", nomeSci: \"Fraxinus mandshurica var. Japonica\" },\r\n\t    { nomeVul: \"Citros\", nomeSci: \"Citrus spp.\" },\r\n\t    { nomeVul: \"Coprosma Frondoso Fino\", nomeSci: \"Coprosma areolata\" },\r\n\t    { nomeVul: \"Coqueiro\", nomeSci: \"Cocos nucifera\" },\r\n\t    { nomeVul: \"Coquinho-azedo\", nomeSci: \"Butia capitata\" },\r\n\t    { nomeVul: \"Corifa\", nomeSci: \"Corypha umbraculifera\" },\r\n\t    { nomeVul: \"Corrente-de-ouro\", nomeSci: \"Laburnum anagyrioides\" },\r\n\t    { nomeVul: \"Cyca\", nomeSci: \"Cycas spp.\" },\r\n\t    { nomeVul: \"Dendezeiro\", nomeSci: \"Elaeis guineensis\" },\r\n\t    { nomeVul: \"Espinho Branco\", nomeSci: \"Craetaegus monogyna\" },\r\n\t    { nomeVul: \"Estrelítzia\", nomeSci: \"Strelitzia reginae\" },\r\n\t    { nomeVul: \"Faia\", nomeSci: \"Fagus sp.\" },\r\n\t    { nomeVul: \"Faia Americana\", nomeSci: \"Fagus americana\" },\r\n\t    { nomeVul: \"Faia Cobre\", nomeSci: \"Fagus sylvantica\" },\r\n\t    { nomeVul: \"Faia do Oriente\", nomeSci: \"Fagus orientalis\" },\r\n\t    { nomeVul: \"Faia Japonesa\", nomeSci: \"Fagus crenata f. grandifolia (syn.Americana)\" },\r\n\t    { nomeVul: \"Faia Roxa\", nomeSci: \"Fagus silvatica f. purpurea\" },\r\n\t    { nomeVul: \"Falso Castanho Japonês\", nomeSci: \"Aesculus turbinata\" },\r\n\t    { nomeVul: \"Faveiro\", nomeSci: \"Albizia lebbeck\" },\r\n\t    { nomeVul: \"Feixe Branco\", nomeSci: \"Sorbus aria\" },\r\n\t    { nomeVul: \"Flamboyant\", nomeSci: \"Delonix regia\" },\r\n\t    { nomeVul: \"Fortunela\", nomeSci: \"Fortunella spp.\" },\r\n\t    { nomeVul: \"Freixo (F. bungeana)\", nomeSci: \"Fraxinus bungeana\" },\r\n\t    { nomeVul: \"Freixo (F. excelsior)\", nomeSci: \"Fraxinus excelsior\" },\r\n\t    { nomeVul: \"Fruta Pão\", nomeSci: \"Artocarpus altilis\" },\r\n\t    { nomeVul: \"Gafanhoto Preto\", nomeSci: \"Robinia pseudoacacia\" },\r\n\t    { nomeVul: \"Goiaba\", nomeSci: \"Psidium guajava\" },\r\n\t    { nomeVul: \"Goma Preta\", nomeSci: \"Nyssa sylvatica\" },\r\n\t    { nomeVul: \"Gomuto\", nomeSci: \"Arenga pinnata\" },\r\n\t    { nomeVul: \"Grão Amargo\", nomeSci: \"Prunus virginiana\" },\r\n\t    { nomeVul: \"Helicônia\", nomeSci: \"Heliconia spp.\" },\r\n\t    { nomeVul: \"Heliconiaceae (espécies desta família)\", nomeSci: \"Heliconiaceae (espécies desta família)\" },\r\n\t    { nomeVul: \"Jaca\", nomeSci: \"Artocarpus integrifolia\" },\r\n\t    { nomeVul: \"Jambo Branco (S. aqueum)\", nomeSci: \"Syzygium aqueum\" },\r\n\t    { nomeVul: \"Jambo Branco (S. samarangense)\", nomeSci: \"Syzygium samarangense\" },\r\n\t    { nomeVul: \"Jambo D'água\", nomeSci: \"Syzygium aqueum\" },\r\n\t    { nomeVul: \"Jambo Rosa\", nomeSci: \"Syzygium jambos\" },\r\n\t    { nomeVul: \"Jambo Vermelho\", nomeSci: \"Syzygium malaccense\" },\r\n\t    { nomeVul: \"Jerivá\", nomeSci: \"Syagrus romanzoffianum\" },\r\n\t    { nomeVul: \"Juglans\", nomeSci: \"Juglans sp.\" },\r\n\t    { nomeVul: \"Jujuba (Z. jujuba)\", nomeSci: \"Ziziphus jujuba\" },\r\n\t    { nomeVul: \"Jujuba (Z. mauritiana)\", nomeSci: \"Ziziphus mauritiana\" },\r\n\t    { nomeVul: \"Jurema\", nomeSci: \"Acacia sp.\" },\r\n\t    { nomeVul: \"Karamu\", nomeSci: \"Coprosma lucida\" },\r\n\t    { nomeVul: \"Kowhai\", nomeSci: \"Sophora microphylla\" },\r\n\t    { nomeVul: \"Laranja\", nomeSci: \"Citrus sinensis\" },\r\n\t    { nomeVul: \"Laranja Azeda\", nomeSci: \"Citrus aurantium\" },\r\n\t    { nomeVul: \"Laranja Doce\", nomeSci: \"Citrus sinensis\" },\r\n\t    { nomeVul: \"Licuala\", nomeSci: \"Licuala grandis\" },\r\n\t    { nomeVul: \"Limão Cayena\", nomeSci: \"Averrhoa bilimbi\" },\r\n\t    { nomeVul: \"Linda-dos-jardins\", nomeSci: \"Rhus typhina\" },\r\n\t    { nomeVul: \"Louro Califórnia\", nomeSci: \"Umbelluraria californica\" },\r\n\t    { nomeVul: \"Louro-de-baiano\", nomeSci: \"Alpínia zerumbet\" },\r\n\t    { nomeVul: \"Maça\", nomeSci: \"Malus sp.\" },\r\n\t    { nomeVul: \"Maçã (M. communis)\", nomeSci: \"Malus communis\" },\r\n\t    { nomeVul: \"Maçã (M. pumila)\", nomeSci: \"Malus pumila\" },\r\n\t    { nomeVul: \"Maçã (M. pumila var domestica)\", nomeSci: \"Malus pumila var domestica\" },\r\n\t    { nomeVul: \"Maçã (M. x domestica)\", nomeSci: \"Malus x domestica\" },\r\n\t    { nomeVul: \"Maçã (Pyrus malus)\", nomeSci: \"Pyrus malus\" },\r\n\t    { nomeVul: \"Maçaranduba\", nomeSci: \"Manilkara zapota\" },\r\n\t    { nomeVul: \"Maçã Silvestre\", nomeSci: \"Malus sylvestris\" },\r\n\t    { nomeVul: \"Manchu Cinza\", nomeSci: \"Fraxinus mandshurica\" },\r\n\t    { nomeVul: \"Mandioca\", nomeSci: \"Manihot esculenta\" },\r\n\t    { nomeVul: \"Manga\", nomeSci: \"Mangifera indica\" },\r\n\t    { nomeVul: \"Mararaju\", nomeSci: \"Manilkara zapota\" },\r\n\t    { nomeVul: \"Miraguama\", nomeSci: \"Coccothrinax miraguama\" },\r\n\t    { nomeVul: \"Mogno\", nomeSci: \"Switenia macrophyla\" },\r\n\t    { nomeVul: \"Mogno Indiano Ocidental\", nomeSci: \"Swietenia mahagoni\" },\r\n\t    { nomeVul: \"Murta\", nomeSci: \"Murraya paniculata\" },\r\n\t    { nomeVul: \"Musaceae (espécies desta família)\", nomeSci: \"Musaceae (espécies desta família)\" },\r\n\t    { nomeVul: \"Nespereira\", nomeSci: \"Eriobotrya japonica\" },\r\n\t    { nomeVul: \"Nim\", nomeSci: \"Azadirachta indica\" },\r\n\t    { nomeVul: \"Nogueira\", nomeSci: \"Juglans sp.\" },\r\n\t    { nomeVul: \"Nogueira Amarga\", nomeSci: \"Carya cordiformis\" },\r\n\t    { nomeVul: \"Nogueira Amarga\", nomeSci: \"Carya spp.\" },\r\n\t    { nomeVul: \"Nogueira Amarga Casca de Pelúcia\", nomeSci: \"Carya ovata\" },\r\n\t    { nomeVul: \"Nogueira Amarga Coração Branco\", nomeSci: \"Carya tomentosa\" },\r\n\t    { nomeVul: \"Nogueira Amarga de Porco\", nomeSci: \"Carya glabra\" },\r\n\t    { nomeVul: \"Nogueira Branca\", nomeSci: \"Juglans cinerea\" },\r\n\t    { nomeVul: \"Nogueira Comum\", nomeSci: \"Juglans regia\" },\r\n\t    { nomeVul: \"Nogueira europeia\", nomeSci: \"Juglans regia\" },\r\n\t    { nomeVul: \"Nogueira Pecã\", nomeSci: \"Carya illinoensis\" },\r\n\t    { nomeVul: \"Nogueira Preta\", nomeSci: \"Juglans nigra\" },\r\n\t    { nomeVul: \"Noruega Abeto\", nomeSci: \"Picea abies\" },\r\n\t    { nomeVul: \"Olmo\", nomeSci: \"Ulmus sp.\" },\r\n\t    { nomeVul: \"Olmo Americano\", nomeSci: \"Ulmus americana\" },\r\n\t    { nomeVul: \"Olmo Escocês\", nomeSci: \"Ulmus glabra (syn. montana)\" },\r\n\t    { nomeVul: \"Padreiro\", nomeSci: \"Acer pseudoplatanus\" },\r\n\t    { nomeVul: \"Palma Corcho\", nomeSci: \"Microcycas calocoma\" },\r\n\t    { nomeVul: \"Palma forrageira\", nomeSci: \"Opuntia cochenillifera\" },\r\n\t    { nomeVul: \"Palmeira (Aiphanes spp.)\", nomeSci: \"Aiphanes spp.\" },\r\n\t    { nomeVul: \"Palmeira Areca\", nomeSci: \"Areca sp.\" },\r\n\t    { nomeVul: \"Palmeira areca-bambu\", nomeSci: \"Dypsis lutescens\" },\r\n\t    { nomeVul: \"Palmeira arecina\", nomeSci: \"Veitchia arecina\" },\r\n\t    { nomeVul: \"Palmeira-azul\", nomeSci: \"Bismarckia nobilis\" },\r\n\t    { nomeVul: \"Palmeira Bismarckia\", nomeSci: \"Bismarckia nobilis\" },\r\n\t    { nomeVul: \"Palmeira chamaedora\", nomeSci: \"Chamaedora spp.\" },\r\n\t    { nomeVul: \"Palmeira (Coccothrinax barbadensis)\", nomeSci: \"Coccothrinax barbadensis\" },\r\n\t    { nomeVul: \"Palmeira-da-California\", nomeSci: \"Washingtonia robusta\" },\r\n\t    { nomeVul: \"Palmeira-de-bismarck\", nomeSci: \"Bismarckia nobilis\" },\r\n\t    { nomeVul: \"Palmeira-de-macarthur\", nomeSci: \"Ptychosperma macarthurii\" },\r\n\t    { nomeVul: \"Palmeira-de-manarano\", nomeSci: \"Beccariophoenix madagascariensis\" },\r\n\t    { nomeVul: \"Palmeira-de-Manila\", nomeSci: \"Veitchia maerrillii\" },\r\n\t    { nomeVul: \"Palmeira-de-saia\", nomeSci: \"Washingtonia filifera\" },\r\n\t    { nomeVul: \"Palmeira Fênix\", nomeSci: \"Phoenix roebelenii\" },\r\n\t    { nomeVul: \"Palmeira-fuso\", nomeSci: \"Pseudophoenix sargentii\" },\r\n\t    { nomeVul: \"Palmeira-imperial-de-Porto Rico\", nomeSci: \"Roystonea borinquena\" },\r\n\t    { nomeVul: \"Palmeira-leque\", nomeSci: \"Schippia concolor\" },\r\n\t    { nomeVul: \"Palmeira-leque-brilhante\", nomeSci: \"Thrinax radiata\" },\r\n\t    { nomeVul: \"Palmeira-leque-da-china\", nomeSci: \"Livistona chinensis\" },\r\n\t    { nomeVul: \"Palmeira-leque-de-Fiji\", nomeSci: \"Pritchardia pacifica\" },\r\n\t    { nomeVul: \"Palmeira-paorotis\", nomeSci: \"Acoelorraphe wrightii\" },\r\n\t    { nomeVul: \"Palmeira-prateada-de-leque\", nomeSci: \"Coccothrinax argentata\" },\r\n\t    { nomeVul: \"Palmeira-princesa\", nomeSci: \"Dictyosperma album\" },\r\n\t    { nomeVul: \"Palmeira (Pseudophoenix vinifera)\", nomeSci: \"Pseudophoenix vinifera\" },\r\n\t    { nomeVul: \"Palmeira-rabo-de-peixe (Caryota mitis)\", nomeSci: \"Caryota mitis\" },\r\n\t    { nomeVul: \"Palmeira-rabo-de-peixe (Caryota urens)\", nomeSci: \"Caryota urens\" },\r\n\t    { nomeVul: \"Palmeira-rabo-de-raposa\", nomeSci: \"Wodyetia bifurcata\" },\r\n\t    { nomeVul: \"Palmeira-ráfia\", nomeSci: \"Raphis excelsa\" },\r\n\t    { nomeVul: \"Palmeira Real\", nomeSci: \"Roystonia regia\" },\r\n\t    { nomeVul: \"Palmeira Real Australiana\", nomeSci: \"Archontophoenix alexandrae\" },\r\n\t    { nomeVul: \"Palmeira Sagu\", nomeSci: \"Cycas spp.\" },\r\n\t    { nomeVul: \"Palmeira Solitária\", nomeSci: \"Ptychosperma elegans\" },\r\n\t    { nomeVul: \"Palmeira- triângulo\", nomeSci: \"Dypsis decaryi\" },\r\n\t    { nomeVul: \"Pandanaceae (espécies desta família)\", nomeSci: \"Pandanaceae (espécies desta família)\" },\r\n\t    { nomeVul: \"Pau Cachorro\", nomeSci: \"Cornus sp.\" },\r\n\t    { nomeVul: \"Pau Cachorro do Pacífico\", nomeSci: \"Cornus muttallii\" },\r\n\t    { nomeVul: \"Pera Asiática\", nomeSci: \"Pyrus pyrifolia\" },\r\n\t    { nomeVul: \"Pera Nashi\", nomeSci: \"Pyrus pyrifolia\" },\r\n\t    { nomeVul: \"Pereira Europeia\", nomeSci: \"Pyrus communis\" },\r\n\t    { nomeVul: \"Pereira Japonesa\", nomeSci: \"Pyrus pyrifolia var culta\" },\r\n\t    { nomeVul: \"Pimenta-do-diabo\", nomeSci: \"Capsicum annuum\" },\r\n\t    { nomeVul: \"Pimenta Picante\", nomeSci: \"Capsicum annuum\" },\r\n\t    { nomeVul: \"Pinus\", nomeSci: \"Pinus spp.\" },\r\n\t    { nomeVul: \"Pitanga Vermelha\", nomeSci: \"Eugenia uniflora\" },\r\n\t    { nomeVul: \"Plátano\", nomeSci: \"Platanus orientalis\" },\r\n\t    { nomeVul: \"Plátano Oriental\", nomeSci: \"Platanus orientalis\" },\r\n\t    { nomeVul: \"Pomelo\", nomeSci: \"Citrus paradisi\" },\r\n\t    { nomeVul: \"Poncirus\", nomeSci: \"Poncirus spp.\" },\r\n\t    { nomeVul: \"Pritchardia\", nomeSci: \"Pritchardia vuylstekeana\" },\r\n\t    { nomeVul: \"Pupunha\", nomeSci: \"Bactris gasipaes\" },\r\n\t    { nomeVul: \"Pupunha Silvestre\", nomeSci: \"Bactris plumeriana\" },\r\n\t    { nomeVul: \"Ribes\", nomeSci: \"Ribes sp.\" },\r\n\t    { nomeVul: \"Rosa\", nomeSci: \"Rosa spp.\" },\r\n\t    { nomeVul: \"Rustifina Rus\", nomeSci: \"Rhus typhina\" },\r\n\t    { nomeVul: \"Salgueiro Branco\", nomeSci: \"Salix alba\" },\r\n\t    { nomeVul: \"Salgueiro Cinza\", nomeSci: \"Salix cinerea\" },\r\n\t    { nomeVul: \"Salgueiro Dourado\", nomeSci: \"Salix alba var Vitelina\" },\r\n\t    { nomeVul: \"Salgueiro-folha-de-pêssego\", nomeSci: \"Salix amygdaloides\" },\r\n\t    { nomeVul: \"Salgueiro Preto\", nomeSci: \"Salix nigricans\" },\r\n\t    { nomeVul: \"Salgueiro Púrpura\", nomeSci: \"Salix purpurea\" },\r\n\t    { nomeVul: \"Salgueiro-taco-de-críquete\", nomeSci: \"Salix alba L. Coerulea\" },\r\n\t    { nomeVul: \"Salgueiro Velho Mundo\", nomeSci: \"Salix amygdalina\" },\r\n\t    { nomeVul: \"Salix\", nomeSci: \"Salix spp.\" },\r\n\t    { nomeVul: \"Sanguinho\", nomeSci: \"Frangula almus\" },\r\n\t    { nomeVul: \"Sapoti\", nomeSci: \"Manilkara zapota\" },\r\n\t    { nomeVul: \"Seringueira\", nomeSci: \"Hevea brasiliensis\" },\r\n\t    { nomeVul: \"Sete Copas\", nomeSci: \"Terminalia catappa\" },\r\n\t    { nomeVul: \"Sófora\", nomeSci: \"Sophora microphylla\" },\r\n\t    { nomeVul: \"Sorgo\", nomeSci: \"Sorghum bicolor\" },\r\n\t    { nomeVul: \"Sorva\", nomeSci: \"Sorbus sp.\" },\r\n\t    { nomeVul: \"Sorva (S. domestica)\", nomeSci: \"Sorbus domestica\" },\r\n\t    { nomeVul: \"Strelitziaceae (espécies desta família)\", nomeSci: \"Strelitziaceae (espécies desta família)\" },\r\n\t    { nomeVul: \"Sumac Staghorn\", nomeSci: \"Rhus typhina\" },\r\n\t    { nomeVul: \"Tamareira\", nomeSci: \"Phoenix dactylifera\" },\r\n\t    { nomeVul: \"Tamareira-das-canárias\", nomeSci: \"Phoenix canariensis\" },\r\n\t    { nomeVul: \"Tamareira-do-Senegal\", nomeSci: \"Phoenix reclinata\" },\r\n\t    { nomeVul: \"Tangerina\", nomeSci: \"Citrus reticulata\" },\r\n\t    { nomeVul: \"Taperebá\", nomeSci: \"Spondias lutea\" },\r\n\t    { nomeVul: \"Teca\", nomeSci: \"Tectona grandis\" },\r\n\t    { nomeVul: \"Teja\", nomeSci: \"Tilia cordata\" },\r\n\t    { nomeVul: \"Tejo\", nomeSci: \"Tilia cordata\" },\r\n\t    { nomeVul: \"Tella\", nomeSci: \"Tilia cordata\" },\r\n\t    { nomeVul: \"Texa\", nomeSci: \"Tilia cordata\" },\r\n\t    { nomeVul: \"Tilha\", nomeSci: \"Tilia cordata\" },\r\n\t    { nomeVul: \"Tília\", nomeSci: \"Tilia sp.\" },\r\n\t    { nomeVul: \"Tillera\", nomeSci: \"Tilia cordata\" },\r\n\t    { nomeVul: \"Tilo\", nomeSci: \"Tilia americana\" },\r\n\t    { nomeVul: \"Tomate\", nomeSci: \"Licopersicum esculentum\" },\r\n\t    { nomeVul: \"Toranja\", nomeSci: \"Citrus paradisi\" },\r\n\t    { nomeVul: \"Tramazeira\", nomeSci: \"Sorbus aucuparia\" },\r\n\t    { nomeVul: \"Tulipeiro\", nomeSci: \"Liriodendron tulipifera\" },\r\n\t    { nomeVul: \"Tupelo\", nomeSci: \"Nyssa sylvatica\" },\r\n\t    { nomeVul: \"Ulmeiro\", nomeSci: \"Ulmus sp.\" },\r\n\t    { nomeVul: \"Unha-de-gato\", nomeSci: \"Acacia sp.\" },\r\n\t    { nomeVul: \"Videira e seus híbridos\", nomeSci: \"Vitis spp. e seus híbridos\" },\r\n\t    { nomeVul: \"Vimeiro Púrpura\", nomeSci: \"Salix purpurea\" },\r\n\t    { nomeVul: \"Viola\", nomeSci: \"Viola sp.\" },\r\n\t    { nomeVul: \"Zingiberaceae (espécies desta família)\", nomeSci: \"Zingiberaceae (espécies desta família)\" }\r\n\t];\r\n\texports.hospedeiros = hospedeiros;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar React = __webpack_require__(1);\r\n\tvar Mapa = function (_a) { return React.createElement(\"div\", {class: \"center\"}, \r\n\t    React.createElement(\"img\", {src: \"moko_sigatoka_s.png\", width: \"60%\"})\r\n\t); };\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = Mapa;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar mobx_1 = __webpack_require__(2);\r\n\t__webpack_require__(3);\r\n\tvar db_1 = __webpack_require__(4);\r\n\tvar Store = (function () {\r\n\t    function Store() {\r\n\t        this.db = db_1.db;\r\n\t        this.hospedeiros = db_1.hospedeiros;\r\n\t        this.listaNomesSci = db_1.hospedeiros.unique('nomeSci');\r\n\t        this.dados = {\r\n\t            hospSci: null,\r\n\t            hospVul: null,\r\n\t            prod: null,\r\n\t            orig: null,\r\n\t            dest: null\r\n\t        };\r\n\t        this.estados = [\r\n\t            { estado: 'Acre', UF: 'AC' }, { estado: 'Alagoas', UF: 'AL' }, { estado: 'Amazonas', UF: 'AM' },\r\n\t            { estado: 'Amapá', UF: 'AP' }, { estado: 'Bahia', UF: 'BA' }, { estado: 'Ceará', UF: 'CE' },\r\n\t            { estado: 'Distrito Federal', UF: 'DF' }, { estado: 'Espirito Santo', UF: 'ES' }, { estado: 'Goiás', UF: 'GO' },\r\n\t            { estado: 'Maranhão', UF: 'MA' }, { estado: 'Minas Gerais', UF: 'MG' }, { estado: 'Mato Grosso do Sul', UF: 'MS' },\r\n\t            { estado: 'Mato Grosso', UF: 'MT' }, { estado: 'Pará', UF: 'PA' }, { estado: 'Paraíba', UF: 'PB' },\r\n\t            { estado: 'Pernanbuco', UF: 'PE' }, { estado: 'Piauí', UF: 'PI' }, { estado: 'Paraná', UF: 'PR' },\r\n\t            { estado: 'Rio de janeiro', UF: 'RJ' }, { estado: 'Rio Grande do Norte', UF: 'RN' },\r\n\t            { estado: 'Rondônia', UF: 'RO' }, { estado: 'Roraima', UF: 'RR' }, { estado: 'Rio Grande do Sul', UF: 'RS' },\r\n\t            { estado: 'Santa Catarina', UF: 'SC' }, { estado: 'Sergipe', UF: 'SE' }, { estado: 'São Paulo', UF: 'SP' },\r\n\t            { estado: 'Tocantins', UF: 'TO' }\r\n\t        ];\r\n\t    }\r\n\t    Object.defineProperty(Store.prototype, \"origem\", {\r\n\t        get: function () {\r\n\t            var _this = this;\r\n\t            return this.estados.filter(function (estado) { return estado.UF !== _this.dados.dest; });\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ;\r\n\t    Object.defineProperty(Store.prototype, \"destino\", {\r\n\t        get: function () {\r\n\t            var _this = this;\r\n\t            return this.estados.filter(function (estado) { return estado.UF !== _this.dados.orig; });\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ;\r\n\t    Object.defineProperty(Store.prototype, \"partes\", {\r\n\t        get: function () {\r\n\t            var _this = this;\r\n\t            return db_1.db\r\n\t                .filter(function (exig) { return exig.hosp.includes(_this.dados.hospSci); })\r\n\t                .by('part')\r\n\t                .flatten()\r\n\t                .unique();\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(Store.prototype, \"gender\", {\r\n\t        get: function () { return this.dados.hospSci.split(' ')[0]; },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(Store.prototype, \"result\", {\r\n\t        get: function () {\r\n\t            var _this = this;\r\n\t            return db_1.db.filter(function (exig) {\r\n\t                return ((exig.hosp.includes(_this.dados.hospSci) ||\r\n\t                    exig.hosp.includes(_this.gender + ' sp.') ||\r\n\t                    exig.hosp.includes(_this.gender + ' spp.')) &&\r\n\t                    exig.orig.includes(_this.dados.orig) &&\r\n\t                    exig.dest.includes(_this.dados.dest) &&\r\n\t                    exig.part.includes(_this.dados.prod));\r\n\t            });\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    __decorate([\r\n\t        mobx_1.observable\r\n\t    ], Store.prototype, \"dados\", void 0);\r\n\t    __decorate([\r\n\t        mobx_1.computed\r\n\t    ], Store.prototype, \"origem\", null);\r\n\t    __decorate([\r\n\t        mobx_1.computed\r\n\t    ], Store.prototype, \"destino\", null);\r\n\t    __decorate([\r\n\t        mobx_1.computed\r\n\t    ], Store.prototype, \"partes\", null);\r\n\t    __decorate([\r\n\t        mobx_1.computed\r\n\t    ], Store.prototype, \"gender\", null);\r\n\t    __decorate([\r\n\t        mobx_1.computed\r\n\t    ], Store.prototype, \"result\", null);\r\n\t    return Store;\r\n\t}());\r\n\texports.store = new Store();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = exports.store;\r\n\t/*  var normalize = function(str) {\r\n\t    return str.toLowerCase().\r\n\t               replace(/\\\\s/g, \"\").\r\n\t               replace(/[àáâãäå]/g, \"a\").\r\n\t               replace(/æ/g, \"ae\").\r\n\t               replace(/ç/g, \"c\").\r\n\t               replace(/[èéêë]/g, \"e\").\r\n\t               replace(/[ìíîï]/g, \"i\").\r\n\t               replace(/ñ/g, \"n\").\r\n\t               replace(/[òóôõö]/g, \"o\").\r\n\t               replace(/œ/g, \"oe\").\r\n\t               replace(/[ùúûü]/g, \"u\").\r\n\t               replace(/[ýÿ]/g, \"y\").\r\n\t               replace(/\\\\W/g, \"\");\r\n\t  };\r\n\t  \r\n\t  this.normalizedName = function(item) {\r\n\t    return normalize(item.name);\r\n\t  };*/ \r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = ReactDOM;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar React = __webpack_require__(1);\r\n\tvar item = {};\r\n\tvar Base = function (_a) {\r\n\t    var db = _a.db;\r\n\t    return (React.createElement(\"div\", {\"ng-hide\": \"cat.base\"}, \r\n\t        React.createElement(\"br\", null), \r\n\t        React.createElement(\"table\", {style: { \"width\": \"100%\" }, class: \"table-grid\"}, \r\n\t            React.createElement(\"caption\", null, \"Exigências\"), \r\n\t            React.createElement(\"thead\", null, \r\n\t                React.createElement(\"tr\", null, \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"10%\" }}, \"Descrição\"), \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"20%\" }}, \"Hospedeiro\"), \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"10%\" }}, \"Partida\"), \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"10%\" }}, \"Origem\"), \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"10%\" }}, \"Destino\"), \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"15%\" }}, \"Legislação\"), \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"30%\" }}, \"Exigências\"), \r\n\t                    React.createElement(\"th\", {style: { \"width\": \"5%\" }}, \"Trânsito Proibido\"))\r\n\t            ), \r\n\t            React.createElement(\"tbody\", null, db.map(function (item, i) {\r\n\t                return (React.createElement(\"tr\", {key: i}, \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"10%\" }}, \r\n\t                        React.createElement(\"span\", null, item.desc)\r\n\t                    ), \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"20%\" }, class: \"italic\"}, \r\n\t                        React.createElement(\"span\", null, item.hosp)\r\n\t                    ), \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"10%\" }}, \r\n\t                        React.createElement(\"span\", null, item.part)\r\n\t                    ), \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"10%\" }}, \r\n\t                        React.createElement(\"span\", null, item.orig)\r\n\t                    ), \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"10%\" }}, \r\n\t                        React.createElement(\"span\", null, item.dest)\r\n\t                    ), \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"15%\" }}, \r\n\t                        React.createElement(\"a\", {target: \"_blank\", \"ng-href\": \"{item.link}\"}, item.leg), \r\n\t                        React.createElement(\"br\", null), \r\n\t                        React.createElement(\"br\", null), \r\n\t                        React.createElement(\"span\", null, item.pragc), \r\n\t                        React.createElement(\"br\", null), \r\n\t                        React.createElement(\"br\", null), \r\n\t                        React.createElement(\"span\", {class: \"italic\"}, item.prag)), \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"30%\" }}, \r\n\t                        React.createElement(\"div\", {\"ng-repeat\": \"exig in item.exig track by $index\", style: { \"margin\": \"6px\" }}, \r\n\t                            React.createElement(\"span\", null, \r\n\t                                \"$index+1\", \r\n\t                                \" - \", \r\n\t                                \"exig\")\r\n\t                        )\r\n\t                    ), \r\n\t                    React.createElement(\"td\", {style: { \"width\": \"5%\" }, align: \"center\"}, \r\n\t                        React.createElement(\"input\", {type: \"checkbox\", onclick: \"return false;\", \"ng-model\": \"item.proib\"})\r\n\t                    )));\r\n\t            })), \r\n\t            React.createElement(\"tfoot\", {class: \"form-barra-botoes\"}, \r\n\t                React.createElement(\"tr\", null, \r\n\t                    React.createElement(\"td\", null)\r\n\t                )\r\n\t            ))));\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = Base;\r\n\t//ng-class-even=\"'linha-alternada'\" \r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** dist/bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 977c8fc42cf23adeb208\n **/","import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport store from './store';\r\nimport Mapa from './mapa';\r\nimport Base from './basex';\r\n\r\n\r\nclass App extends React.Component<{store:any},{}> {  \r\n  render() {\r\n    return (\r\n       <div id=\"container\" >\r\n          <Mapa />\r\n          <Base db={store}></Base>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nReactDom.render(<App store={store}/>, document.getElementById('app'));\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.tsx\n **/","module.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nregisterGlobals();\nexports._ = {\n    quickDiff: quickDiff,\n    resetGlobalState: resetGlobalState\n};\nexports.extras = {\n    allowStateChanges: allowStateChanges,\n    getDependencyTree: getDependencyTree,\n    getObserverTree: getObserverTree,\n    isComputingDerivation: isComputingDerivation,\n    resetGlobalState: resetGlobalState,\n    trackTransitions: trackTransitions\n};\nfunction autorun(view, scope) {\n    assertUnwrapped(view, \"autorun methods cannot have modifiers\");\n    invariant(typeof view === \"function\", \"autorun expects a function\");\n    invariant(view.length === 0, \"autorun expects a function without arguments\");\n    if (scope)\n        view = view.bind(scope);\n    var reaction = new Reaction(view.name || \"Autorun\", function () {\n        this.track(view);\n    });\n    reaction.schedule();\n    return reaction.getDisposer();\n}\nexports.autorun = autorun;\nfunction when(predicate, effect, scope) {\n    var disposeImmediately = false;\n    var disposer = autorun(function () {\n        if (predicate.call(scope)) {\n            if (disposer)\n                disposer();\n            else\n                disposeImmediately = true;\n            effect.call(scope);\n        }\n    });\n    if (disposeImmediately)\n        disposer();\n    return disposer;\n}\nexports.when = when;\nfunction autorunUntil(predicate, effect, scope) {\n    deprecated(\"`autorunUntil` is deprecated, please use `when`.\");\n    return when.apply(null, arguments);\n}\nexports.autorunUntil = autorunUntil;\nfunction autorunAsync(func, delay, scope) {\n    if (delay === void 0) { delay = 1; }\n    if (scope)\n        func = func.bind(scope);\n    var isScheduled = false;\n    var r = new Reaction(func.name || \"AutorunAsync\", function () {\n        if (!isScheduled) {\n            isScheduled = true;\n            setTimeout(function () {\n                isScheduled = false;\n                if (!r.isDisposed)\n                    r.track(func);\n            }, delay);\n        }\n    });\n    r.schedule();\n    return r.getDisposer();\n}\nexports.autorunAsync = autorunAsync;\nfunction computed(targetOrExpr, keyOrScope, baseDescriptor, options) {\n    if (arguments.length < 3 && typeof targetOrExpr === \"function\")\n        return computedExpr(targetOrExpr, keyOrScope);\n    return computedDecorator.apply(null, arguments);\n}\nexports.computed = computed;\nfunction computedExpr(expr, scope) {\n    var _a = getValueModeFromValue(expr, ValueMode.Recursive), mode = _a[0], value = _a[1];\n    return new ComputedValue(value, scope, mode === ValueMode.Structure, value.name || \"ComputedValue\");\n}\nfunction computedDecorator(target, key, baseDescriptor, options) {\n    if (arguments.length === 1) {\n        var options_1 = target;\n        return function (target, key, baseDescriptor) { return computedDecorator.call(null, target, key, baseDescriptor, options_1); };\n    }\n    invariant(baseDescriptor && baseDescriptor.hasOwnProperty(\"get\"), \"@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'\");\n    assertPropertyConfigurable(target, key);\n    var descriptor = {};\n    var getter = baseDescriptor.get;\n    invariant(typeof target === \"object\", \"The @observable decorator can only be used on objects\", key);\n    invariant(typeof getter === \"function\", \"@observable expects a getter function if used on a property.\", key);\n    invariant(!baseDescriptor.set, \"@observable properties cannot have a setter.\", key);\n    invariant(getter.length === 0, \"@observable getter functions should not take arguments.\", key);\n    descriptor.configurable = true;\n    descriptor.enumerable = false;\n    descriptor.get = function () {\n        setObservableObjectProperty(asObservableObject(this, undefined, ValueMode.Recursive), key, options && options.asStructure === true ? asStructure(getter) : getter);\n        return this[key];\n    };\n    descriptor.set = throwingComputedValueSetter;\n    if (!baseDescriptor) {\n        Object.defineProperty(target, key, descriptor);\n    }\n    else {\n        return descriptor;\n    }\n}\nfunction throwingComputedValueSetter() {\n    throw new Error(\"[ComputedValue] It is not allowed to assign new values to computed properties.\");\n}\nfunction createTransformer(transformer, onCleanup) {\n    invariant(typeof transformer === \"function\" && transformer.length === 1, \"createTransformer expects a function that accepts one argument\");\n    var objectCache = {};\n    var resetId = globalState.resetId;\n    var Transformer = (function (_super) {\n        __extends(Transformer, _super);\n        function Transformer(sourceIdentifier, sourceObject) {\n            _super.call(this, function () { return transformer(sourceObject); }, null, false, \"Transformer-\" + transformer.name + \"-\" + sourceIdentifier);\n            this.sourceIdentifier = sourceIdentifier;\n            this.sourceObject = sourceObject;\n        }\n        Transformer.prototype.onBecomeUnobserved = function () {\n            var lastValue = this.value;\n            _super.prototype.onBecomeUnobserved.call(this);\n            delete objectCache[this.sourceIdentifier];\n            if (onCleanup)\n                onCleanup(lastValue, this.sourceObject);\n        };\n        return Transformer;\n    }(ComputedValue));\n    return function (object) {\n        if (resetId !== globalState.resetId) {\n            objectCache = {};\n            resetId = globalState.resetId;\n        }\n        var identifier = getMemoizationId(object);\n        var reactiveTransformer = objectCache[identifier];\n        if (reactiveTransformer)\n            return reactiveTransformer.get();\n        reactiveTransformer = objectCache[identifier] = new Transformer(identifier, object);\n        return reactiveTransformer.get();\n    };\n}\nexports.createTransformer = createTransformer;\nfunction getMemoizationId(object) {\n    if (object === null || typeof object !== \"object\")\n        throw new Error(\"[mobx] transform expected some kind of object, got: \" + object);\n    var tid = object.$transformId;\n    if (tid === undefined) {\n        tid = getNextId();\n        Object.defineProperty(object, '$transformId', {\n            configurable: true,\n            writable: true,\n            enumerable: false,\n            value: tid\n        });\n    }\n    return tid;\n}\nfunction expr(expr, scope) {\n    if (!isComputingDerivation())\n        console.warn(\"[mobx.expr] 'expr' should only be used inside other reactive functions.\");\n    return computed(expr, scope).get();\n}\nexports.expr = expr;\nfunction extendObservable(target) {\n    var properties = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        properties[_i - 1] = arguments[_i];\n    }\n    invariant(arguments.length >= 2, \"extendObservable expected 2 or more arguments\");\n    invariant(typeof target === \"object\", \"extendObservable expects an object as first argument\");\n    invariant(!(target instanceof ObservableMap), \"extendObservable should not be used on maps, use map.merge instead\");\n    properties.forEach(function (propSet) {\n        invariant(typeof propSet === \"object\", \"all arguments of extendObservable should be objects\");\n        extendObservableHelper(target, propSet, ValueMode.Recursive, null);\n    });\n    return target;\n}\nexports.extendObservable = extendObservable;\nfunction extendObservableHelper(target, properties, mode, name) {\n    var adm = asObservableObject(target, name, mode);\n    for (var key in properties)\n        if (properties.hasOwnProperty(key)) {\n            if (target === properties && !isPropertyConfigurable(target, key))\n                continue;\n            setObservableObjectProperty(adm, key, properties[key]);\n        }\n    return target;\n}\nfunction allowStateChanges(allowStateChanges, func) {\n    var prev = globalState.allowStateChanges;\n    globalState.allowStateChanges = allowStateChanges;\n    var res = func();\n    globalState.allowStateChanges = prev;\n    return res;\n}\nvar transitionTracker = null;\nfunction reportTransition(node, state, changed) {\n    if (changed === void 0) { changed = false; }\n    if (transitionTracker)\n        transitionTracker.emit({\n            id: node.id,\n            name: node.name + \"@\" + node.id,\n            node: node, state: state, changed: changed\n        });\n}\nfunction getDependencyTree(thing) {\n    return nodeToDependencyTree(thing);\n}\nfunction nodeToDependencyTree(node) {\n    var result = {\n        id: node.id,\n        name: node.name + \"@\" + node.id\n    };\n    if (node.observing && node.observing.length)\n        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree(thing) {\n    return nodeToObserverTree(thing);\n}\nfunction nodeToObserverTree(node) {\n    var result = {\n        id: node.id,\n        name: node.name + \"@\" + node.id\n    };\n    if (node.observers && node.observers.length)\n        result.observers = unique(node.observers).map(nodeToObserverTree);\n    return result;\n}\nfunction createConsoleReporter(extensive) {\n    var lines = [];\n    var scheduled = false;\n    return function (line) {\n        if (extensive || line.changed)\n            lines.push(line);\n        if (!scheduled) {\n            scheduled = true;\n            setTimeout(function () {\n                console[console[\"table\"] ? \"table\" : \"dir\"](lines);\n                lines = [];\n                scheduled = false;\n            }, 1);\n        }\n    };\n}\nfunction trackTransitions(extensive, onReport) {\n    if (extensive === void 0) { extensive = false; }\n    if (!transitionTracker)\n        transitionTracker = new SimpleEventEmitter();\n    var reporter = onReport\n        ? function (line) {\n            if (extensive || line.changed)\n                onReport(line);\n        }\n        : createConsoleReporter(extensive);\n    var disposer = transitionTracker.on(reporter);\n    return once(function () {\n        disposer();\n        if (transitionTracker.listeners.length === 0)\n            transitionTracker = null;\n    });\n}\nfunction isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (value instanceof ObservableMap || value instanceof ObservableArray)\n            throw new Error(\"[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n        else if (isObservableObject(value)) {\n            var o = value.$mobx;\n            return o.values && !!o.values[property];\n        }\n        return false;\n    }\n    return !!value.$mobx || value instanceof Atom || value instanceof Reaction || value instanceof ComputedValue;\n}\nexports.isObservable = isObservable;\nfunction observableDecorator(target, key, baseDescriptor) {\n    invariant(arguments.length >= 2 && arguments.length <= 3, \"Illegal decorator config\", key);\n    assertPropertyConfigurable(target, key);\n    if (baseDescriptor && baseDescriptor.hasOwnProperty(\"get\")) {\n        deprecated(\"Using @observable on computed values is deprecated. Use @computed instead.\");\n        return computed.apply(null, arguments);\n    }\n    var descriptor = {};\n    invariant(typeof target === \"object\", \"The @observable decorator can only be used on objects\", key);\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n    descriptor.get = function () {\n        var _this = this;\n        var baseValue = undefined;\n        if (baseDescriptor && baseDescriptor.initializer) {\n            baseValue = baseDescriptor.initializer();\n            if (typeof baseValue === \"function\")\n                baseValue = asReference(baseValue);\n        }\n        allowStateChanges(true, function () {\n            setObservableObjectProperty(asObservableObject(_this, undefined, ValueMode.Recursive), key, baseValue);\n        });\n        return this[key];\n    };\n    descriptor.set = function (value) {\n        setObservableObjectProperty(asObservableObject(this, undefined, ValueMode.Recursive), key, typeof value === \"function\" ? asReference(value) : value);\n    };\n    if (!baseDescriptor) {\n        Object.defineProperty(target, key, descriptor);\n    }\n    else {\n        return descriptor;\n    }\n}\nfunction observable(v, keyOrScope) {\n    if (typeof arguments[1] === \"string\")\n        return observableDecorator.apply(null, arguments);\n    invariant(arguments.length === 1 || arguments.length === 2, \"observable expects one or two arguments\");\n    if (isObservable(v))\n        return v;\n    var _a = getValueModeFromValue(v, ValueMode.Recursive), mode = _a[0], value = _a[1];\n    var sourceType = mode === ValueMode.Reference ? ValueType.Reference : getTypeOfValue(value);\n    switch (sourceType) {\n        case ValueType.Array:\n        case ValueType.PlainObject:\n            return makeChildObservable(value, mode);\n        case ValueType.Reference:\n        case ValueType.ComplexObject:\n            return new ObservableValue(value, mode);\n        case ValueType.ComplexFunction:\n            throw new Error(\"[mobx.observable] To be able to make a function reactive it should not have arguments. If you need an observable reference to a function, use `observable(asReference(f))`\");\n        case ValueType.ViewFunction:\n            deprecated(\"Use `computed(expr)` instead of `observable(expr)`\");\n            return computed(v, keyOrScope);\n    }\n    invariant(false, \"Illegal State\");\n}\nexports.observable = observable;\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"Reference\"] = 0] = \"Reference\";\n    ValueType[ValueType[\"PlainObject\"] = 1] = \"PlainObject\";\n    ValueType[ValueType[\"ComplexObject\"] = 2] = \"ComplexObject\";\n    ValueType[ValueType[\"Array\"] = 3] = \"Array\";\n    ValueType[ValueType[\"ViewFunction\"] = 4] = \"ViewFunction\";\n    ValueType[ValueType[\"ComplexFunction\"] = 5] = \"ComplexFunction\";\n})(ValueType || (ValueType = {}));\nfunction getTypeOfValue(value) {\n    if (value === null || value === undefined)\n        return ValueType.Reference;\n    if (typeof value === \"function\")\n        return value.length ? ValueType.ComplexFunction : ValueType.ViewFunction;\n    if (Array.isArray(value) || value instanceof ObservableArray)\n        return ValueType.Array;\n    if (typeof value === \"object\")\n        return isPlainObject(value) ? ValueType.PlainObject : ValueType.ComplexObject;\n    return ValueType.Reference;\n}\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nexports.observe = observe;\nfunction observeObservable(thing, listener, fireImmediately) {\n    if (isObservableArray(thing))\n        return thing.observe(listener);\n    if (isObservableMap(thing))\n        return thing.observe(listener);\n    if (isObservableObject(thing))\n        return observeObservableObject(thing, listener, fireImmediately);\n    if (thing instanceof ObservableValue || thing instanceof ComputedValue)\n        return thing.observe(listener, fireImmediately);\n    if (isPlainObject(thing))\n        return observeObservable(observable(thing), listener, fireImmediately);\n    invariant(false, \"first argument of observe should be some observable value or plain object\");\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    var propError = \"[mobx.observe] the provided observable map has no key with name: \" + property;\n    if (isObservableMap(thing)) {\n        if (!thing._has(property))\n            throw new Error(propError);\n        return observe(thing._data[property], listener);\n    }\n    if (isObservableObject(thing)) {\n        if (!isObservable(thing, property))\n            throw new Error(propError);\n        return observe(thing.$mobx.values[property], listener, fireImmediately);\n    }\n    if (isPlainObject(thing)) {\n        extendObservable(thing, {\n            property: thing[property]\n        });\n        return observeObservableProperty(thing, property, listener, fireImmediately);\n    }\n    invariant(false, \"first argument of observe should be an (observable)object or observableMap if a property name is given\");\n}\nfunction toJSON(source, detectCycles, __alreadySeen) {\n    if (detectCycles === void 0) { detectCycles = true; }\n    if (__alreadySeen === void 0) { __alreadySeen = null; }\n    function cache(value) {\n        if (detectCycles)\n            __alreadySeen.push([source, value]);\n        return value;\n    }\n    if (detectCycles && __alreadySeen === null)\n        __alreadySeen = [];\n    if (detectCycles && source !== null && typeof source === \"object\") {\n        for (var i = 0, l = __alreadySeen.length; i < l; i++)\n            if (__alreadySeen[i][0] === source)\n                return __alreadySeen[i][1];\n    }\n    if (!source)\n        return source;\n    if (Array.isArray(source) || source instanceof ObservableArray) {\n        var res = cache([]);\n        res.push.apply(res, source.map(function (value) { return toJSON(value, detectCycles, __alreadySeen); }));\n        return res;\n    }\n    if (source instanceof ObservableMap) {\n        var res_1 = cache({});\n        source.forEach(function (value, key) { return res_1[key] = toJSON(value, detectCycles, __alreadySeen); });\n        return res_1;\n    }\n    if (typeof source === \"object\" && isPlainObject(source)) {\n        var res = cache({});\n        for (var key in source)\n            if (source.hasOwnProperty(key))\n                res[key] = toJSON(source[key], detectCycles, __alreadySeen);\n        return res;\n    }\n    if (isObservable(source) && source.$mobx instanceof ObservableValue)\n        return toJSON(source(), detectCycles, __alreadySeen);\n    return source;\n}\nexports.toJSON = toJSON;\nfunction propagateAtomReady(atom) {\n    invariant(atom.isDirty, \"atom not dirty\");\n    atom.isDirty = false;\n    reportTransition(atom, \"READY\", true);\n    propagateReadiness(atom, true);\n}\nvar Atom = (function () {\n    function Atom(name, onBecomeObserved, onBecomeUnobserved) {\n        if (name === void 0) { name = \"Atom\"; }\n        if (onBecomeObserved === void 0) { onBecomeObserved = noop; }\n        if (onBecomeUnobserved === void 0) { onBecomeUnobserved = noop; }\n        this.name = name;\n        this.onBecomeObserved = onBecomeObserved;\n        this.onBecomeUnobserved = onBecomeUnobserved;\n        this.id = getNextId();\n        this.isDirty = false;\n        this.staleObservers = [];\n        this.observers = [];\n    }\n    Atom.prototype.reportObserved = function () {\n        reportObserved(this);\n    };\n    Atom.prototype.reportChanged = function () {\n        if (!this.isDirty) {\n            this.reportStale();\n            this.reportReady();\n        }\n    };\n    Atom.prototype.reportStale = function () {\n        if (!this.isDirty) {\n            this.isDirty = true;\n            reportTransition(this, \"STALE\");\n            propagateStaleness(this);\n        }\n    };\n    Atom.prototype.reportReady = function () {\n        invariant(this.isDirty, \"atom not dirty\");\n        if (globalState.inTransaction > 0)\n            globalState.changedAtoms.push(this);\n        else {\n            propagateAtomReady(this);\n            runReactions();\n        }\n    };\n    Atom.prototype.toString = function () {\n        return this.name + \"@\" + this.id;\n    };\n    return Atom;\n}());\nexports.Atom = Atom;\nvar ComputedValue = (function () {\n    function ComputedValue(derivation, scope, compareStructural, name) {\n        var _this = this;\n        if (name === void 0) { name = \"ComputedValue\"; }\n        this.derivation = derivation;\n        this.scope = scope;\n        this.compareStructural = compareStructural;\n        this.name = name;\n        this.id = getNextId();\n        this.isLazy = true;\n        this.isComputing = false;\n        this.staleObservers = [];\n        this.observers = [];\n        this.observing = [];\n        this.dependencyChangeCount = 0;\n        this.dependencyStaleCount = 0;\n        this.value = undefined;\n        this.peek = function () {\n            _this.isComputing = true;\n            globalState.isComputingComputedValue++;\n            var prevAllowStateChanges = globalState.allowStateChanges;\n            globalState.allowStateChanges = false;\n            var res = derivation.call(scope);\n            globalState.allowStateChanges = prevAllowStateChanges;\n            globalState.isComputingComputedValue--;\n            _this.isComputing = false;\n            return res;\n        };\n    }\n    ComputedValue.prototype.onBecomeObserved = function () {\n    };\n    ComputedValue.prototype.onBecomeUnobserved = function () {\n        for (var i = 0, l = this.observing.length; i < l; i++)\n            removeObserver(this.observing[i], this);\n        this.observing = [];\n        this.isLazy = true;\n        this.value = undefined;\n    };\n    ComputedValue.prototype.onDependenciesReady = function () {\n        var changed = this.trackAndCompute();\n        reportTransition(this, \"READY\", changed);\n        return changed;\n    };\n    ComputedValue.prototype.get = function () {\n        invariant(!this.isComputing, \"Cycle detected\", this.derivation);\n        reportObserved(this);\n        if (this.dependencyStaleCount > 0) {\n            return this.peek();\n        }\n        if (this.isLazy) {\n            if (isComputingDerivation()) {\n                this.isLazy = false;\n                this.trackAndCompute();\n            }\n            else {\n                return this.peek();\n            }\n        }\n        return this.value;\n    };\n    ComputedValue.prototype.set = function (_) {\n        throw new Error(\"[ComputedValue '\" + name + \"'] It is not possible to assign a new value to a computed value.\");\n    };\n    ComputedValue.prototype.trackAndCompute = function () {\n        var oldValue = this.value;\n        this.value = trackDerivedFunction(this, this.peek);\n        return valueDidChange(this.compareStructural, this.value, oldValue);\n    };\n    ComputedValue.prototype.observe = function (listener, fireImmediately) {\n        var _this = this;\n        var firstTime = true;\n        var prevValue = undefined;\n        return autorun(function () {\n            var newValue = _this.get();\n            if (!firstTime || fireImmediately) {\n                globalState.inUntracked++;\n                listener(newValue, prevValue);\n                globalState.inUntracked--;\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    };\n    ComputedValue.prototype.toString = function () {\n        return this.name + \"@\" + this.id + \"[\" + this.derivation.toString() + \"]\";\n    };\n    return ComputedValue;\n}());\nfunction isComputingDerivation() {\n    return globalState.derivationStack.length > 0;\n}\nfunction checkIfStateModificationsAreAllowed() {\n    invariant(globalState.allowStateChanges, \"It is not allowed to change the state when a computed value is being evaluated. Use 'autorun' to create reactive functions with side-effects. Or use 'extras.allowStateChanges(true, block)' to supress this message.\");\n}\nfunction notifyDependencyStale(derivation) {\n    if (++derivation.dependencyStaleCount === 1) {\n        reportTransition(derivation, \"STALE\");\n        propagateStaleness(derivation);\n    }\n}\nfunction notifyDependencyReady(derivation, dependencyDidChange) {\n    invariant(derivation.dependencyStaleCount > 0, \"unexpected ready notification\");\n    if (dependencyDidChange)\n        derivation.dependencyChangeCount += 1;\n    if (--derivation.dependencyStaleCount === 0) {\n        if (derivation.dependencyChangeCount > 0) {\n            derivation.dependencyChangeCount = 0;\n            reportTransition(derivation, \"PENDING\");\n            var changed = derivation.onDependenciesReady();\n            propagateReadiness(derivation, changed);\n        }\n        else {\n            reportTransition(derivation, \"READY\", false);\n            propagateReadiness(derivation, false);\n        }\n    }\n}\nfunction trackDerivedFunction(derivation, f) {\n    var hasException = true;\n    var prevObserving = derivation.observing;\n    derivation.observing = [];\n    globalState.derivationStack.push(derivation);\n    try {\n        var result = f();\n        hasException = false;\n        bindDependencies(derivation, prevObserving);\n        return result;\n    }\n    finally {\n        if (hasException) {\n            console.error(\"[mobx] An uncaught exception occurred while calculating your computed value, autorun or transformer. Or inside the render method of a React component. \" +\n                \"These methods should never throw exceptions as MobX will usually not be able to recover from them. \" +\n                (\"Please enable 'Pause on (caught) exceptions' in your debugger to find the root cause. In: '\" + derivation.name + \"#\" + derivation.id + \"'\"));\n            resetGlobalState();\n        }\n    }\n}\nfunction bindDependencies(derivation, prevObserving) {\n    globalState.derivationStack.length -= 1;\n    var _a = quickDiff(derivation.observing, prevObserving), added = _a[0], removed = _a[1];\n    for (var i = 0, l = added.length; i < l; i++) {\n        var dependency = added[i];\n        invariant(!findCycle(derivation, dependency), \"Cycle detected\", derivation);\n        addObserver(added[i], derivation);\n    }\n    for (var i = 0, l = removed.length; i < l; i++)\n        removeObserver(removed[i], derivation);\n}\nfunction findCycle(needle, node) {\n    var obs = node.observing;\n    if (obs === undefined)\n        return false;\n    if (obs.indexOf(node) !== -1)\n        return true;\n    for (var l = obs.length, i = 0; i < l; i++)\n        if (findCycle(needle, obs[i]))\n            return true;\n    return false;\n}\nvar MobXGlobals = (function () {\n    function MobXGlobals() {\n        this.version = 1;\n        this.derivationStack = [];\n        this.mobxGuid = 0;\n        this.inTransaction = 0;\n        this.inUntracked = 0;\n        this.isRunningReactions = false;\n        this.changedAtoms = [];\n        this.pendingReactions = [];\n        this.allowStateChanges = true;\n        this.resetId = 0;\n    }\n    return MobXGlobals;\n}());\nvar globalState = (function () {\n    var res = new MobXGlobals();\n    if (global.__mobservableTrackingStack || global.__mobservableViewStack)\n        throw new Error(\"[mobx] An incompatible version of mobservable is already loaded.\");\n    if (global.__mobxGlobal && global.__mobxGlobal.version !== res.version)\n        throw new Error(\"[mobx] An incompatible version of mobx is already loaded.\");\n    if (global.__mobxGlobal)\n        return global.__mobxGlobal;\n    return global.__mobxGlobal = res;\n})();\nfunction getNextId() {\n    return ++globalState.mobxGuid;\n}\nfunction registerGlobals() {\n}\nfunction resetGlobalState() {\n    globalState.resetId++;\n    var defaultGlobals = new MobXGlobals();\n    for (var key in defaultGlobals)\n        if (key !== \"mobxGuid\" && key !== \"resetId\")\n            globalState[key] = defaultGlobals[key];\n}\nfunction addObserver(observable, node) {\n    var obs = observable.observers, l = obs.length;\n    obs[l] = node;\n    if (l === 0)\n        observable.onBecomeObserved();\n}\nfunction removeObserver(observable, node) {\n    var obs = observable.observers, idx = obs.indexOf(node);\n    if (idx !== -1)\n        obs.splice(idx, 1);\n    if (obs.length === 0)\n        observable.onBecomeUnobserved();\n}\nfunction reportObserved(observable) {\n    if (globalState.inUntracked > 0)\n        return;\n    var derivationStack = globalState.derivationStack;\n    var l = derivationStack.length;\n    if (l > 0) {\n        var deps = derivationStack[l - 1].observing, depslength = deps.length;\n        if (deps[depslength - 1] !== observable && deps[depslength - 2] !== observable)\n            deps[depslength] = observable;\n    }\n}\nfunction propagateStaleness(observable) {\n    var os = observable.observers.slice();\n    os.forEach(notifyDependencyStale);\n    observable.staleObservers = observable.staleObservers.concat(os);\n}\nfunction propagateReadiness(observable, valueDidActuallyChange) {\n    observable.staleObservers.splice(0).forEach(function (o) { return notifyDependencyReady(o, valueDidActuallyChange); });\n}\nfunction untracked(action) {\n    deprecated(\"This feature is experimental and might be removed in a future minor release. Please report if you use this feature in production: https://github.com/mobxjs/mobx/issues/49\");\n    globalState.inUntracked++;\n    var res = action();\n    globalState.inUntracked--;\n    return res;\n}\nexports.untracked = untracked;\nvar Reaction = (function () {\n    function Reaction(name, onInvalidate) {\n        if (name === void 0) { name = \"Reaction\"; }\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.id = getNextId();\n        this.staleObservers = EMPTY_ARRAY;\n        this.observers = EMPTY_ARRAY;\n        this.observing = [];\n        this.dependencyChangeCount = 0;\n        this.dependencyStaleCount = 0;\n        this.isDisposed = false;\n        this._isScheduled = false;\n    }\n    Reaction.prototype.onBecomeObserved = function () {\n    };\n    Reaction.prototype.onBecomeUnobserved = function () {\n    };\n    Reaction.prototype.onDependenciesReady = function () {\n        this.schedule();\n        return false;\n    };\n    Reaction.prototype.schedule = function () {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState.pendingReactions.push(this);\n            runReactions();\n        }\n    };\n    Reaction.prototype.isScheduled = function () {\n        return this.dependencyStaleCount > 0 || this._isScheduled;\n    };\n    Reaction.prototype.runReaction = function () {\n        if (!this.isDisposed) {\n            this._isScheduled = false;\n            this.onInvalidate();\n            reportTransition(this, \"READY\", true);\n        }\n    };\n    Reaction.prototype.track = function (fn) {\n        trackDerivedFunction(this, fn);\n    };\n    Reaction.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            var deps = this.observing.splice(0);\n            for (var i = 0, l = deps.length; i < l; i++)\n                removeObserver(deps[i], this);\n        }\n    };\n    Reaction.prototype.getDisposer = function () {\n        var r = this.dispose.bind(this);\n        r.$mobx = this;\n        return r;\n    };\n    Reaction.prototype.toString = function () {\n        return \"Reaction[\" + this.name + \"]\";\n    };\n    return Reaction;\n}());\nexports.Reaction = Reaction;\nvar MAX_REACTION_ITERATIONS = 100;\nfunction runReactions() {\n    if (globalState.isRunningReactions === true || globalState.inTransaction > 0)\n        return;\n    globalState.isRunningReactions = true;\n    var allReactions = globalState.pendingReactions;\n    var iterations = 0;\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS)\n            throw new Error(\"Reaction doesn't converge to a stable state. Probably there is a cycle in the reactive function: \" + allReactions[0].toString());\n        var remainingReactions = allReactions.splice(0);\n        for (var i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState.isRunningReactions = false;\n}\nfunction transaction(action, thisArg) {\n    globalState.inTransaction += 1;\n    var res = action.call(thisArg);\n    if (--globalState.inTransaction === 0) {\n        var values = globalState.changedAtoms.splice(0);\n        for (var i = 0, l = values.length; i < l; i++)\n            propagateAtomReady(values[i]);\n        runReactions();\n    }\n    return res;\n}\nexports.transaction = transaction;\nvar ValueMode;\n(function (ValueMode) {\n    ValueMode[ValueMode[\"Recursive\"] = 0] = \"Recursive\";\n    ValueMode[ValueMode[\"Reference\"] = 1] = \"Reference\";\n    ValueMode[ValueMode[\"Structure\"] = 2] = \"Structure\";\n    ValueMode[ValueMode[\"Flat\"] = 3] = \"Flat\";\n})(ValueMode || (ValueMode = {}));\nfunction asReference(value) {\n    return new AsReference(value);\n}\nexports.asReference = asReference;\nfunction asStructure(value) {\n    return new AsStructure(value);\n}\nexports.asStructure = asStructure;\nfunction asFlat(value) {\n    return new AsFlat(value);\n}\nexports.asFlat = asFlat;\nvar AsReference = (function () {\n    function AsReference(value) {\n        this.value = value;\n        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n    }\n    return AsReference;\n}());\nvar AsStructure = (function () {\n    function AsStructure(value) {\n        this.value = value;\n        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n    }\n    return AsStructure;\n}());\nvar AsFlat = (function () {\n    function AsFlat(value) {\n        this.value = value;\n        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n    }\n    return AsFlat;\n}());\nfunction getValueModeFromValue(value, defaultMode) {\n    if (value instanceof AsReference)\n        return [ValueMode.Reference, value.value];\n    if (value instanceof AsStructure)\n        return [ValueMode.Structure, value.value];\n    if (value instanceof AsFlat)\n        return [ValueMode.Flat, value.value];\n    return [defaultMode, value];\n}\nfunction getValueModeFromModifierFunc(func) {\n    if (func === asReference)\n        return ValueMode.Reference;\n    else if (func === asStructure)\n        return ValueMode.Structure;\n    else if (func === asFlat)\n        return ValueMode.Flat;\n    invariant(func === undefined, \"Cannot determine value mode from function. Please pass in one of these: mobx.asReference, mobx.asStructure or mobx.asFlat, got: \" + func);\n    return ValueMode.Recursive;\n}\nfunction makeChildObservable(value, parentMode, name) {\n    var childMode;\n    if (isObservable(value))\n        return value;\n    switch (parentMode) {\n        case ValueMode.Reference:\n            return value;\n        case ValueMode.Flat:\n            assertUnwrapped(value, \"Items inside 'asFlat' cannot have modifiers\");\n            childMode = ValueMode.Reference;\n            break;\n        case ValueMode.Structure:\n            assertUnwrapped(value, \"Items inside 'asStructure' cannot have modifiers\");\n            childMode = ValueMode.Structure;\n            break;\n        case ValueMode.Recursive:\n            _a = getValueModeFromValue(value, ValueMode.Recursive), childMode = _a[0], value = _a[1];\n            break;\n        default:\n            invariant(false, \"Illegal State\");\n    }\n    if (Array.isArray(value) && Object.isExtensible(value))\n        return createObservableArray(value, childMode, name);\n    if (isPlainObject(value) && Object.isExtensible(value))\n        return extendObservableHelper(value, value, childMode, name);\n    return value;\n    var _a;\n}\nfunction assertUnwrapped(value, message) {\n    if (value instanceof AsReference || value instanceof AsStructure || value instanceof AsFlat)\n        throw new Error(\"[mobx] asStructure / asReference / asFlat cannot be used here. \" + message);\n}\nvar OBSERVABLE_ARRAY_BUFFER_SIZE = 0;\nvar StubArray = (function () {\n    function StubArray() {\n    }\n    return StubArray;\n}());\nStubArray.prototype = [];\nfunction getArrayLength(adm) {\n    adm.atom.reportObserved();\n    return adm.values.length;\n}\nfunction setArrayLength(adm, newLength) {\n    if (typeof newLength !== \"number\" || newLength < 0)\n        throw new Error(\"[mobx.array] Out of range: \" + newLength);\n    var currentLength = adm.values.length;\n    if (newLength === currentLength)\n        return;\n    else if (newLength > currentLength)\n        spliceWithArray(adm, currentLength, 0, new Array(newLength - currentLength));\n    else\n        spliceWithArray(adm, newLength, currentLength - newLength);\n}\nfunction updateArrayLength(adm, oldLength, delta) {\n    if (oldLength !== adm.lastKnownLength)\n        throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?\");\n    checkIfStateModificationsAreAllowed();\n    adm.lastKnownLength += delta;\n    if (delta > 0 && oldLength + delta > OBSERVABLE_ARRAY_BUFFER_SIZE)\n        reserveArrayBuffer(oldLength + delta);\n}\nfunction spliceWithArray(adm, index, deleteCount, newItems) {\n    var length = adm.values.length;\n    if ((newItems === undefined || newItems.length === 0) && (deleteCount === 0 || length === 0))\n        return [];\n    if (index === undefined)\n        index = 0;\n    else if (index > length)\n        index = length;\n    else if (index < 0)\n        index = Math.max(0, length + index);\n    if (arguments.length === 2)\n        deleteCount = length - index;\n    else if (deleteCount === undefined || deleteCount === null)\n        deleteCount = 0;\n    else\n        deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n    if (newItems === undefined)\n        newItems = EMPTY_ARRAY;\n    else\n        newItems = newItems.map(adm.makeChildReactive);\n    var lengthDelta = newItems.length - deleteCount;\n    updateArrayLength(adm, length, lengthDelta);\n    var res = (_a = adm.values).splice.apply(_a, [index, deleteCount].concat(newItems));\n    notifyArraySplice(adm, index, res, newItems);\n    return res;\n    var _a;\n}\nfunction makeReactiveArrayItem(value) {\n    assertUnwrapped(value, \"Array values cannot have modifiers\");\n    if (this.mode === ValueMode.Flat || this.mode === ValueMode.Reference)\n        return value;\n    return makeChildObservable(value, this.mode, this.atom.name + \"@\" + this.atom.id + \" / ArrayEntry\");\n}\nfunction notifyArrayChildUpdate(adm, index, oldValue) {\n    adm.atom.reportChanged();\n    if (adm.changeEvent)\n        adm.changeEvent.emit({ object: adm.array, type: \"update\", index: index, oldValue: oldValue });\n}\nfunction notifyArraySplice(adm, index, deleted, added) {\n    if (deleted.length === 0 && added.length === 0)\n        return;\n    adm.atom.reportChanged();\n    if (adm.changeEvent)\n        adm.changeEvent.emit({ object: adm.array, type: \"splice\", index: index, addedCount: added.length, removed: deleted });\n}\nvar ObservableArray = (function (_super) {\n    __extends(ObservableArray, _super);\n    function ObservableArray(initialValues, mode, name) {\n        _super.call(this);\n        var adm = this.$mobx = {\n            atom: new Atom(name || \"ObservableArray\"),\n            values: undefined,\n            changeEvent: undefined,\n            lastKnownLength: 0,\n            mode: mode,\n            array: this,\n            makeChildReactive: function (v) { return makeReactiveArrayItem.call(adm, v); }\n        };\n        Object.defineProperty(this, \"$mobx\", {\n            enumerable: false,\n            configurable: false,\n            writable: false\n        });\n        if (initialValues && initialValues.length) {\n            updateArrayLength(adm, 0, initialValues.length);\n            adm.values = initialValues.map(adm.makeChildReactive);\n        }\n        else\n            adm.values = [];\n    }\n    ObservableArray.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        if (this.$mobx.changeEvent === undefined)\n            this.$mobx.changeEvent = new SimpleEventEmitter();\n        if (fireImmediately)\n            listener({ object: this, type: \"splice\", index: 0, addedCount: this.$mobx.values.length, removed: [] });\n        return this.$mobx.changeEvent.on(listener);\n    };\n    ObservableArray.prototype.clear = function () {\n        return this.splice(0);\n    };\n    ObservableArray.prototype.replace = function (newItems) {\n        return spliceWithArray(this.$mobx, 0, this.$mobx.values.length, newItems);\n    };\n    ObservableArray.prototype.toJSON = function () {\n        this.$mobx.atom.reportObserved();\n        return this.$mobx.values.slice();\n    };\n    ObservableArray.prototype.peek = function () {\n        return this.$mobx.values;\n    };\n    ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {\n        if (fromIndex === void 0) { fromIndex = 0; }\n        this.$mobx.atom.reportObserved();\n        var items = this.$mobx.values, l = items.length;\n        for (var i = fromIndex; i < l; i++)\n            if (predicate.call(thisArg, items[i], i, this))\n                return items[i];\n        return null;\n    };\n    ObservableArray.prototype.splice = function (index, deleteCount) {\n        var newItems = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            newItems[_i - 2] = arguments[_i];\n        }\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return spliceWithArray(this.$mobx, index);\n            case 2:\n                return spliceWithArray(this.$mobx, index, deleteCount);\n        }\n        return spliceWithArray(this.$mobx, index, deleteCount, newItems);\n    };\n    ObservableArray.prototype.push = function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i - 0] = arguments[_i];\n        }\n        spliceWithArray(this.$mobx, this.$mobx.values.length, 0, items);\n        return this.$mobx.values.length;\n    };\n    ObservableArray.prototype.pop = function () {\n        return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];\n    };\n    ObservableArray.prototype.shift = function () {\n        return this.splice(0, 1)[0];\n    };\n    ObservableArray.prototype.unshift = function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i - 0] = arguments[_i];\n        }\n        spliceWithArray(this.$mobx, 0, 0, items);\n        return this.$mobx.values.length;\n    };\n    ObservableArray.prototype.reverse = function () {\n        this.$mobx.atom.reportObserved();\n        var clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    };\n    ObservableArray.prototype.sort = function (compareFn) {\n        this.$mobx.atom.reportObserved();\n        var clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    };\n    ObservableArray.prototype.remove = function (value) {\n        var idx = this.$mobx.values.indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    };\n    ObservableArray.prototype.toString = function () {\n        return \"[mobx.array] \" + Array.prototype.toString.apply(this.$mobx.values, arguments);\n    };\n    ObservableArray.prototype.toLocaleString = function () {\n        return \"[mobx.array] \" + Array.prototype.toLocaleString.apply(this.$mobx.values, arguments);\n    };\n    return ObservableArray;\n}(StubArray));\nmakeNonEnumerable(ObservableArray.prototype, [\n    \"constructor\",\n    \"observe\",\n    \"clear\",\n    \"replace\",\n    \"toJSON\",\n    \"peek\",\n    \"find\",\n    \"splice\",\n    \"push\",\n    \"pop\",\n    \"shift\",\n    \"unshift\",\n    \"reverse\",\n    \"sort\",\n    \"remove\",\n    \"toString\",\n    \"toLocaleString\",\n]);\nObject.defineProperty(ObservableArray.prototype, \"length\", {\n    enumerable: false,\n    configurable: true,\n    get: function () {\n        return getArrayLength(this.$mobx);\n    },\n    set: function (newLength) {\n        setArrayLength(this.$mobx, newLength);\n    }\n});\n[\n    \"concat\",\n    \"every\",\n    \"filter\",\n    \"forEach\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"map\",\n    \"reduce\",\n    \"reduceRight\",\n    \"slice\",\n    \"some\"\n].forEach(function (funcName) {\n    var baseFunc = Array.prototype[funcName];\n    Object.defineProperty(ObservableArray.prototype, funcName, {\n        configurable: false,\n        writable: true,\n        enumerable: false,\n        value: function () {\n            this.$mobx.atom.reportObserved();\n            return baseFunc.apply(this.$mobx.values, arguments);\n        }\n    });\n});\nfunction createArrayBufferItem(index) {\n    Object.defineProperty(ObservableArray.prototype, \"\" + index, {\n        enumerable: false,\n        configurable: false,\n        set: function (value) {\n            var impl = this.$mobx;\n            var values = impl.values;\n            assertUnwrapped(value, \"Modifiers cannot be used on array values. For non-reactive array values use makeReactive(asFlat(array)).\");\n            if (index < values.length) {\n                checkIfStateModificationsAreAllowed();\n                var oldValue = values[index];\n                var changed = impl.mode === ValueMode.Structure ? !deepEquals(oldValue, value) : oldValue !== value;\n                if (changed) {\n                    values[index] = impl.makeChildReactive(value);\n                    notifyArrayChildUpdate(impl, index, oldValue);\n                }\n            }\n            else if (index === values.length)\n                spliceWithArray(impl, index, 0, [value]);\n            else\n                throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values.length);\n        },\n        get: function () {\n            var impl = this.$mobx;\n            if (impl && index < impl.values.length) {\n                impl.atom.reportObserved();\n                return impl.values[index];\n            }\n            return undefined;\n        }\n    });\n}\nfunction reserveArrayBuffer(max) {\n    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++)\n        createArrayBufferItem(index);\n    OBSERVABLE_ARRAY_BUFFER_SIZE = max;\n}\nreserveArrayBuffer(1000);\nfunction createObservableArray(initialValues, mode, name) {\n    return new ObservableArray(initialValues, mode, name);\n}\nfunction fastArray(initialValues) {\n    deprecated(\"fastArray is deprecated. Please use `observable(asFlat([]))`\");\n    return createObservableArray(initialValues, ValueMode.Flat, null);\n}\nexports.fastArray = fastArray;\nfunction isObservableArray(thing) {\n    return thing instanceof ObservableArray;\n}\nexports.isObservableArray = isObservableArray;\nvar ObservableMapMarker = {};\nvar ObservableMap = (function () {\n    function ObservableMap(initialData, valueModeFunc) {\n        var _this = this;\n        this.$mobx = ObservableMapMarker;\n        this._data = {};\n        this._hasMap = {};\n        this._events = undefined;\n        this.name = \"ObservableMap\";\n        this.id = getNextId();\n        this._keys = new ObservableArray(null, ValueMode.Reference, this.name + \"@\" + this.id + \" / keys()\");\n        this._valueMode = getValueModeFromModifierFunc(valueModeFunc);\n        if (isPlainObject(initialData))\n            this.merge(initialData);\n        else if (Array.isArray(initialData))\n            initialData.forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                return _this.set(key, value);\n            });\n    }\n    ObservableMap.prototype._has = function (key) {\n        return typeof this._data[key] !== \"undefined\";\n    };\n    ObservableMap.prototype.has = function (key) {\n        if (!this.isValidKey(key))\n            return false;\n        if (this._hasMap[key])\n            return this._hasMap[key].get();\n        return this._updateHasMapEntry(key, false).get();\n    };\n    ObservableMap.prototype.set = function (key, value) {\n        var _this = this;\n        this.assertValidKey(key);\n        assertUnwrapped(value, \"[mobx.map.set] Expected unwrapped value to be inserted to key '\" + key + \"'. If you need to use modifiers pass them as second argument to the constructor\");\n        if (this._has(key)) {\n            var oldValue = this._data[key].value;\n            var changed = this._data[key].set(value);\n            if (changed && this._events) {\n                this._events.emit({\n                    type: \"update\",\n                    object: this,\n                    name: key,\n                    oldValue: oldValue\n                });\n            }\n        }\n        else {\n            transaction(function () {\n                _this._data[key] = new ObservableValue(value, _this._valueMode, _this.name + \"@\" + _this.id + \" / Entry \\\"\" + key + \"\\\"\");\n                _this._updateHasMapEntry(key, true);\n                _this._keys.push(key);\n            });\n            this._events && this._events.emit({\n                type: \"add\",\n                object: this,\n                name: key\n            });\n        }\n    };\n    ObservableMap.prototype.delete = function (key) {\n        var _this = this;\n        if (this._has(key)) {\n            var oldValue = this._data[key].value;\n            transaction(function () {\n                _this._keys.remove(key);\n                _this._updateHasMapEntry(key, false);\n                var observable = _this._data[key];\n                observable.set(undefined);\n                _this._data[key] = undefined;\n            });\n            this._events && this._events.emit({\n                type: \"delete\",\n                object: this,\n                name: key,\n                oldValue: oldValue\n            });\n        }\n    };\n    ObservableMap.prototype._updateHasMapEntry = function (key, value) {\n        var entry = this._hasMap[key];\n        if (entry) {\n            entry.set(value);\n        }\n        else {\n            entry = this._hasMap[key] = new ObservableValue(value, ValueMode.Reference, this.name + \"@\" + this.id + \" / Contains \\\"\" + key + \"\\\"\");\n        }\n        return entry;\n    };\n    ObservableMap.prototype.get = function (key) {\n        if (this.has(key))\n            return this._data[key].get();\n        return undefined;\n    };\n    ObservableMap.prototype.keys = function () {\n        return this._keys.slice();\n    };\n    ObservableMap.prototype.values = function () {\n        return this.keys().map(this.get, this);\n    };\n    ObservableMap.prototype.entries = function () {\n        var _this = this;\n        return this.keys().map(function (key) { return [key, _this.get(key)]; });\n    };\n    ObservableMap.prototype.forEach = function (callback, thisArg) {\n        var _this = this;\n        this.keys().forEach(function (key) { return callback.call(thisArg, _this.get(key), key); });\n    };\n    ObservableMap.prototype.merge = function (other) {\n        var _this = this;\n        transaction(function () {\n            if (other instanceof ObservableMap)\n                other.keys().forEach(function (key) { return _this.set(key, other.get(key)); });\n            else\n                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });\n        });\n        return this;\n    };\n    ObservableMap.prototype.clear = function () {\n        var _this = this;\n        transaction(function () {\n            _this.keys().forEach(_this.delete, _this);\n        });\n    };\n    Object.defineProperty(ObservableMap.prototype, \"size\", {\n        get: function () {\n            return this._keys.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObservableMap.prototype.toJs = function () {\n        var _this = this;\n        var res = {};\n        this.keys().forEach(function (key) { return res[key] = _this.get(key); });\n        return res;\n    };\n    ObservableMap.prototype.isValidKey = function (key) {\n        if (key === null || key === undefined)\n            return false;\n        if (typeof key !== \"string\" && typeof key !== \"number\")\n            return false;\n        return true;\n    };\n    ObservableMap.prototype.assertValidKey = function (key) {\n        if (!this.isValidKey(key))\n            throw new Error(\"[mobx.map] Invalid key: '\" + key + \"'\");\n    };\n    ObservableMap.prototype.toString = function () {\n        var _this = this;\n        return \"[mobx.map { \" + this.keys().map(function (key) { return (key + \": \" + (\"\" + _this.get(key))); }).join(\", \") + \" }]\";\n    };\n    ObservableMap.prototype.observe = function (callback) {\n        if (!this._events)\n            this._events = new SimpleEventEmitter();\n        return this._events.on(callback);\n    };\n    return ObservableMap;\n}());\nexports.ObservableMap = ObservableMap;\nfunction map(initialValues, valueModifier) {\n    return new ObservableMap(initialValues, valueModifier);\n}\nexports.map = map;\nfunction isObservableMap(thing) {\n    return thing instanceof ObservableMap;\n}\nexports.isObservableMap = isObservableMap;\nvar ObservableObjectMarker = {};\nfunction asObservableObject(target, name, mode) {\n    if (mode === void 0) { mode = ValueMode.Recursive; }\n    if (target.$mobx) {\n        if (target.$mobx.type !== ObservableObjectMarker)\n            throw new Error(\"The given object is observable but not an observable object\");\n        return target.$mobx;\n    }\n    if (!isPlainObject(target))\n        name = target.constructor.name;\n    if (!name)\n        name = \"ObservableObject\";\n    var adm = {\n        type: ObservableObjectMarker,\n        values: {},\n        events: undefined,\n        id: getNextId(),\n        target: target, name: name, mode: mode\n    };\n    Object.defineProperty(target, \"$mobx\", {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: adm\n    });\n    return adm;\n}\nfunction setObservableObjectProperty(adm, propName, value) {\n    if (adm.values[propName])\n        adm.target[propName] = value;\n    else\n        defineObservableProperty(adm, propName, value);\n}\nfunction defineObservableProperty(adm, propName, value) {\n    assertPropertyConfigurable(adm.target, propName);\n    var observable;\n    var name = adm.name + \"@\" + adm.id + \" / Prop \\\"\" + propName + \"\\\"\";\n    var isComputed = true;\n    if (typeof value === \"function\" && value.length === 0)\n        observable = new ComputedValue(value, adm.target, false, name);\n    else if (value instanceof AsStructure && typeof value.value === \"function\" && value.value.length === 0)\n        observable = new ComputedValue(value.value, adm.target, true, name);\n    else {\n        isComputed = false;\n        observable = new ObservableValue(value, adm.mode, name);\n    }\n    adm.values[propName] = observable;\n    Object.defineProperty(adm.target, propName, {\n        configurable: true,\n        enumerable: !isComputed,\n        get: function () {\n            return observable.get();\n        },\n        set: isComputed\n            ? throwingComputedValueSetter\n            : function (newValue) {\n                var oldValue = observable.value;\n                if (observable.set(newValue) && adm.events !== undefined) {\n                    adm.events.emit({\n                        type: \"update\",\n                        object: this,\n                        name: propName,\n                        oldValue: oldValue\n                    });\n                }\n            }\n    });\n    if (adm.events !== undefined) {\n        adm.events.emit({\n            type: \"add\",\n            object: adm.target,\n            name: propName\n        });\n    }\n    ;\n}\nfunction observeObservableObject(object, callback, fireImmediately) {\n    invariant(isObservableObject(object), \"Expected observable object\");\n    invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n    var adm = object.$mobx;\n    if (adm.events === undefined)\n        adm.events = new SimpleEventEmitter();\n    return object.$mobx.events.on(callback);\n}\nfunction isObservableObject(thing) {\n    return thing && thing.$mobx && thing.$mobx.type === ObservableObjectMarker;\n}\nexports.isObservableObject = isObservableObject;\nvar ObservableValue = (function (_super) {\n    __extends(ObservableValue, _super);\n    function ObservableValue(value, mode, name) {\n        if (name === void 0) { name = \"ObservableValue\"; }\n        _super.call(this, name);\n        this.mode = mode;\n        this.hasUnreportedChange = false;\n        this.events = null;\n        this.value = undefined;\n        var _a = getValueModeFromValue(value, ValueMode.Recursive), childmode = _a[0], unwrappedValue = _a[1];\n        if (this.mode === ValueMode.Recursive)\n            this.mode = childmode;\n        this.value = makeChildObservable(unwrappedValue, this.mode, this.name);\n    }\n    ObservableValue.prototype.set = function (newValue) {\n        assertUnwrapped(newValue, \"Modifiers cannot be used on non-initial values.\");\n        checkIfStateModificationsAreAllowed();\n        var oldValue = this.value;\n        var changed = valueDidChange(this.mode === ValueMode.Structure, oldValue, newValue);\n        if (changed) {\n            this.value = makeChildObservable(newValue, this.mode, this.name);\n            this.reportChanged();\n            if (this.events)\n                this.events.emit(newValue, oldValue);\n        }\n        return changed;\n    };\n    ObservableValue.prototype.get = function () {\n        this.reportObserved();\n        return this.value;\n    };\n    ObservableValue.prototype.observe = function (listener, fireImmediately) {\n        if (!this.events)\n            this.events = new SimpleEventEmitter();\n        if (fireImmediately)\n            listener(this.value, undefined);\n        return this.events.on(listener);\n    };\n    ObservableValue.prototype.toString = function () {\n        return this.name + \"@\" + this.id + \"[\" + this.value + \"]\";\n    };\n    return ObservableValue;\n}(Atom));\nvar SimpleEventEmitter = (function () {\n    function SimpleEventEmitter() {\n        this.listeners = [];\n    }\n    SimpleEventEmitter.prototype.emit = function () {\n        var listeners = this.listeners.slice();\n        for (var i = 0, l = listeners.length; i < l; i++)\n            listeners[i].apply(null, arguments);\n    };\n    SimpleEventEmitter.prototype.on = function (listener) {\n        var _this = this;\n        this.listeners.push(listener);\n        return once(function () {\n            var idx = _this.listeners.indexOf(listener);\n            if (idx !== -1)\n                _this.listeners.splice(idx, 1);\n        });\n    };\n    SimpleEventEmitter.prototype.once = function (listener) {\n        var subscription = this.on(function () {\n            subscription();\n            listener.apply(this, arguments);\n        });\n        return subscription;\n    };\n    return SimpleEventEmitter;\n}());\nexports.SimpleEventEmitter = SimpleEventEmitter;\nvar EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nfunction invariant(check, message, thing) {\n    if (!check)\n        throw new Error(\"[mobx] Invariant failed: \" + message + (thing ? \" in '\" + thing + \"'\" : \"\"));\n}\nvar deprecatedMessages = [];\nfunction deprecated(msg) {\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n}\nfunction once(func) {\n    var invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nvar noop = function () { };\nfunction unique(list) {\n    var res = [];\n    list.forEach(function (item) {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction isPlainObject(value) {\n    return value !== null && typeof value === \"object\" && Object.getPrototypeOf(value) === Object.prototype;\n}\nfunction valueDidChange(compareStructural, oldValue, newValue) {\n    return compareStructural\n        ? !deepEquals(oldValue, newValue)\n        : oldValue !== newValue;\n}\nfunction makeNonEnumerable(object, props) {\n    for (var i = 0; i < props.length; i++) {\n        Object.defineProperty(object, props[i], {\n            configurable: true,\n            writable: true,\n            enumerable: false,\n            value: object[props[i]]\n        });\n    }\n}\nfunction isPropertyConfigurable(object, prop) {\n    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable(object, prop) {\n    invariant(isPropertyConfigurable(object, prop), \"Cannot make property '\" + prop + \"' observable, it is not configurable and writable in the target object\");\n}\nfunction deepEquals(a, b) {\n    if (a === null && b === null)\n        return true;\n    if (a === undefined && b === undefined)\n        return true;\n    var aIsArray = Array.isArray(a) || isObservableArray(a);\n    if (aIsArray !== (Array.isArray(b) || isObservableArray(b))) {\n        return false;\n    }\n    else if (aIsArray) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = a.length; i >= 0; i--)\n            if (!deepEquals(a[i], b[i]))\n                return false;\n        return true;\n    }\n    else if (typeof a === \"object\" && typeof b === \"object\") {\n        if (a === null || b === null)\n            return false;\n        if (Object.keys(a).length !== Object.keys(b).length)\n            return false;\n        for (var prop in a) {\n            if (!b.hasOwnProperty(prop))\n                return false;\n            if (!deepEquals(a[prop], b[prop]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\nfunction quickDiff(current, base) {\n    if (!base || !base.length)\n        return [current, []];\n    if (!current || !current.length)\n        return [[], base];\n    var added = [];\n    var removed = [];\n    var currentIndex = 0, currentSearch = 0, currentLength = current.length, currentExhausted = false, baseIndex = 0, baseSearch = 0, baseLength = base.length, isSearching = false, baseExhausted = false;\n    while (!baseExhausted && !currentExhausted) {\n        if (!isSearching) {\n            if (currentIndex < currentLength && baseIndex < baseLength && current[currentIndex] === base[baseIndex]) {\n                currentIndex++;\n                baseIndex++;\n                if (currentIndex === currentLength && baseIndex === baseLength)\n                    return [added, removed];\n                continue;\n            }\n            currentSearch = currentIndex;\n            baseSearch = baseIndex;\n            isSearching = true;\n        }\n        baseSearch += 1;\n        currentSearch += 1;\n        if (baseSearch >= baseLength)\n            baseExhausted = true;\n        if (currentSearch >= currentLength)\n            currentExhausted = true;\n        if (!currentExhausted && current[currentSearch] === base[baseIndex]) {\n            added.push.apply(added, current.slice(currentIndex, currentSearch));\n            currentIndex = currentSearch + 1;\n            baseIndex++;\n            isSearching = false;\n        }\n        else if (!baseExhausted && base[baseSearch] === current[currentIndex]) {\n            removed.push.apply(removed, base.slice(baseIndex, baseSearch));\n            baseIndex = baseSearch + 1;\n            currentIndex++;\n            isSearching = false;\n        }\n    }\n    added.push.apply(added, current.slice(currentIndex));\n    removed.push.apply(removed, base.slice(baseIndex));\n    return [added, removed];\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Users/dalci.bagolin/AppData/Roaming/npm/~/mobx/lib/mobx.js\n ** module id = 2\n ** module chunks = 0\n **/","\r\n\r\ninterface Array<T> {\r\n  groupBy(prop: string /*| ((value: T, index: number, array: T[]) => Array<any>)*/, fields?: string | Function | any): T[];\r\n  aggregate(querys:any): T[];\r\n  first(): T;\r\n  last(): T;\r\n  count(field?: (value: T, index: number, array: T[]) => Array<any>): number;\r\n  min(field?: string | ((value: T, index: number, array: T[]) => Array<any>)): number;\r\n  max(field?: string | ((value: T, index: number, array: T[]) => Array<any>)): number;\r\n  sum(field?: string | ((value: T, index: number, array: T[]) => Array<any>)): number;\r\n  average(field?: string | ((value: T, index: number, array: T[]) => Array<any>)): number;\r\n  unique(field?: string | ((value: T, index: number, array: T[]) => Array<any>) | string): T[];\r\n  by(field?: string |  ((value: T, index: number, array: T[]) => Array<any>)): T[];\r\n  flatten(depth?: number): T[];\r\n  flatMap<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\r\n  take(number?: number): T[];\r\n  includes(searchElement?: any): boolean;\r\n}\r\n\r\n\r\nArray.prototype.groupBy = function(prop, fields) {\r\n  var key;\r\n  var result = this.reduce((grouped: any, item: any) => {\r\n    key = /*(typeof prop === 'function') ? prop.apply(this, [item]) :*/ item[prop];\r\n    grouped[key] = grouped[key] || [];\r\n    var obj;\r\n    switch (typeof fields) {\r\n      case 'function':\r\n        obj = fields(item);\r\n        break;\r\n      case 'string':\r\n        obj = {};\r\n        obj[fields] = item[fields];\r\n        break;\r\n      case 'object':\r\n        if (Array.isArray(fields)) {\r\n          obj = fields.reduce((prev, curr) => { prev[curr] = item[curr]; return prev }, {})\r\n        }\r\n        break;\r\n      default:\r\n        obj = item;\r\n        break;\r\n    }\r\n    grouped[key].push(obj);\r\n    return grouped;\r\n  }, {});\r\n  var ret = [];\r\n  for (var row in result) {\r\n    console.log(row)\r\n    var item: any = {};\r\n    var cat = (typeof prop === 'function') ? 'key' : prop;\r\n    item[cat] = row;\r\n    item.group = result[row];\r\n    ret.push(item);\r\n  }\r\n  return ret;\r\n}\r\n\r\nArray.prototype.aggregate = function(querys) {\r\n  return this.map(row=> {\r\n    for (var query in querys) {\r\n      let func = querys[query];\r\n      let data = row.group.map(group => group[query]);\r\n      let value;\r\n      let name = '';\r\n      if (typeof func === 'string') {\r\n        value = Array.prototype[func].call(data);\r\n        name = func;\r\n      } else {\r\n        value = func.call(data);\r\n      }\r\n      row[name + '_' + query] = value;\r\n    }\r\n    //console.log('row:', row.category, row)\r\n    delete row.group;\r\n    return row\r\n  })\r\n};\r\n\r\nArray.prototype.first = function() {\r\n  return this[0];\r\n};\r\n\r\nArray.prototype.last = function() {\r\n  return this[this.length - 1];\r\n};\r\n\r\nArray.prototype.count = function() {\r\n  return this.length;\r\n};\r\n\r\nfunction typeArg(arg, arr) {\r\n  var that;\r\n  switch (typeof arg) {\r\n    case 'function':\r\n      that = arr.map(arg);\r\n      break;\r\n    case 'string':\r\n      that = arr.map(o=> o[arg]);\r\n      break;\r\n    default:\r\n      that = arr;\r\n      break;\r\n  }\r\n  return that\r\n}\r\n\r\nArray.prototype.min = function(field) {\r\n  return Math.min.apply(null, this.by(field));\r\n};\r\n\r\nArray.prototype.max = function(field) {\r\n  return Math.max.apply(null, this.by(field));\r\n};\r\n\r\nArray.prototype.sum = function(field) {\r\n  return this.by(field).reduce((prev, current) => (+(current) + prev), 0); //parseFloat\r\n}\r\n\r\nArray.prototype.average = function(field) {\r\n  var that = typeArg(field, this);\r\n  var count = that.length;\r\n  var total = that.reduce((prev, current) => (+(current) + prev), 0); //parseFloat\r\n  return total / count;\r\n}\r\n\r\nArray.prototype.unique = function(field) {\r\n  var that = typeArg(field, this);\r\n  var o = {}, i, l = that.length, r = [];\r\n  for (i = 0; i < l; i += 1) { o[JSON.stringify(that[i])] = that[i]; }\r\n  for (i in o) { r.push(o[i]); }\r\n  return r;\r\n};\r\n\r\n\r\nfunction flatten(list: Array<any>, depth?: number, mapperFn?: Function, mapperCtx?: any) {\r\n  if (depth === 0) {\r\n    return list\r\n  }\r\n  return list.reduce((accumulator, item, i) => {\r\n    if (mapperFn) {\r\n      item = mapperFn.call(mapperCtx || list, item, i, list)\r\n    }\r\n    if (Array.isArray(item)) {\r\n      accumulator.push(...flatten(item, depth - 1))\r\n    } else {\r\n      accumulator.push(item)\r\n    }\r\n    return accumulator\r\n  }, [])\r\n};\r\n\r\nArray.prototype.flatten = function(depth = Infinity) {\r\n  return flatten(this, depth)\r\n};\r\n\r\nArray.prototype.flatMap = function(fn, ctx) {\r\n  return flatten(this, 1, fn, ctx)\r\n};\r\n\r\nArray.prototype.by = function(field) {\r\n  return typeArg(field, this);\r\n};\r\n\r\nArray.prototype.take = function(number) {\r\n  let begin, end;\r\n  if (number >= 0) { \r\n    begin = 0;\r\n    end = number;\r\n  } else {\r\n    begin = number;\r\n    end = this.length;\r\n  }\r\n  return this.slice(begin, end)\r\n};\r\n  \r\nArray.prototype.includes = function(searchElement /*, fromIndex*/ ) {\r\n  'use strict';\r\n  var O = Object(this);\r\n  var len = parseInt(O.length) || 0;\r\n  if (len === 0) {\r\n    return false;\r\n  }\r\n  var n = parseInt(arguments[1]) || 0;\r\n  var k;\r\n  if (n >= 0) {\r\n    k = n;\r\n  } else {\r\n    k = len + n;\r\n    if (k < 0) {k = 0;}\r\n  }\r\n  var currentElement;\r\n  while (k < len) {\r\n    currentElement = O[k];\r\n    if (searchElement === currentElement ||\r\n        (searchElement !== searchElement && currentElement !== currentElement)) { // NaN !== NaN\r\n      return true;\r\n    }\r\n    k++;\r\n  }\r\n  return false;\r\n};  \r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ArrayPlus.ts\n **/","/*jshint maxlen: false, unused: false, quotmark: true, -W097 */ \r\n\"use strict\";\r\n\r\nvar db: exig[] = [ \r\n{desc:\"DE UF com ocorrência de Vespa-da-madeira PARA UF reconhecida pelo MAPA como livre da ocorrência de Vespa-da-madeira\", hosp:[\"Pinus spp.\"],part:[\"madeira\"],orig:[\"MG\",\"SP\",\"PR\",\"SC\",\"RS\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"RJ\",\"RN\",\"RO\",\"RR\",\"SE\",\"TO\"],prag:\"Sirex noctilio\",pragc:\"VESPA-DA-MADEIRA\",exig:[\"Estão isentos desta exigência fitossanitária: compensados ou cavacos de 2,5 cm de espessura ou menores, móveis e pequenos objetos de madeira; \",\"PTV com declaração adicional constando que o material está livre de Sirex noctilio, tanto na fase adulta como na imatura.\"],proib:false,leg:\"Portaria SDA/MAPA nº 125, de 03 de agosto de 1998\",link:\"leg/PORT125-1998.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Ácaro-vermelho-das-palmeiras PARA UF reconhecida pelo MAPA como livre da ocorrência de Ácaro-vermelho-das-palmeiras\", hosp:[\"Euterpe oleracea\",\"Euterpe precatoria\",\"Alpínia purpurata\",\"Alpínia zerumbet\",\"Syagrus schizophylla\",\"Ravenala madagascariensis\",\"Musa spp.\",\"Etlingera alatior\",\"Mauritia flexuosa\",\"Canna indica\",\"Cocos nucifera\",\"Butia capitata\",\"Corypha umbraculifera\",\"Elaeis guineensis\",\"Strelitzia reginae\",\"Heliconia spp.\",\"Syagrus romanzoffianum\",\"Licuala grandis\",\"Coccothrinax miraguama\",\"Microcycas calocoma\",\"Coccothrinax barbadensis\",\"Aiphanes spp.\",\"Pseudophoenix vinifera\",\"Dypsis lutescens\",\"Veitchia arecina\",\"Chamaedora spp.\",\"Veitchia maerrillii\",\"Phoenix roebelenii\",\"Acoelorraphe wrightii\",\"Wodyetia bifurcata\",\"Archontophoenix alexandrae\",\"Cycas spp.\",\"Areca sp.\",\"Bismarckia nobilis\",\"Washingtonia robusta\",\"Ptychosperma macarthurii\",\"Beccariophoenix madagascariensis\",\"Bactris plumeriana\",\"Washingtonia filifera\",\"Pseudophoenix sargentii\",\"Roystonea borinquena\",\"Schippia concolor\",\"Thrinax radiata\",\"Livistona chinensis\",\"Pritchardia pacifica\",\"Coccothrinax argentata\",\"Dictyosperma album\",\"Caryota mitis\",\"Caryota urens\",\"Raphis excelsa\",\"Roystonia regia\",\"Ptychosperma elegans\",\"Dypsis decaryi\",\"Pritchardia vuylstekeana\",\"Bactris gasipaes\",\"Bactris plumeriana\",\"Phoenix dactylifera\",\"Phoenix canariensis\",\"Phoenix reclinata\",\"Arecaceae (espécies desta família)\",\"Heliconiaceae (espécies desta família)\",\"Musaceae (espécies desta família)\",\"Pandanaceae (espécies desta família)\",\"Strelitziaceae (espécies desta família)\",\"Zingiberaceae (espécies desta família)\"],part:[\"plantas\",\"mudas\",\"raízes\",\"caules\",\"ramos\",\"folhas\",\"flores\",\"frutos\"],orig:[\"RR\",\"AM\"],dest:[\"AC\",\"AL\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Raoiella indica\",pragc:\"ÁCARO-VERMELHO-DAS-PALMEIRAS\",exig:[\"PTV com a seguinte declaração adicional: \\\"Não se observou a presença de Raoiella indica no local de produção e a partida foi inspecionada e encontra-se livre da praga\\\"; \",\"A partida deve ser transportada em caminhão lonado ou tipo baú, e lacrado; \",\"A PTV deve conter o(s) número(s) do(s) lacre(s);\",\"Estas exigências fitossanitárias não se aplicam a material in vitro.\"],proib:false,leg:\"Instrução Normativa MAPA nº 14, de 6 de abril de 2010\",link:\"leg/IN14-2010.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Mosca-da-carambola PARA UF reconhecida pelo MAPA como livre da ocorrência de Mosca-da-carambola\", hosp:[\"Averrhoa carambola\",\"Psidium guajava\",\"Syzygium malaccense\",\"Citrus aurantium\",\"Manilkara zapota\",\"Mangifera indica\",\"Malpighia punicifolia\",\"Terminalia catappa\",\"Garcinia dulcis\",\"Chrysophyllum cainito\",\"Spondias lutea\",\"Anacardium occidentale\",\"Artocarpus altilis\",\"Arenga pinnata\",\"Artocarpus integrifolia\",\"Syzygium samarangense\",\"Syzygium aqueum\",\"Syzygium jambos\",\"Ziziphus mauritiana\",\"Ziziphus jujuba\",\"Citrus sinensis\",\"Averrhoa bilimbi\",\"Capsicum annuum\",\"Eugenia uniflora\",\"Citrus paradisi\",\"Citrus reticulata\",\"Licopersicum esculentum\"],part:[\"frutos\"],orig:[\"AP\",\"RR\"],dest:[\"AC\",\"AL\",\"AM\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Bactrocera carambolae\",pragc:\"MOSCA-DA-CARAMBOLA\",exig:[\"TRÂNSITO PROIBIDO\"],proib:false,leg:\"Portaria SDA/MAPA nº 21, de 25 de março de 1999\",link:\"leg/PORT21-1999.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Ácaro-hindu-dos-citros PARA UF reconhecida pelo MAPA como livre da ocorrência de Ácaro-hindu-dos-citros\", hosp:[\"Citrus spp.\",\"Cocos nucifera\",\"Azadirachta indica\",\"Sorghum bicolor\",\"Acacia sp.\",\"Melia azedarach\"],part:[\"plantas\",\"mudas\",\"raízes\",\"caules\",\"ramos\",\"folhas\",\"flores\",\"frutos\"],orig:[\"RR\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Schizotetranychus hindustanicus\",pragc:\"ÁCARO HINDU\",exig:[\"PARA FRUTOS DE CITROS: \\n\\n1.1 - PTV com a declaração adicional: \\\"A partida atende às exigências constantes da Instrução Normativa MAPA nº 8, de 17 de abril de 2012, encontra-se livre do Ácaro Hindu dos Citros\\\";\",\"PARA OUTRAS PLANTAS E DEMAIS PARTES de PLANTAS: TRÂNSITO PROIBIDO.\",\"Estas exigências fitossanitárias não se aplicam a material in vitro, madeira serrada e, ainda, frutos de coco (Cocus nucifera) secos e descascados;\"],proib:false,leg:\"Instrução Normativa MAPA nº 8, de 17 de abril de 2012\",link:\"leg/IN08-2012.pdf\"}, \r\n{desc:\"DE qualquer UF PARA qualquer UF\", hosp:[\"Musa spp.\"],part:[\"material para pesquisa\"],orig:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"Autorização Declaratória emitida pela Área de Sanidade Vegetal da Superintendência Federal da Agricultura - SFA, na Unidade da Federação de origem do material genético;\",\"O material genético deve ser transportado em recipiente lacrado, devendo o número do lacre constar da Autorização Declaratória;\",\"O interessado deve comunicar a SFA de destino da partida, quando do recebimento do material, para inspeção fitossanitária;\",\"Estas exigências fitossanitárias só se aplicam a material genético;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE UF sem ocorrência de Moko-da-bananeira PARA UF com ocorrência de de Moko-da-bananeira\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"AC\",\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SC\",\"SP\",\"TO\"],dest:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF sem ocorrência de Moko-da-bananeira PARA UF com ocorrência de Moko-da-bananeira\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],dest:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n  \\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;  \\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\\n\\n2 - SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA: \\n\\n2.1 - PTV para comprovar a origem.\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],dest:[\"CE\",\"PE\",\"PI\",\"SC\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"Os frutos ou inflorescências foram produzidos sob aplicação de medidas integradas em um enfoque de Sistemas para o Manejo de Risco da praga Ralstonia solanacearum raça 2\\\";\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],dest:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 -  A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"Os frutos ou inflorescências foram produzidos em UP onde não foi observada a presença de Ralstonia solanacearum raça 2, nos últimos doze meses\\\"; OU\\n\\n2.2 - PTV com a seguinte declaração adicional: \\\"Os frutos ou inflorescências foram produzidos sob aplicação de medidas integradas em um enfoque de Sistemas para o Manejo de Risco da praga Ralstonia solanacearum raça 2\\\";\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF sem ocorrência de Moko-da-bananeira PARA UF sem ocorrência de de Moko-da-bananeira\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],dest:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV, para transitar pelas seguintes UF's: AP,AM,PA,RO,RR e SE;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE qualquer UF PARA qualquer UF\", hosp:[\"Musa spp.\"],part:[\"mudas\"],orig:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"BSV e CMV\",pragc:\"BANANA STREAK VIRUS e CUCUMBER MOSAIC VIRUS\",exig:[\"PTV com a seguinte declaração adicional: \\\"A partida encontra-se livre dos vírus Banana streak virus (BSV) e Cucumber mosaic virus (CMV), de acordo com o laudo laboratorial [nº do laudo], [nome do laboratório] -[município e UF de localização do laboratório]\\\";\",\"As mudas de bananeira que transitarem em desrespeito às determinações deste artigo ficam sujeitas à interceptação, caso em que será determinado o retorno das mesmas ao local de origem e comunicado ao órgão fiscalizador da produção e comércio, para adoção das providências cabíveis, conforme o art. 13, § 2º., da Instrução Normativa MAPA nº. 46, de 27 de dezembro de 2010.\"],proib:false,leg:\"Instrução Normativa MAPA nº 46, de 27 de dezembro de 2010\",link:\"leg/IN46-2010.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Cancro-da-videira PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-da-videira\", hosp:[\"Vitis spp. e seus híbridos\"],part:[\"mudas\"],orig:[\"BA\",\"CE\",\"PE\",\"RR\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Xanthomonas campestris pv. viticola\",pragc:\"CANCRO-DA-VIDEIRA\",exig:[\"PTV com a seguinte declaração adicional: \\\"As mudas foram obtidas por micropropagação e indexadas para Xanthomonas campestris pv. viticola\\\".\"],proib:false,leg:\"Instrução Normativa MAPA nº 2, de 6 de fevereiro de 2014\",link:\"leg/IN02-2014.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Cancro-da-videira PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-da-videira\", hosp:[\"Vitis spp. e seus híbridos\"],part:[\"frutos\"],orig:[\"BA\",\"CE\",\"PE\",\"RR\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Xanthomonas campestris pv. viticola\",pragc:\"CANCRO-DA-VIDEIRA\",exig:[\"PTV com a seguinte declaração adicional: \\\"Os frutos foram produzidos em propriedade onde são adotadas as medidas de prevenção e controle do cancro bacteriano da videira, previstas na legislação fitossanitária\\\";\",\"Estas exigências fitossanitárias só se aplicam a frutos, quando destinados a consumo in natura.\"],proib:false,leg:\"Instrução Normativa MAPA nº 2, de 6 de fevereiro de 2014\",link:\"leg/IN02-2014.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Cancro-da-videira PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-da-videira\", hosp:[\"Vitis spp. e seus híbridos\"],part:[\"material para pesquisa\"],orig:[\"BA\",\"CE\",\"PE\",\"RR\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Xanthomonas campestris pv. viticola\",pragc:\"CANCRO-DA-VIDEIRA\",exig:[\"PTV com a seguinte declaração adicional: \\\"O material foi lacrado na origem, sob número de lacre X, e embalado de maneira a garantir a não dispersão da praga\\\".\"],proib:false,leg:\"Instrução Normativa MAPA nº 2, de 6 de fevereiro de 2014\",link:\"leg/IN02-2014.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Cancro-europeu-das-pomáceas PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-europeu-das-pomáceas\", hosp:[\"Acacia sp.\",\"Acer sp.\",\"Acer circinatum\",\"Acer macrophyllum\",\"Acer mono subsp. Heterophyllum\",\"Acer negundo\",\"Acer palmatum\",\"Acer pennsylvanicum\",\"Acer pseudoplatanus\",\"Acer rubrum\",\"Acer saccharum\",\"Acer spicatum\",\"Aesculus sp.\",\"Aesculus hippocastanum\",\"Aesculus turbinata\",\"Albizia lebbeck\",\"Alnus sp.\",\"Alnus glutinosa\",\"Alnus incana\",\"Alnus japonica\",\"Alnus rubra\",\"Amelanchier laevis\",\"Avena sativa\",\"Betula sp.\",\"Betula lenta\",\"Betula lutea (synonym: alleghaniensis)\",\"Betula maximowicziana\",\"Betula nigra\",\"Betula papyrifera\",\"Betula pendula (syn:verrucosa)\",\"Betula populifolia\",\"Betula pubescens\",\"Camellia sinensis\",\"Carpinus sp.\",\"Carpinus betulas\",\"Carya spp.\",\"Carya cordiformis\",\"Carya glabra\",\"Carya ovata\",\"Carya tomentosa\",\"Carya illinoensis\",\"Castanea dentata\",\"Cercis canadensis\",\"Citrus sinensis\",\"Coprosma areolata\",\"Coprosma lucida\",\"Cornus sp.\",\"Cornus muttallii\",\"Corylus avellana\",\"Corylus heterophylla var. thunbergiii\",\"Corylus sieboldiana\",\"Craetaegus monogyna\",\"Crataegus oxyacanthoides (syn: oxyacantha )\",\"Eriobotrya japonica\",\"Fagus americana\",\"Fagus crenata f. grandifolia (syn.Americana)\",\"Fagus sp.\",\"Fagus orientalis\",\"Fagus sylvantica\",\"Fagus silvatica f. purpurea\",\"Frangula almus\",\"Fraxinus bungeana\",\"Fraxinus excelsior\",\"Fraxinus mandshurica\",\"Fraxinus mandshurica var. Japonica\",\"Fraxinus nigra (syn. sambucifolia)\",\"Ilex aquifolium\",\"Juglans sp.\",\"Juglans cinerea\",\"Juglans nigra\",\"Juglans regia\",\"Laburnum anagyrioides\",\"Liriodendron tulipifera\",\"Malus sp.\",\"Malus communis\",\"Malus sylvestris\",\"Malus pumila\",\"Malus x domestica\",\"Malus pumila var domestica\",\"Nyssa sylvatica\",\"Persea gratissima\",\"Picea abies\",\"Platanus orientalis\",\"Populus spp.\",\"Populus alba\",\"Populus x canadensis\",\"Populus balsamifera\",\"Populus grandidenta\",\"Populus tremula\",\"Populus tremuloides\",\"Populus wislizeni\",\"Prunus spp.\",\"Prunus avium\",\"Prunus serotina\",\"Prunus salicina\",\"Prunus ssiori\",\"Prunus subhirtella var. pendula\",\"Prunus virginiana\",\"Pyrus malus\",\"Pyrus pyrifolia\",\"Pyrus pyrifolia var culta\",\"Pyrus communis\",\"Quercus sp.\",\"Quercus alba\",\"Quercus bicolor\",\"Quercus borealis (syn: rubra)\",\"Quercus coccinea\",\"Quercus garryana\",\"Quercus glandulifera\",\"Quercus laurifolia\",\"Quercus mongolica var grosserrata\",\"Quercus montana\",\"Quercus robur\",\"Quercus rubra\",\"Quercus velutina\",\"Rhus typhina\",\"Ribes sp.\",\"Robinia pseudoacacia\",\"Rosa spp.\",\"Salix spp.\",\"Salix alba\",\"Salix alba var Vitelina\",\"Salix alba L. Coerulea\",\"Salix amygdaloides\",\"Salix amygdalina\",\"Salix cinerea\",\"Salix nigricans\",\"Salix purpurea\",\"Sophora microphylla\",\"Sorbus sp.\",\"Sorbus aria\",\"Sorbus aucuparia\",\"Sorbus domestica\",\"Swietenia mahagoni\",\"Tilia sp.\",\"Tilia americana\",\"Tilia cordata\",\"Ulmus sp.\",\"Ulmus americana\",\"Ulmus glabra (syn. montana)\",\"Umbelluraria californica\",\"Viola sp.\"],part:[\"mudas\",\"sementes\",\"estacas\",\"bulbos\",\"tubérculos\",\"manivas\",\"toletes\",\"gemas\",\"ramas\",\"rizomas\"],orig:[\"PR\",\"RS\",\"SC\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"RJ\",\"RN\",\"RO\",\"RR\",\"SE\",\"SP\",\"TO\"],prag:\"Neonectria galligena (=Nectria galligena)\",pragc:\"CANCRO EUROPEU DAS POMÁCEAS\",exig:[\"PTV com a seguinte declaração adicional: \\\"A Unidade de produção foi inspecionada oficialmente durante o período de produção e não foi constatada a presença de sintomas de infecção pela praga Neonectria galligena\\\";\",\"Esta exigência fitossanitária não se aplica a material propagativo in vitro.\"],proib:false,leg:\"Instrução Normativa nº 20, de 20 de junho de 2013\",link:\"leg/IN20-2013.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Cancro-europeu-das-pomáceas PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro-europeu-das-pomáceas\", hosp:[\"Acacia sp.\",\"Acer sp.\",\"Acer circinatum\",\"Acer macrophyllum\",\"Acer mono subsp. Heterophyllum\",\"Acer negundo\",\"Acer palmatum\",\"Acer pennsylvanicum\",\"Acer pseudoplatanus\",\"Acer rubrum\",\"Acer saccharum\",\"Acer spicatum\",\"Aesculus sp.\",\"Aesculus hippocastanum\",\"Aesculus turbinata\",\"Albizia lebbeck\",\"Alnus sp.\",\"Alnus glutinosa\",\"Alnus incana\",\"Alnus japonica\",\"Alnus rubra\",\"Amelanchier laevis\",\"Avena sativa\",\"Betula sp.\",\"Betula lenta\",\"Betula lutea (synonym: alleghaniensis)\",\"Betula maximowicziana\",\"Betula nigra\",\"Betula papyrifera\",\"Betula pendula (syn:verrucosa)\",\"Betula populifolia\",\"Betula pubescens\",\"Camellia sinensis\",\"Carpinus sp.\",\"Carpinus betulas\",\"Carya spp.\",\"Carya cordiformis\",\"Carya glabra\",\"Carya ovata\",\"Carya tomentosa\",\"Carya illinoensis\",\"Castanea dentata\",\"Cercis canadensis\",\"Citrus sinensis\",\"Coprosma areolata\",\"Coprosma lucida\",\"Cornus sp.\",\"Cornus muttallii\",\"Corylus avellana\",\"Corylus heterophylla var. thunbergiii\",\"Corylus sieboldiana\",\"Craetaegus monogyna\",\"Crataegus oxyacanthoides (syn: oxyacantha )\",\"Eriobotrya japonica\",\"Fagus americana\",\"Fagus crenata f. grandifolia (syn.Americana)\",\"Fagus sp.\",\"Fagus orientalis\",\"Fagus sylvantica\",\"Fagus silvatica f. purpurea\",\"Frangula almus\",\"Fraxinus bungeana\",\"Fraxinus excelsior\",\"Fraxinus mandshurica\",\"Fraxinus mandshurica var. Japonica\",\"Fraxinus nigra (syn. sambucifolia)\",\"Ilex aquifolium\",\"Juglans sp.\",\"Juglans cinerea\",\"Juglans nigra\",\"Juglans regia\",\"Laburnum anagyrioides\",\"Liriodendron tulipifera\",\"Malus sp.\",\"Malus communis\",\"Malus sylvestris\",\"Malus pumila\",\"Malus x domestica\",\"Malus pumila var domestica\",\"Nyssa sylvatica\",\"Persea gratissima\",\"Picea abies\",\"Platanus orientalis\",\"Populus spp.\",\"Populus alba\",\"Populus x canadensis\",\"Populus balsamifera\",\"Populus grandidenta\",\"Populus tremula\",\"Populus tremuloides\",\"Populus wislizeni\",\"Prunus spp.\",\"Prunus avium\",\"Prunus serotina\",\"Prunus salicina\",\"Prunus ssiori\",\"Prunus subhirtella var. pendula\",\"Prunus virginiana\",\"Pyrus malus\",\"Pyrus pyrifolia\",\"Pyrus pyrifolia var culta\",\"Pyrus communis\",\"Quercus sp.\",\"Quercus alba\",\"Quercus bicolor\",\"Quercus borealis (syn: rubra)\",\"Quercus coccinea\",\"Quercus garryana\",\"Quercus glandulifera\",\"Quercus laurifolia\",\"Quercus mongolica var grosserrata\",\"Quercus montana\",\"Quercus robur\",\"Quercus rubra\",\"Quercus velutina\",\"Rhus typhina\",\"Ribes sp.\",\"Robinia pseudoacacia\",\"Rosa spp.\",\"Salix spp.\",\"Salix alba\",\"Salix alba var Vitelina\",\"Salix alba L. Coerulea\",\"Salix amygdaloides\",\"Salix amygdalina\",\"Salix cinerea\",\"Salix nigricans\",\"Salix purpurea\",\"Sophora microphylla\",\"Sorbus sp.\",\"Sorbus aria\",\"Sorbus aucuparia\",\"Sorbus domestica\",\"Swietenia mahagoni\",\"Tilia sp.\",\"Tilia americana\",\"Tilia cordata\",\"Ulmus sp.\",\"Ulmus americana\",\"Ulmus glabra (syn. montana)\",\"Umbelluraria californica\",\"Viola sp.\"],part:[\"frutos\"],orig:[\"PR\",\"RS\",\"SC\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"RJ\",\"RN\",\"RO\",\"RR\",\"SE\",\"SP\",\"TO\"],prag:\"Neonectria galligena (=Nectria galligena)\",pragc:\"CANCRO EUROPEU DAS POMÁCEAS\",exig:[\"PTV com a seguinte declaração adicional: \\\"Na unidade de produção e Unidade de Consolidação - UC foram adotados os procedimentos de controle e prevenção previstos nesta norma e os frutos não apresentam sintomas de Neonectria galligena\\\".\"],proib:false,leg:\"Instrução Normativa nº 20, de 20 de junho de 2013\",link:\"leg/IN20-2013.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Cancro Cítrico PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro Cítrico\", hosp:[\"Citrus spp.\",\"Fortunella spp.\",\"Poncirus spp.\"],part:[\"mudas\",\"sementes\",\"estacas\",\"gemas\"],orig:[\"MT\",\"MS\",\"MG\",\"PR\",\"RS\",\"RR\",\"SC\",\"SP\",\"CE\",\"MA\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"DF\",\"ES\",\"GO\",\"PA\",\"PB\",\"PE\",\"PI\",\"RJ\",\"RN\",\"RO\",\"SE\",\"TO\"],prag:\"Xanthomonas citri susp. Citri (=Xanthomonas axonopodis pv. Citri)\",pragc:\"CANCRO CÍTRICO\",exig:[\"A partida deve ser produzida em propriedade sem ocorrência de Cancro Cítrico; \",\"Autorização emitida pela Comissão Executiva da CANECC da Unidade da Federação produtora, solicitada pelo órgão de Defesa Sanitária Vegetal da UF adquirente; \",\"PTV.\"],proib:false,leg:\"Portaria MAPA nº 291, de 23 de julho de 1997\",link:\"leg/PORT291-1997.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Cancro Cítrico PARA UF reconhecida pelo MAPA como livre da ocorrência de Cancro Cítrico\", hosp:[\"Citrus spp.\",\"Fortunella spp.\",\"Poncirus spp.\"],part:[\"frutos\"],orig:[\"MT\",\"MS\",\"MG\",\"PR\",\"RS\",\"RR\",\"SC\",\"SP\",\"CE\",\"MA\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Xanthomonas citri susp. Citri (=Xanthomonas axonopodis pv. Citri)\",pragc:\"CANCRO CÍTRICO\",exig:[\"TRÂNSITO PROIBIDO, se a partida for procedente de plantas remanescentes não contaminadas, localizadas em propriedades interditadas;\",\"Nota Fiscal e PTV, se a partida for produzida em propriedade de município interditado, com itinerário a ser obedecido;\",\"PTV, com itinerário a ser obedecido, se os frutos cítricos forem produzidos em propriedades não contaminadas, de municípios com ocorrência de Cancro Cítrico nos últimos dois anos;\",\"Nenhuma exigência para frutos cítricos produzidos em município sem ocorrência de Cancro Cítrico;\",\"O transporte de frutos cítricos deve ser realizado a granel por veículo adequadamente coberto, em embalagens descartáveis ou em caixas desinfestadas.\"],proib:false,leg:\"Portaria MAPA nº 291, de 23 de julho de 1997\",link:\"leg/PORT291-1997.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Greening PARA UF reconhecida pelo MAPA como livre da ocorrência de Greening\", hosp:[\"Citrus spp.\",\"Fortunella spp.\",\"Poncirus spp.\",\"Murraya paniculata\"],part:[\"mudas\",\"sementes\",\"estacas\",\"gemas\",\"ramas\",\"raízes\"],orig:[\"MG\",\"PR\",\"SP\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"TO\"],prag:\"Candidatus Liberibacter spp.\",pragc:\"GREENING\",exig:[\"PTV;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em\\ndesacordo com o previsto nesta Instrução Normativa, será sumariamente destruída, não cabendo ao infrator qualquer tipo de indenização, sem prejuízo das demais sanções estabelecidas pela legislação estadual e federal de defesa sanitária vegetal, conforme o art. 5º, da Instrução Normativa MAPA nº. 53, de 16 de outubro de 2010.\"],proib:false,leg:\"Instrução Normativa nº 53, de 16 de outubro de 2008\",link:\"leg/IN53-2008.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Pinta-preta-dos-citros PARA UF reconhecida pelo MAPA como livre da ocorrência de Pinta-preta-dos-citros\", hosp:[\"Citrus spp.\"],part:[\"mudas\",\"sementes\",\"estacas\",\"gemas\"],orig:[\"AM\",\"ES\",\"MT\",\"MS\",\"MG\",\"PR\",\"RJ\",\"RS\",\"SC\",\"SP\",\"BA\",\"GO\",\"RO\"],dest:[\"AC\",\"AL\",\"AP\",\"CE\",\"DF\",\"MA\",\"PA\",\"PB\",\"PE\",\"PI\",\"RN\",\"RR\",\"SE\",\"TO\"],prag:\"Guignardia citricarpa (=Phyllosticta citricarpa)\",pragc:\"PINTA-PRETA-DOS-CITROS\",exig:[\"PTV;\",\"A partida deve ser transportada em veículos fechados ou totalmente protegidos por lona.\"],proib:false,leg:\"Instrução Normativa MAPA nº 3, de 8 de janeiro de 2008\",link:\"leg/IN03-2008.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Pinta-preta-dos-citros PARA UF reconhecida pelo MAPA como livre da ocorrência de Pinta-preta-dos-citros\", hosp:[\"Citrus spp.\"],part:[\"frutos\"],orig:[\"AM\",\"ES\",\"MT\",\"MS\",\"MG\",\"PR\",\"RJ\",\"RS\",\"SC\",\"SP\",\"BA\",\"GO\",\"RO\"],dest:[\"AC\",\"AL\",\"AP\",\"CE\",\"DF\",\"MA\",\"PA\",\"PB\",\"PE\",\"PI\",\"RN\",\"RR\",\"SE\",\"TO\"],prag:\"Guignardia citricarpa (=Phyllosticta citricarpa)\",pragc:\"PINTA-PRETA-DOS-CITROS\",exig:[\"PTV com a seguinte declaração adicional: \\\"Os frutos foram produzidos sob Manejo Integrado de Guignardia citricarpa e submetidos a processo de seleção para a retirada de folhas e partes de ramos\\\";\",\"Os frutos devem estar isentos de material vegetativo.\"],proib:false,leg:\"Instrução Normativa MAPA nº 3, de 8 de janeiro de 2008\",link:\"leg/IN03-2008.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Broca Conígera PARA UF reconhecida pelo MAPA como livre da ocorrência de Broca Conígera\", hosp:[\"Myroxylon balsamum\",\"Anacardium occidentale\",\"Delonix regia\",\"Manihot esculenta\",\"Mangifera indica\",\"Switenia macrophyla\",\"Hevea brasiliensis\",\"Tectona grandis\"],part:[\"madeira\",\"maniva\",\"estaca\"],orig:[\"MT\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Sinoxylon conigerum\",pragc:\"BROCA CONÍGERA\",exig:[\"PTV.\"],proib:false,leg:\"\",link:\"\"}, \r\n{desc:\"DE UF com ocorrência de Cochonilha-do-carmim PARA UF reconhecida pelo MAPA como livre da ocorrência de Cochonilha-do-carmim\", hosp:[\"Opuntia cochenillifera\"],part:[\"palma\"],orig:[\"CE\",\"PB\",\"PE\",\"PI\",\"RN\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RJ\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Dactylopius opuntiae\",pragc:\"COCHONILHA-DO-CARMIM\",exig:[\"PTV;\",\"Nas barreiras fitossanitárias interestaduais, caso seja constatada por meio de inspeção visual, infestação por cochonilha-do-carmim, independente da espécie, toda a partida será imediatamente apreendida e destruída de modo a impedir a sobrevivência da praga, conforme o art. 6º. da Instrução Normativa MAPA nº. 23 de maio de 2007.\"],proib:false,leg:\"Instrução Normativa MAPA nº 23, de 29 de maio de 2007\",link:\"leg/IN23-2007.pdf\"}, \r\n{desc:\"DE qualquer UF PARA qualquer UF\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"mudas\"],orig:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],dest:[\"AC\",\"AL\",\"AM\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RR\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV;\",\"As mudas devem ser transportadas in vitro;\",\"A exigência de PTV não se aplica às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a mudas micropropagadas;\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE UF sem ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],dest:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:  \\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;   \\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:   \\n\\n2.1 - PTV para comprovar a origem.\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF sem ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],dest:[\"CE\",\"PE\",\"PI\",\"SC\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - A partida deve estar acompanhada de Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:   \\n\\n2.1 - PTV para comprovar a origem.\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE área livre de Moko-da-bananeira PARA UF com ocorrência de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"frutos\",\"flores\"],orig:[\"CE\",\"PE\",\"PI\",\"SC\"],dest:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\",\"A partida quando deve ser transportada em recipiente lacrado;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\",\"Estas exigências fitossanitárias só se aplicam a partida destinada a estudo em instituição de pesquisa científica.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE área livre de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"frutos\",\"flores\"],orig:[\"CE\",\"PE\",\"PI\",\"SC\"],dest:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\",\"A partida deve ser transportada em recipiente lacrado;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\",\"Estas exigências só se aplicam a partida destinada a estudo em instituição de pesquisa científica.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE área livre de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"frutos\",\"flores\"],orig:[\"CE\",\"PE\",\"PI\",\"SC\"],dest:[\"CE\",\"PE\",\"PI\",\"SC\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida\\n\\n 1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"rizomas\"],orig:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],dest:[\"CE\",\"PE\",\"PI\",\"SC\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - A partida deve estar acompanhada de Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA: TRÂNSITO PROIBIDO;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"rizomas\"],orig:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],dest:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - A partida deve estar acompanhada de Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA: TRÂNSITO PROIBIDO;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF sem ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"mudas\"],orig:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],dest:[\"CE\",\"PE\",\"PI\",\"SC\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV, para transitar pelas seguintes UF's: AP,AM,PA,RO,RR e SE;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE área livre de Moko-da-bananeira PARA UF com ocorrência de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"mudas\"],orig:[\"CE\",\"PE\",\"PI\",\"SC\"],dest:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida;\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE área livre de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"mudas\"],orig:[\"CE\",\"PE\",\"PI\",\"SC\"],dest:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), de UF de origem da partida \\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"mudas\"],orig:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],dest:[\"CE\",\"PE\",\"PI\",\"SC\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n- Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA) de origem, quando a partida for aplicada a estudo em instituição de pesquisa científica e, neste caso, deverá ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\\n\\n2.3 - A PTV deve constar se as mudas são in vitro ou micropropagadas;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\",\"Estas exigências fitossanitárias só se aplicam a mudas in vitro e micropropagadas.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Moko-da-bananeira PARA UF sem ocorrência de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"mudas\"],orig:[\"AM\",\"AP\",\"PA\",\"RO\",\"RR\",\"SE\"],dest:[\"AC\",\"AL\",\"BA\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PB\",\"PR\",\"RJ\",\"RN\",\"RS\",\"SP\",\"TO\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida,\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas encontram- se livres de Ralstonia solanacearum raça 2\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\\n\\n2.3 - A PTV deve constar se as mudas são in vitro ou micropropagadas;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009;\",\"Estas exigências fitossanitárias só se aplicam a mudas in vitro e micropropagadas.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE área livre de Moko-da-bananeira PARA área livre de Moko-da-bananeira\", hosp:[\"Heliconia spp.\",\"Musa spp.\"],part:[\"mudas\"],orig:[\"CE\",\"PE\",\"PI\",\"SC\"],dest:[\"CE\",\"PE\",\"PI\",\"SC\"],prag:\"Ralstonia solanacearum raça 2\",pragc:\"MOKO-DA-BANANEIRA\",exig:[\"SE A PARTIDA FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n1.1 - Autorização da Superintendência Federal de Agricultura, Pecuária e Abastecimento (SFA), da UF de origem da partida ,\\n\\n1.2 - A partida deve ser transportada em recipiente lacrado;\",\"SE A PARTIDA NÃO FOR DESTINADA A ESTUDO EM INSTITUIÇÃO DE PESQUISA CIENTÍFICA:\\n\\n2.1 - PTV com a seguinte declaração adicional: \\\"As mudas foram produzidas em área livre de Ralstonia solanacearum raça 2, oficialmente reconhecida pelo Ministério da Agricultura, Pecuária e Abastecimento\\\";\\n\\n2.2 - A partida deve estar lacrada e o(s) número(s) do(s) lacre(s) deve(m) constar da PTV;\",\"Partida apreendida pela fiscalização de defesa sanitária vegetal, em desacordo com estas exigências, será sumariamente destruída ou retornada à origem, sem prejuízo das demais sanções estabelecidas pela legislação própria, conforme o art. 11 da Instrução Normativa SDA nº. 17, de 27 de maio de 2009.\"],proib:undefined,leg:\"Instrução Normativa SDA/MAPA nº 17, de 27 de maio de 2009\",link:\"leg/IN17-2009.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\",\"As bananas não podem transitar em cacho, em todo o território nacional;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"MG\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\",\"As bananas não podem transitar em cacho, em todo o território nacional;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida proveniente do municípios livres de Sigatoka Negra em MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"MS\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\",\"As bananas não podem transitar em cacho, em todo o território nacional;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida proveniente de municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área livre de Sigatoka Negra \", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MG\",\"MS\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],dest:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MG\",\"MS\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a declaração adicional de que a partida é originária de área livre de Sigatoka Negra;\",\"A partida deve estar lacrada para transitar por AC, AM, AP, MA, MG (exceto pelos municípios listados no item 6.1), MS (exceto pelos municípios listados no item 6.2), MT, PA, PR, RS, RJ, RO, RR, SC, SP e TO;\",\"As bananas não podem transitar em cacho, em todo o território nacional;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida proveniente e destinada a município livre de Sigatoka Negra de MG e de MS: \\n\\n6.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n6.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],dest:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a seguinte declaração adicional: \\\"A partida é originária de Unidade de Produção onde foi implantado o Sistema de Mitigação de Risco para Sigatoka Negra\\\";\",\"As bananas não podem transitar em cacho, em todo o território nacional;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida destinada a município livre de Sigatoka Negra de MG e de MS: \\n\\n5.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n5.2-  Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AC\",\"AM\",\"AP\",\"MA\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],dest:[\"MG\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a seguinte declaração adicional: \\\"A partida é originária de Unidade de Produção onde foi implantado o Sistema de Mitigação de Risco para Sigatoka Negra\\\";\",\"As bananas não podem transitar em cacho, em todo o território nacional;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida destinada a municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],dest:[\"MS\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a seguinte declaração adicional: \\\"A partida é originária de Unidade de Produção onde foi implantado o Sistema de Mitigação de Risco para Sigatoka Negra\\\";\",\"As bananas não podem transitar em cacho, em todo o território nacional;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento dos frutos;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida destinada a municípios livres de Sigatoka Negra de MS: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\nb) Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área com ocorrência de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"frutos\",\"flores\"],orig:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"Partida isenta de PTV, mas é PROIBIDO o trânsito por AL, BA, CE, DF, ES, GO, PB, PE, PI, RN, SE, bem como pelos municípios livres de Sigatoka Negra de MG e de MS: \\n\\n1.1 -  Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n1.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú, Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\",\"exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"MG\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\",\"exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida proveniente de municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"MS\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\",\"exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida proveniente de municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\",\"Estas exigências só se aplicam a mudas não micropopagadas;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área livre de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MG\",\"MS\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],dest:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MG\",\"MS\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"PTV com a Declaração Adicional constando que a partida é originária de área livre da Sigatoka Negra.\",\"A partida deve estar lacrada para transitar por AC, AM, AP, MA, MG (exceto pelos municípios listados no item 5.1), MS (exceto pelos municípios listados no item 5.2), MT, PA, PR, RS, RJ, RO, RR, SC, SP e TO;\",\"A partida deve estar livre de folhas de bananeira ou de parte da planta, no acondicionamento das mudas;\",\"Estas exigências não se aplicam às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Estas exigências só se aplicam a partida proveniente e destinada a município livre de Sigatoka Negra de MG e de MS: \\n\\n5.1 -  Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba, Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n5.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú, Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\",\"Estas exigências só se aplicam a mudas não micropopagadas;\"],proib:false,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área com ocorrência de Sigatoka Negra PARA área livre de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],dest:[\"AL\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MG\",\"MS\",\"PB\",\"PE\",\"PI\",\"RN\",\"SE\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"\tTRÂNSITO PROIBIDO;\",\"Esta proibição não se aplica às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Esta proibição só se aplica a partida destinada a município livre de Sigatoka Negra de MG e de MS:\\n\\n3.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo;\\n\\n3.2 - Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\",\"Esta proibição só se aplica à mudas não micropopagadas;\"],proib:true,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE área com ocorrência de Sigatoka Negra PARA área com ocorrência de Sigatoka Negra\", hosp:[\"Musa spp.\",\"Heliconia spp.\"],part:[\"mudas\"],orig:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],dest:[\"AC\",\"AM\",\"AP\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PR\",\"RS\",\"RJ\",\"RO\",\"RR\",\"SC\",\"SP\",\"TO\"],prag:\"Mycosphaerella fijiensis\",pragc:\"SIGATOKA NEGRA\",exig:[\"TRÂNSITO PROIBIDO;\",\"Esta proibição não se aplica a partida proveniente de município livre de Sigatoka Negra de MG e de MS: \\n\\n1.1 - Municípios livres de Sigatoka Negra de MG: Águas Vermelhas, Araçuaí, Araguari, Araporã, Bocaiúva, Buritizeiro, Cachoeira Dourada, Campina Verde, Campos Altos, Canápolis, Capinópolis, Capitão Enéias, Carmo do Paranaíba, Carneirinho, Cascalho Rico, Catuti, Centralina, Claro dos Poções, Engenheiro Navarro, Espinosa, Estrela do Sul, Francisco Sá, Franscisco Dumont, Frutal, Guaraciama, Gurinhatã, Indianópolis, Ipiaçu, Iraí de Minas, Itacarambi, Itaobim, Itapagipe, Ituiutaba,Iturama, Jaíba, Janaúba, Januária, Jequitaí, Jequitinhonha, Joaíma, João Pinheiro, Lagamar, Lagoa Formosa, Lassance, Limeira do Oeste, Manga, Matias Cardoso, Mato Verde, Medina, Monte Alegre de Minas, Monte Azul, Monte Carmelo, Montes Claros, Nova Ponte, Nova Porteirinha, Pai Pedro, Paracatu, Patos de Minas, Patrocínio, Pedra de Maria da Cruz, Perdizes, Pirapora, Ponto dos Volantes, Porteirinha, Prata, Presidente Olegário, Rio Paranaíba, Sacramento, Santa Rosa da Serra, Santa Vitória, Santo Antonio do Retiro, São Francisco, São Gonçalo do Abaeté, São Gotardo, São João das Missões, Serra do Salitre, Tapira, Tupaciguara, Uberaba, Uberlândia, Unaí, Varjão de Minas, Várzea da Palma, Vazante, Verdelândia e Veríssimo; \\n\\n1.2 -  Municípios livres de Sigatoka Negra de MS: Água Clara, Anaurilândia, Aparecida do Taboado, Bataguassú,Batayporã, Brasilândia, Cassilândia, Chapadão do Sul, Inocência, Nova Andradina, Paranaíba, Ribas do Rio Pardo, Santa Rita do Pardo, Selvíria, Taquarussú e Três Lagoas;\",\"Esta proibição não se aplica às espécies Heliconia rostrata, Heliconia bihai, Heliconia augusta, Heliconia chartacea, Heliconia spathocircinada, Heliconia librata, Heliconia psittacorum cultivar Red Opal e Heliconia stricta;\",\"Esta proibição só se aplica a mudas não micropopagadas;\"],proib:true,leg:\"Instrução Normativa SDA/MAPA nº 17, de 31 de maio de 2005\",link:\"leg/IN17-2005.pdf\"}, \r\n{desc:\"DE UF com ocorrência de Anthonomus tomentosus PARA UF sem a ocorrência de Anthonomus tomentosus\", hosp:[\"Malpighia spp.\"],part:[\"frutos\"],orig:[\"AM\",\"RR\"],dest:[\"AC\",\"AL\",\"AP\",\"BA\",\"CE\",\"DF\",\"ES\",\"GO\",\"MA\",\"MG\",\"MS\",\"MT\",\"PA\",\"PB\",\"PE\",\"PI\",\"PR\",\"RJ\",\"RN\",\"RO\",\"RS\",\"SC\",\"SE\",\"SP\",\"TO\"],prag:\"Anthonomus tomentosus\",pragc:\"ANTHONOMUS TOMENTOSUS\",exig:[\"Se a partida for proveniente de todos os municípios de RR, exceto de Boa Vista, Mucajaí e Pacaraima, ou dos municípios de Presidente Figueiredo, Rio Preto da Eva e Manaus, no AM: PTV com a seguinte declaração adicional: A partida foi inspecionada e encontra-se livre de Anthonomus tomentosus;\",\"Se a partida for proveniente de Boa Vista, Mucajaí e Pacaraima, em RR: TRÂNSITO PROIBIDO.\",\"Estas exigências fitossanitárias só se aplicam a frutos frescos;\"],proib:false,leg:\"Instrução Normativa MAPA/SDA nº. 19, de 16 de setembro de 2014\",link:\"leg/IN19-2014.pdf.pdf\"} \r\n]; \r\n\r\nvar hospedeiros: hospedeiro[] = [ \r\n{nomeVul:\"Abacate (Persea gratissima)\",nomeSci:\"Persea gratissima\"}, \r\n{nomeVul:\"Abeto Europeu\",nomeSci:\"Picea abies\"}, \r\n{nomeVul:\"Abeto Vermelho Comum\",nomeSci:\"Picea abies\"}, \r\n{nomeVul:\"Abiu\",nomeSci:\"Chrysophyllum cainito\"}, \r\n{nomeVul:\"Acácia\",nomeSci:\"Acacia sp.\"}, \r\n{nomeVul:\"Açaí\",nomeSci:\"Euterpe oleracea\"}, \r\n{nomeVul:\"Açaí-do-Amazonas\",nomeSci:\"Euterpe precatoria\"}, \r\n{nomeVul:\"Açaí-solitário\",nomeSci:\"Euterpe precatoria\"}, \r\n{nomeVul:\"Acerola\",nomeSci:\"Malpighia punicifolia\"}, \r\n{nomeVul:\"Acerola (qualquer espécie)\",nomeSci:\"Malpighia spp.\"}, \r\n{nomeVul:\"Álamo\",nomeSci:\"Populus spp.\"}, \r\n{nomeVul:\"Álamo Americano\",nomeSci:\"Tilia americana\"}, \r\n{nomeVul:\"Álamo Branco\",nomeSci:\"Populus alba\"}, \r\n{nomeVul:\"Álamo Grande Dente\",nomeSci:\"Populus grandidenta\"}, \r\n{nomeVul:\"Álamo (Populus x canadensis)\",nomeSci:\"Populus x canadensis\"}, \r\n{nomeVul:\"Albízia\",nomeSci:\"Albizia lebbeck\"}, \r\n{nomeVul:\"Alder\",nomeSci:\"Alnus sp.\"}, \r\n{nomeVul:\"Alder Cinza\",nomeSci:\"Alnus incana\"}, \r\n{nomeVul:\"Alder Japonês\",nomeSci:\"Alnus japonica\"}, \r\n{nomeVul:\"Alder Negro\",nomeSci:\"Alnus glutinosa\"}, \r\n{nomeVul:\"Alder Vermelha\",nomeSci:\"Alnus rubra\"}, \r\n{nomeVul:\"Algodão Americano\",nomeSci:\"Populus wislizeni\"}, \r\n{nomeVul:\"Alpínia purpurata\",nomeSci:\"Alpínia purpurata\"}, \r\n{nomeVul:\"Alpínia zerumbet\",nomeSci:\"Alpínia zerumbet\"}, \r\n{nomeVul:\"Ameixa\",nomeSci:\"Prunus spp.\"}, \r\n{nomeVul:\"Ameixeira-japonesa\",nomeSci:\"Prunus salicina\"}, \r\n{nomeVul:\"Amelanchier\",nomeSci:\"Amelanchier laevis\"}, \r\n{nomeVul:\"Amendoeira\",nomeSci:\"Terminalia catappa\"}, \r\n{nomeVul:\"Amieiro\",nomeSci:\"Alnus glutinosa\"}, \r\n{nomeVul:\"Amieiro Negro\",nomeSci:\"Frangula almus\"}, \r\n{nomeVul:\"Angico\",nomeSci:\"Acacia sp.\"}, \r\n{nomeVul:\"Arapaju\",nomeSci:\"Manilkara zapota\"}, \r\n{nomeVul:\"Arbusto Espinheiro do Bosque\",nomeSci:\"Crataegus oxyacanthoides (syn: oxyacantha )\"}, \r\n{nomeVul:\"Arbusto Espinhento\",nomeSci:\"Craetaegus monogyna\"}, \r\n{nomeVul:\"Arecaceae (espécies desta família)\",nomeSci:\"Arecaceae (espécies desta família)\"}, \r\n{nomeVul:\"Aricuriroba\",nomeSci:\"Syagrus schizophylla\"}, \r\n{nomeVul:\"Árvore-do-viajante\",nomeSci:\"Ravenala madagascariensis\"}, \r\n{nomeVul:\"Árvore Preta\",nomeSci:\"Fraxinus nigra (syn. sambucifolia)\"}, \r\n{nomeVul:\"Aveia\",nomeSci:\"Avena sativa\"}, \r\n{nomeVul:\"Avelã\",nomeSci:\"Corylus avellana\"}, \r\n{nomeVul:\"Aveleira Japonesa\",nomeSci:\"Corylus sieboldiana\"}, \r\n{nomeVul:\"Aveleira Siberiana\",nomeSci:\"Corylus heterophylla var. thunbergiii\"}, \r\n{nomeVul:\"Azevinho\",nomeSci:\"Ilex aquifolium\"}, \r\n{nomeVul:\"Bacupari\",nomeSci:\"Garcinia dulcis\"}, \r\n{nomeVul:\"Bálsamo\",nomeSci:\"Myroxylon balsamum\"}, \r\n{nomeVul:\"Banana\",nomeSci:\"Musa spp.\"}, \r\n{nomeVul:\"Bastão-do-imperador\",nomeSci:\"Etlingera alatior\"}, \r\n{nomeVul:\"Bétula\",nomeSci:\"Betula sp.\"}, \r\n{nomeVul:\"Bétula Branca (B. papyrifera)\",nomeSci:\"Betula papyrifera\"}, \r\n{nomeVul:\"Bétula Branca (B. pubescens)\",nomeSci:\"Betula pubescens\"}, \r\n{nomeVul:\"Bétula Cinza\",nomeSci:\"Betula populifolia\"}, \r\n{nomeVul:\"Bétula lenta\",nomeSci:\"Betula nigra\"}, \r\n{nomeVul:\"Bétula Lenta\",nomeSci:\"Betula lenta\"}, \r\n{nomeVul:\"Bétula Lutea\",nomeSci:\"Betula lutea (synonym: alleghaniensis)\"}, \r\n{nomeVul:\"Bétula Monarca\",nomeSci:\"Betula maximowicziana\"}, \r\n{nomeVul:\"Bétula Negra\",nomeSci:\"Betula nigra\"}, \r\n{nomeVul:\"Bétula Papel\",nomeSci:\"Betula papyrifera\"}, \r\n{nomeVul:\"Bétula Prata\",nomeSci:\"Betula pendula (syn: verrucosa)\"}, \r\n{nomeVul:\"Bilimbi\",nomeSci:\"Chrysophyllum cainito\"}, \r\n{nomeVul:\"Bordo\",nomeSci:\"Acer sp.\"}, \r\n{nomeVul:\"Bordo (Acer pennsylvanicum)\",nomeSci:\"Acer pennsylvanicum\"}, \r\n{nomeVul:\"Bordo (Acer pseudoplatanus)\",nomeSci:\"Acer pseudoplatanus\"}, \r\n{nomeVul:\"Bordo (A. mono)\",nomeSci:\"Acer mono subsp. Heterophyllum\"}, \r\n{nomeVul:\"Bordo (A. negundo)\",nomeSci:\"Acer negundo\"}, \r\n{nomeVul:\"Bordo (A. sacharum)\",nomeSci:\"Acer saccharum\"}, \r\n{nomeVul:\"Bordo (A. spicatum)\",nomeSci:\"Acer spicatum\"}, \r\n{nomeVul:\"Bordo-da-videira\",nomeSci:\"Acer circinatum\"}, \r\n{nomeVul:\"Bordo Japonês\",nomeSci:\"Acer palmatum\"}, \r\n{nomeVul:\"Bordo Vermelho (A. macrophyllum)\",nomeSci:\"Acer macrophyllum\"}, \r\n{nomeVul:\"Bordo Vermelho (A. rubrum)\",nomeSci:\"Acer rubrum\"}, \r\n{nomeVul:\"Broto Vermelho Oriental\",nomeSci:\"Cercis canadensis\"}, \r\n{nomeVul:\"Buriti\",nomeSci:\"Mauritia flexuosa\"}, \r\n{nomeVul:\"Cabeça-de-negro\",nomeSci:\"Albizia lebbeck\"}, \r\n{nomeVul:\"Caimito\",nomeSci:\"Chrysophyllum cainito\"}, \r\n{nomeVul:\"Cajazeiro\",nomeSci:\"Spondias lutea\"}, \r\n{nomeVul:\"Caju\",nomeSci:\"Anacardium occidentale\"}, \r\n{nomeVul:\"Cana-da-Índia\",nomeSci:\"Canna indica\"}, \r\n{nomeVul:\"Carambola\",nomeSci:\"Averrhoa carambola\"}, \r\n{nomeVul:\"Carambola amarela\",nomeSci:\"Chrysophyllum cainito\"}, \r\n{nomeVul:\"Cárpino\",nomeSci:\"Carpinus sp.\"}, \r\n{nomeVul:\"Cárpino Betulas\",nomeSci:\"Carpinus betulas\"}, \r\n{nomeVul:\"Carvalho\",nomeSci:\"Quercus sp.\"}, \r\n{nomeVul:\"Carvalho Água\",nomeSci:\"Quercus laurifolia\"}, \r\n{nomeVul:\"Carvalho-alvarinho\",nomeSci:\"Quercus robur\"}, \r\n{nomeVul:\"Carvalho Branco\",nomeSci:\"Quercus alba\"}, \r\n{nomeVul:\"Carvalho Branco do Brejo\",nomeSci:\"Quercus bicolor\"}, \r\n{nomeVul:\"Carvalho Branco Oregon\",nomeSci:\"Quercus garryana\"}, \r\n{nomeVul:\"Carvalho Campeão (Q. borealis)\",nomeSci:\"Quercus borealis (syn: rubra)\"}, \r\n{nomeVul:\"Carvalho Campeão (Q. rubra)\",nomeSci:\"Quercus rubra\"}, \r\n{nomeVul:\"Carvalho Castanheiro\",nomeSci:\"Quercus montana\"}, \r\n{nomeVul:\"Carvalho Escarlata\",nomeSci:\"Quercus coccinea\"}, \r\n{nomeVul:\"Carvalho Folha Diamante\",nomeSci:\"Quercus laurifolia\"}, \r\n{nomeVul:\"Carvalho Glorioso\",nomeSci:\"Quercus laurifolia\"}, \r\n{nomeVul:\"Carvalho Glorioso do Brejo\",nomeSci:\"Quercus laurifolia\"}, \r\n{nomeVul:\"Carvalho Konara\",nomeSci:\"Quercus glandulifera\"}, \r\n{nomeVul:\"Carvalho Koreano\",nomeSci:\"Quercus glandulifera\"}, \r\n{nomeVul:\"Carvalho Mongoliano\",nomeSci:\"Quercus mongolica var grosserrata\"}, \r\n{nomeVul:\"Carvalho Obtuso\",nomeSci:\"Quercus laurifolia\"}, \r\n{nomeVul:\"Carvalho Oregon\",nomeSci:\"Quercus garryana\"}, \r\n{nomeVul:\"Carvalho Preto\",nomeSci:\"Quercus velutina\"}, \r\n{nomeVul:\"Carvalho-roble\",nomeSci:\"Quercus robur\"}, \r\n{nomeVul:\"Carvalho-vermelho\",nomeSci:\"Quercus robur\"}, \r\n{nomeVul:\"Carvalho Vermelho do Norte (Q. borealis)\",nomeSci:\"Quercus borealis (syn: rubra)\"}, \r\n{nomeVul:\"Carvalho Vermelho do Norte (Q. rubra)\",nomeSci:\"Quercus rubra\"}, \r\n{nomeVul:\"Castanha-da-Índia\",nomeSci:\"Aesculus sp.\"}, \r\n{nomeVul:\"Castanha-da-Índia (A. hippocastanum)\",nomeSci:\"Aesculus hippocastanum\"}, \r\n{nomeVul:\"Castanheiro Europeu\",nomeSci:\"Castanea dentata\"}, \r\n{nomeVul:\"Cereja de Pássaro\",nomeSci:\"Prunus ssiori\"}, \r\n{nomeVul:\"Cereja de Pássaro Virginia\",nomeSci:\"Prunus virginiana\"}, \r\n{nomeVul:\"Cerejeira\",nomeSci:\"Prunus avium\"}, \r\n{nomeVul:\"Cerejeira Chorona\",nomeSci:\"Prunus subhirtella var. pendula\"}, \r\n{nomeVul:\"Cerejeira Negra\",nomeSci:\"Prunus serotina\"}, \r\n{nomeVul:\"Chá-da-Índia\",nomeSci:\"Camellia sinensis\"}, \r\n{nomeVul:\"Choupo\",nomeSci:\"Populus spp.\"}, \r\n{nomeVul:\"Choupo-bálsamo\",nomeSci:\"Populus balsamifera\"}, \r\n{nomeVul:\"Choupo Branco\",nomeSci:\"Populus alba\"}, \r\n{nomeVul:\"Choupo (P. x canadensis)\",nomeSci:\"Populus x canadensis\"}, \r\n{nomeVul:\"Choupo Tremedor\",nomeSci:\"Populus tremula\"}, \r\n{nomeVul:\"Choupo Trêmulo\",nomeSci:\"Populus tremuloides\"}, \r\n{nomeVul:\"Chuva-de-ouro\",nomeSci:\"Laburnum anagyrioides\"}, \r\n{nomeVul:\"Cinamomo\",nomeSci:\"Melia azedarach\"}, \r\n{nomeVul:\"Cinza-da-montanha\",nomeSci:\"Sorbus sp.\"}, \r\n{nomeVul:\"Cinza Japonês\",nomeSci:\"Fraxinus mandshurica var. Japonica\"}, \r\n{nomeVul:\"Citros\",nomeSci:\"Citrus spp.\"}, \r\n{nomeVul:\"Coprosma Frondoso Fino\",nomeSci:\"Coprosma areolata\"}, \r\n{nomeVul:\"Coqueiro\",nomeSci:\"Cocos nucifera\"}, \r\n{nomeVul:\"Coquinho-azedo\",nomeSci:\"Butia capitata\"}, \r\n{nomeVul:\"Corifa\",nomeSci:\"Corypha umbraculifera\"}, \r\n{nomeVul:\"Corrente-de-ouro\",nomeSci:\"Laburnum anagyrioides\"}, \r\n{nomeVul:\"Cyca\",nomeSci:\"Cycas spp.\"}, \r\n{nomeVul:\"Dendezeiro\",nomeSci:\"Elaeis guineensis\"}, \r\n{nomeVul:\"Espinho Branco\",nomeSci:\"Craetaegus monogyna\"}, \r\n{nomeVul:\"Estrelítzia\",nomeSci:\"Strelitzia reginae\"}, \r\n{nomeVul:\"Faia\",nomeSci:\"Fagus sp.\"}, \r\n{nomeVul:\"Faia Americana\",nomeSci:\"Fagus americana\"}, \r\n{nomeVul:\"Faia Cobre\",nomeSci:\"Fagus sylvantica\"}, \r\n{nomeVul:\"Faia do Oriente\",nomeSci:\"Fagus orientalis\"}, \r\n{nomeVul:\"Faia Japonesa\",nomeSci:\"Fagus crenata f. grandifolia (syn.Americana)\"}, \r\n{nomeVul:\"Faia Roxa\",nomeSci:\"Fagus silvatica f. purpurea\"}, \r\n{nomeVul:\"Falso Castanho Japonês\",nomeSci:\"Aesculus turbinata\"}, \r\n{nomeVul:\"Faveiro\",nomeSci:\"Albizia lebbeck\"}, \r\n{nomeVul:\"Feixe Branco\",nomeSci:\"Sorbus aria\"}, \r\n{nomeVul:\"Flamboyant\",nomeSci:\"Delonix regia\"}, \r\n{nomeVul:\"Fortunela\",nomeSci:\"Fortunella spp.\"}, \r\n{nomeVul:\"Freixo (F. bungeana)\",nomeSci:\"Fraxinus bungeana\"}, \r\n{nomeVul:\"Freixo (F. excelsior)\",nomeSci:\"Fraxinus excelsior\"}, \r\n{nomeVul:\"Fruta Pão\",nomeSci:\"Artocarpus altilis\"}, \r\n{nomeVul:\"Gafanhoto Preto\",nomeSci:\"Robinia pseudoacacia\"}, \r\n{nomeVul:\"Goiaba\",nomeSci:\"Psidium guajava\"}, \r\n{nomeVul:\"Goma Preta\",nomeSci:\"Nyssa sylvatica\"}, \r\n{nomeVul:\"Gomuto\",nomeSci:\"Arenga pinnata\"}, \r\n{nomeVul:\"Grão Amargo\",nomeSci:\"Prunus virginiana\"}, \r\n{nomeVul:\"Helicônia\",nomeSci:\"Heliconia spp.\"}, \r\n{nomeVul:\"Heliconiaceae (espécies desta família)\",nomeSci:\"Heliconiaceae (espécies desta família)\"}, \r\n{nomeVul:\"Jaca\",nomeSci:\"Artocarpus integrifolia\"}, \r\n{nomeVul:\"Jambo Branco (S. aqueum)\",nomeSci:\"Syzygium aqueum\"}, \r\n{nomeVul:\"Jambo Branco (S. samarangense)\",nomeSci:\"Syzygium samarangense\"}, \r\n{nomeVul:\"Jambo D'água\",nomeSci:\"Syzygium aqueum\"}, \r\n{nomeVul:\"Jambo Rosa\",nomeSci:\"Syzygium jambos\"}, \r\n{nomeVul:\"Jambo Vermelho\",nomeSci:\"Syzygium malaccense\"}, \r\n{nomeVul:\"Jerivá\",nomeSci:\"Syagrus romanzoffianum\"}, \r\n{nomeVul:\"Juglans\",nomeSci:\"Juglans sp.\"}, \r\n{nomeVul:\"Jujuba (Z. jujuba)\",nomeSci:\"Ziziphus jujuba\"}, \r\n{nomeVul:\"Jujuba (Z. mauritiana)\",nomeSci:\"Ziziphus mauritiana\"}, \r\n{nomeVul:\"Jurema\",nomeSci:\"Acacia sp.\"}, \r\n{nomeVul:\"Karamu\",nomeSci:\"Coprosma lucida\"}, \r\n{nomeVul:\"Kowhai\",nomeSci:\"Sophora microphylla\"}, \r\n{nomeVul:\"Laranja\",nomeSci:\"Citrus sinensis\"}, \r\n{nomeVul:\"Laranja Azeda\",nomeSci:\"Citrus aurantium\"}, \r\n{nomeVul:\"Laranja Doce\",nomeSci:\"Citrus sinensis\"}, \r\n{nomeVul:\"Licuala\",nomeSci:\"Licuala grandis\"}, \r\n{nomeVul:\"Limão Cayena\",nomeSci:\"Averrhoa bilimbi\"}, \r\n{nomeVul:\"Linda-dos-jardins\",nomeSci:\"Rhus typhina\"}, \r\n{nomeVul:\"Louro Califórnia\",nomeSci:\"Umbelluraria californica\"}, \r\n{nomeVul:\"Louro-de-baiano\",nomeSci:\"Alpínia zerumbet\"}, \r\n{nomeVul:\"Maça\",nomeSci:\"Malus sp.\"}, \r\n{nomeVul:\"Maçã (M. communis)\",nomeSci:\"Malus communis\"}, \r\n{nomeVul:\"Maçã (M. pumila)\",nomeSci:\"Malus pumila\"}, \r\n{nomeVul:\"Maçã (M. pumila var domestica)\",nomeSci:\"Malus pumila var domestica\"}, \r\n{nomeVul:\"Maçã (M. x domestica)\",nomeSci:\"Malus x domestica\"}, \r\n{nomeVul:\"Maçã (Pyrus malus)\",nomeSci:\"Pyrus malus\"}, \r\n{nomeVul:\"Maçaranduba\",nomeSci:\"Manilkara zapota\"}, \r\n{nomeVul:\"Maçã Silvestre\",nomeSci:\"Malus sylvestris\"}, \r\n{nomeVul:\"Manchu Cinza\",nomeSci:\"Fraxinus mandshurica\"}, \r\n{nomeVul:\"Mandioca\",nomeSci:\"Manihot esculenta\"}, \r\n{nomeVul:\"Manga\",nomeSci:\"Mangifera indica\"}, \r\n{nomeVul:\"Mararaju\",nomeSci:\"Manilkara zapota\"}, \r\n{nomeVul:\"Miraguama\",nomeSci:\"Coccothrinax miraguama\"}, \r\n{nomeVul:\"Mogno\",nomeSci:\"Switenia macrophyla\"}, \r\n{nomeVul:\"Mogno Indiano Ocidental\",nomeSci:\"Swietenia mahagoni\"}, \r\n{nomeVul:\"Murta\",nomeSci:\"Murraya paniculata\"}, \r\n{nomeVul:\"Musaceae (espécies desta família)\",nomeSci:\"Musaceae (espécies desta família)\"}, \r\n{nomeVul:\"Nespereira\",nomeSci:\"Eriobotrya japonica\"}, \r\n{nomeVul:\"Nim\",nomeSci:\"Azadirachta indica\"}, \r\n{nomeVul:\"Nogueira\",nomeSci:\"Juglans sp.\"}, \r\n{nomeVul:\"Nogueira Amarga\",nomeSci:\"Carya cordiformis\"}, \r\n{nomeVul:\"Nogueira Amarga\",nomeSci:\"Carya spp.\"}, \r\n{nomeVul:\"Nogueira Amarga Casca de Pelúcia\",nomeSci:\"Carya ovata\"}, \r\n{nomeVul:\"Nogueira Amarga Coração Branco\",nomeSci:\"Carya tomentosa\"}, \r\n{nomeVul:\"Nogueira Amarga de Porco\",nomeSci:\"Carya glabra\"}, \r\n{nomeVul:\"Nogueira Branca\",nomeSci:\"Juglans cinerea\"}, \r\n{nomeVul:\"Nogueira Comum\",nomeSci:\"Juglans regia\"}, \r\n{nomeVul:\"Nogueira europeia\",nomeSci:\"Juglans regia\"}, \r\n{nomeVul:\"Nogueira Pecã\",nomeSci:\"Carya illinoensis\"}, \r\n{nomeVul:\"Nogueira Preta\",nomeSci:\"Juglans nigra\"}, \r\n{nomeVul:\"Noruega Abeto\",nomeSci:\"Picea abies\"}, \r\n{nomeVul:\"Olmo\",nomeSci:\"Ulmus sp.\"}, \r\n{nomeVul:\"Olmo Americano\",nomeSci:\"Ulmus americana\"}, \r\n{nomeVul:\"Olmo Escocês\",nomeSci:\"Ulmus glabra (syn. montana)\"}, \r\n{nomeVul:\"Padreiro\",nomeSci:\"Acer pseudoplatanus\"}, \r\n{nomeVul:\"Palma Corcho\",nomeSci:\"Microcycas calocoma\"}, \r\n{nomeVul:\"Palma forrageira\",nomeSci:\"Opuntia cochenillifera\"}, \r\n{nomeVul:\"Palmeira (Aiphanes spp.)\",nomeSci:\"Aiphanes spp.\"}, \r\n{nomeVul:\"Palmeira Areca\",nomeSci:\"Areca sp.\"}, \r\n{nomeVul:\"Palmeira areca-bambu\",nomeSci:\"Dypsis lutescens\"}, \r\n{nomeVul:\"Palmeira arecina\",nomeSci:\"Veitchia arecina\"}, \r\n{nomeVul:\"Palmeira-azul\",nomeSci:\"Bismarckia nobilis\"}, \r\n{nomeVul:\"Palmeira Bismarckia\",nomeSci:\"Bismarckia nobilis\"}, \r\n{nomeVul:\"Palmeira chamaedora\",nomeSci:\"Chamaedora spp.\"}, \r\n{nomeVul:\"Palmeira (Coccothrinax barbadensis)\",nomeSci:\"Coccothrinax barbadensis\"}, \r\n{nomeVul:\"Palmeira-da-California\",nomeSci:\"Washingtonia robusta\"}, \r\n{nomeVul:\"Palmeira-de-bismarck\",nomeSci:\"Bismarckia nobilis\"}, \r\n{nomeVul:\"Palmeira-de-macarthur\",nomeSci:\"Ptychosperma macarthurii\"}, \r\n{nomeVul:\"Palmeira-de-manarano\",nomeSci:\"Beccariophoenix madagascariensis\"}, \r\n{nomeVul:\"Palmeira-de-Manila\",nomeSci:\"Veitchia maerrillii\"}, \r\n{nomeVul:\"Palmeira-de-saia\",nomeSci:\"Washingtonia filifera\"}, \r\n{nomeVul:\"Palmeira Fênix\",nomeSci:\"Phoenix roebelenii\"}, \r\n{nomeVul:\"Palmeira-fuso\",nomeSci:\"Pseudophoenix sargentii\"}, \r\n{nomeVul:\"Palmeira-imperial-de-Porto Rico\",nomeSci:\"Roystonea borinquena\"}, \r\n{nomeVul:\"Palmeira-leque\",nomeSci:\"Schippia concolor\"}, \r\n{nomeVul:\"Palmeira-leque-brilhante\",nomeSci:\"Thrinax radiata\"}, \r\n{nomeVul:\"Palmeira-leque-da-china\",nomeSci:\"Livistona chinensis\"}, \r\n{nomeVul:\"Palmeira-leque-de-Fiji\",nomeSci:\"Pritchardia pacifica\"}, \r\n{nomeVul:\"Palmeira-paorotis\",nomeSci:\"Acoelorraphe wrightii\"}, \r\n{nomeVul:\"Palmeira-prateada-de-leque\",nomeSci:\"Coccothrinax argentata\"}, \r\n{nomeVul:\"Palmeira-princesa\",nomeSci:\"Dictyosperma album\"}, \r\n{nomeVul:\"Palmeira (Pseudophoenix vinifera)\",nomeSci:\"Pseudophoenix vinifera\"}, \r\n{nomeVul:\"Palmeira-rabo-de-peixe (Caryota mitis)\",nomeSci:\"Caryota mitis\"}, \r\n{nomeVul:\"Palmeira-rabo-de-peixe (Caryota urens)\",nomeSci:\"Caryota urens\"}, \r\n{nomeVul:\"Palmeira-rabo-de-raposa\",nomeSci:\"Wodyetia bifurcata\"}, \r\n{nomeVul:\"Palmeira-ráfia\",nomeSci:\"Raphis excelsa\"}, \r\n{nomeVul:\"Palmeira Real\",nomeSci:\"Roystonia regia\"}, \r\n{nomeVul:\"Palmeira Real Australiana\",nomeSci:\"Archontophoenix alexandrae\"}, \r\n{nomeVul:\"Palmeira Sagu\",nomeSci:\"Cycas spp.\"}, \r\n{nomeVul:\"Palmeira Solitária\",nomeSci:\"Ptychosperma elegans\"}, \r\n{nomeVul:\"Palmeira- triângulo\",nomeSci:\"Dypsis decaryi\"}, \r\n{nomeVul:\"Pandanaceae (espécies desta família)\",nomeSci:\"Pandanaceae (espécies desta família)\"}, \r\n{nomeVul:\"Pau Cachorro\",nomeSci:\"Cornus sp.\"}, \r\n{nomeVul:\"Pau Cachorro do Pacífico\",nomeSci:\"Cornus muttallii\"}, \r\n{nomeVul:\"Pera Asiática\",nomeSci:\"Pyrus pyrifolia\"}, \r\n{nomeVul:\"Pera Nashi\",nomeSci:\"Pyrus pyrifolia\"}, \r\n{nomeVul:\"Pereira Europeia\",nomeSci:\"Pyrus communis\"}, \r\n{nomeVul:\"Pereira Japonesa\",nomeSci:\"Pyrus pyrifolia var culta\"}, \r\n{nomeVul:\"Pimenta-do-diabo\",nomeSci:\"Capsicum annuum\"}, \r\n{nomeVul:\"Pimenta Picante\",nomeSci:\"Capsicum annuum\"}, \r\n{nomeVul:\"Pinus\",nomeSci:\"Pinus spp.\"}, \r\n{nomeVul:\"Pitanga Vermelha\",nomeSci:\"Eugenia uniflora\"}, \r\n{nomeVul:\"Plátano\",nomeSci:\"Platanus orientalis\"}, \r\n{nomeVul:\"Plátano Oriental\",nomeSci:\"Platanus orientalis\"}, \r\n{nomeVul:\"Pomelo\",nomeSci:\"Citrus paradisi\"}, \r\n{nomeVul:\"Poncirus\",nomeSci:\"Poncirus spp.\"}, \r\n{nomeVul:\"Pritchardia\",nomeSci:\"Pritchardia vuylstekeana\"}, \r\n{nomeVul:\"Pupunha\",nomeSci:\"Bactris gasipaes\"}, \r\n{nomeVul:\"Pupunha Silvestre\",nomeSci:\"Bactris plumeriana\"}, \r\n{nomeVul:\"Ribes\",nomeSci:\"Ribes sp.\"}, \r\n{nomeVul:\"Rosa\",nomeSci:\"Rosa spp.\"}, \r\n{nomeVul:\"Rustifina Rus\",nomeSci:\"Rhus typhina\"}, \r\n{nomeVul:\"Salgueiro Branco\",nomeSci:\"Salix alba\"}, \r\n{nomeVul:\"Salgueiro Cinza\",nomeSci:\"Salix cinerea\"}, \r\n{nomeVul:\"Salgueiro Dourado\",nomeSci:\"Salix alba var Vitelina\"}, \r\n{nomeVul:\"Salgueiro-folha-de-pêssego\",nomeSci:\"Salix amygdaloides\"}, \r\n{nomeVul:\"Salgueiro Preto\",nomeSci:\"Salix nigricans\"}, \r\n{nomeVul:\"Salgueiro Púrpura\",nomeSci:\"Salix purpurea\"}, \r\n{nomeVul:\"Salgueiro-taco-de-críquete\",nomeSci:\"Salix alba L. Coerulea\"}, \r\n{nomeVul:\"Salgueiro Velho Mundo\",nomeSci:\"Salix amygdalina\"}, \r\n{nomeVul:\"Salix\",nomeSci:\"Salix spp.\"}, \r\n{nomeVul:\"Sanguinho\",nomeSci:\"Frangula almus\"}, \r\n{nomeVul:\"Sapoti\",nomeSci:\"Manilkara zapota\"}, \r\n{nomeVul:\"Seringueira\",nomeSci:\"Hevea brasiliensis\"}, \r\n{nomeVul:\"Sete Copas\",nomeSci:\"Terminalia catappa\"}, \r\n{nomeVul:\"Sófora\",nomeSci:\"Sophora microphylla\"}, \r\n{nomeVul:\"Sorgo\",nomeSci:\"Sorghum bicolor\"}, \r\n{nomeVul:\"Sorva\",nomeSci:\"Sorbus sp.\"}, \r\n{nomeVul:\"Sorva (S. domestica)\",nomeSci:\"Sorbus domestica\"}, \r\n{nomeVul:\"Strelitziaceae (espécies desta família)\",nomeSci:\"Strelitziaceae (espécies desta família)\"}, \r\n{nomeVul:\"Sumac Staghorn\",nomeSci:\"Rhus typhina\"}, \r\n{nomeVul:\"Tamareira\",nomeSci:\"Phoenix dactylifera\"}, \r\n{nomeVul:\"Tamareira-das-canárias\",nomeSci:\"Phoenix canariensis\"}, \r\n{nomeVul:\"Tamareira-do-Senegal\",nomeSci:\"Phoenix reclinata\"}, \r\n{nomeVul:\"Tangerina\",nomeSci:\"Citrus reticulata\"}, \r\n{nomeVul:\"Taperebá\",nomeSci:\"Spondias lutea\"}, \r\n{nomeVul:\"Teca\",nomeSci:\"Tectona grandis\"}, \r\n{nomeVul:\"Teja\",nomeSci:\"Tilia cordata\"}, \r\n{nomeVul:\"Tejo\",nomeSci:\"Tilia cordata\"}, \r\n{nomeVul:\"Tella\",nomeSci:\"Tilia cordata\"}, \r\n{nomeVul:\"Texa\",nomeSci:\"Tilia cordata\"}, \r\n{nomeVul:\"Tilha\",nomeSci:\"Tilia cordata\"}, \r\n{nomeVul:\"Tília\",nomeSci:\"Tilia sp.\"}, \r\n{nomeVul:\"Tillera\",nomeSci:\"Tilia cordata\"}, \r\n{nomeVul:\"Tilo\",nomeSci:\"Tilia americana\"}, \r\n{nomeVul:\"Tomate\",nomeSci:\"Licopersicum esculentum\"}, \r\n{nomeVul:\"Toranja\",nomeSci:\"Citrus paradisi\"}, \r\n{nomeVul:\"Tramazeira\",nomeSci:\"Sorbus aucuparia\"}, \r\n{nomeVul:\"Tulipeiro\",nomeSci:\"Liriodendron tulipifera\"}, \r\n{nomeVul:\"Tupelo\",nomeSci:\"Nyssa sylvatica\"}, \r\n{nomeVul:\"Ulmeiro\",nomeSci:\"Ulmus sp.\"}, \r\n{nomeVul:\"Unha-de-gato\",nomeSci:\"Acacia sp.\"}, \r\n{nomeVul:\"Videira e seus híbridos\",nomeSci:\"Vitis spp. e seus híbridos\"}, \r\n{nomeVul:\"Vimeiro Púrpura\",nomeSci:\"Salix purpurea\"}, \r\n{nomeVul:\"Viola\",nomeSci:\"Viola sp.\"}, \r\n{nomeVul:\"Zingiberaceae (espécies desta família)\",nomeSci:\"Zingiberaceae (espécies desta família)\"} \r\n]; \r\n\r\ninterface exig {\r\n  desc: string;\r\n  hosp: string[];\r\n  part: string[];\r\n  orig: string[];\r\n  dest: string[];\r\n  prag: string;\r\n  pragc: string;\r\n  exig: string[];\r\n  proib: boolean;\r\n  leg: string;\r\n  link: string;\r\n}\r\n\r\ninterface hospedeiro {\r\n  nomeVul: string;\r\n  nomeSci: string;\r\n}\r\n\r\n\r\nexport {db, hospedeiros, hospedeiro, exig}\n\n\n/** WEBPACK FOOTER **\n ** ./src/db.ts\n **/","import * as React from 'react';\r\n\r\n\r\nvar Mapa = ({}) => <div class=\"center\"><img src=\"moko_sigatoka_s.png\" width=\"60%\"/></div>\r\n\r\n\r\nexport default Mapa;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mapa.tsx\n **/","import { observable, computed } from 'mobx';\r\nimport './ArrayPlus'\r\nimport {db, hospedeiros, exig} from './db'\r\n\r\ninterface estados {\r\n  estado: string;\r\n  UF: string;\r\n}\r\n\r\n\r\ninterface dados {\r\n  hospSci: string;\r\n  hospVul: string;\r\n  prod: string;\r\n  orig: string;\r\n  dest: string\r\n}\r\n\r\nclass Store {\r\n  db = db;\r\n  hospedeiros = hospedeiros;\r\n  listaNomesSci = hospedeiros.unique('nomeSci')\r\n  \r\n  @observable dados:dados = {\r\n    hospSci: null,\r\n    hospVul: null,\r\n    prod: null,\r\n    orig: null,\r\n    dest: null\r\n  }\r\n  \r\n  @computed get origem() { return this.estados.filter((estado)=> estado.UF !== this.dados.dest )};\r\n  \r\n  @computed get destino() { return this.estados.filter((estado)=> estado.UF !== this.dados.orig )}; \r\n  \r\n  @computed get partes() {\r\n    return db\r\n      .filter((exig:exig) => exig.hosp.includes(this.dados.hospSci))\r\n      .by('part')\r\n      .flatten()\r\n      .unique();\r\n  }\r\n  \r\n  @computed get gender():string { return this.dados.hospSci.split(' ')[0] }\r\n  \r\n  @computed get result():exig[] {return db.filter((exig:exig) => {return (\r\n        (\r\n          exig.hosp.includes(this.dados.hospSci) ||\r\n          exig.hosp.includes(this.gender + ' sp.') ||\r\n          exig.hosp.includes(this.gender + ' spp.')\r\n        ) &&\r\n      exig.orig.includes(this.dados.orig) &&\r\n      exig.dest.includes(this.dados.dest) &&\r\n      exig.part.includes(this.dados.prod)\r\n      );\r\n    })\r\n  } \r\n  \r\n  \r\n  estados:Array<estados> = [\r\n    {estado: 'Acre', UF: 'AC'},{estado: 'Alagoas', UF: 'AL'},{estado: 'Amazonas', UF: 'AM'},\r\n    {estado: 'Amapá', UF: 'AP'},{estado: 'Bahia', UF: 'BA'},{estado: 'Ceará', UF: 'CE'},\r\n    {estado: 'Distrito Federal', UF: 'DF'},{estado: 'Espirito Santo', UF: 'ES'},{estado: 'Goiás', UF: 'GO'}, \r\n    {estado: 'Maranhão', UF: 'MA'},{estado: 'Minas Gerais', UF: 'MG'},{estado: 'Mato Grosso do Sul', UF: 'MS'},\r\n    {estado: 'Mato Grosso', UF: 'MT'},{estado: 'Pará', UF: 'PA'},{estado: 'Paraíba', UF: 'PB'},\r\n    {estado: 'Pernanbuco', UF: 'PE'},{estado: 'Piauí', UF: 'PI'},{estado: 'Paraná', UF: 'PR'},\r\n    {estado: 'Rio de janeiro', UF: 'RJ'},{estado: 'Rio Grande do Norte', UF: 'RN'},\r\n    {estado: 'Rondônia', UF: 'RO'},{estado: 'Roraima', UF: 'RR'},{estado: 'Rio Grande do Sul', UF: 'RS'},\r\n    {estado: 'Santa Catarina', UF: 'SC'},{estado: 'Sergipe', UF: 'SE'},{estado: 'São Paulo', UF: 'SP'},\r\n    {estado: 'Tocantins', UF: 'TO'}\r\n  ];\r\n}\r\n\r\nexport var store = new Store();\r\nexport default store;\r\n\r\n\r\n/*  var normalize = function(str) {\r\n    return str.toLowerCase().\r\n               replace(/\\\\s/g, \"\").\r\n               replace(/[àáâãäå]/g, \"a\").\r\n               replace(/æ/g, \"ae\").\r\n               replace(/ç/g, \"c\").\r\n               replace(/[èéêë]/g, \"e\").\r\n               replace(/[ìíîï]/g, \"i\").\r\n               replace(/ñ/g, \"n\").\r\n               replace(/[òóôõö]/g, \"o\").\r\n               replace(/œ/g, \"oe\").\r\n               replace(/[ùúûü]/g, \"u\").\r\n               replace(/[ýÿ]/g, \"y\").\r\n               replace(/\\\\W/g, \"\");\r\n  };  \r\n  \r\n  this.normalizedName = function(item) {\r\n    return normalize(item.name);\r\n  };*/\n\n\n/** WEBPACK FOOTER **\n ** ./src/store.ts\n **/","module.exports = ReactDOM;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ReactDOM\"\n ** module id = 7\n ** module chunks = 0\n **/","import * as React from 'react'\r\n\r\nvar item: any = {}\r\n\r\nvar Base = ({db}) => {\r\n  return (\r\n     <div ng-hide=\"cat.base\">\r\n          <br/>\r\n\r\n          <table style={{\"width\": \"100%\"}} class=\"table-grid\">\r\n            <caption>Exigências</caption>\r\n            <thead>\r\n              <tr>\r\n                <th style={{\"width\": \"10%\"}}>Descrição</th>\r\n                <th style={{\"width\": \"20%\"}}>Hospedeiro</th>\r\n                <th style={{\"width\": \"10%\"}}>Partida</th>\r\n                <th style={{\"width\": \"10%\"}}>Origem</th>\r\n                <th style={{\"width\": \"10%\"}}>Destino</th>\r\n                <th style={{\"width\": \"15%\"}}>Legislação</th>\r\n                <th style={{\"width\": \"30%\"}}>Exigências</th>\r\n                <th style={{\"width\": \"5%\"}}>Trânsito Proibido</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {db.map((item, i)=>{ return (\r\n              <tr key={i}>\r\n                <td style={{\"width\": \"10%\"}}><span>{item.desc}</span></td>\r\n                <td style={{\"width\": \"20%\"}} class=\"italic\"><span>{item.hosp}</span></td>\r\n                <td style={{\"width\": \"10%\"}}><span>{item.part}</span></td>\r\n                <td style={{\"width\": \"10%\"}}><span>{item.orig}</span></td>\r\n                <td style={{\"width\": \"10%\"}}><span>{item.dest}</span></td>\r\n                <td style={{\"width\": \"15%\"}}>\r\n                  <a target=\"_blank\" ng-href=\"{item.link}\">{item.leg}</a>\r\n                  <br/>\r\n                  <br/>\r\n                  <span>{item.pragc}</span>\r\n                  <br/>\r\n                  <br/>\r\n                  <span class=\"italic\">{item.prag}</span>\r\n                </td>\r\n                <td style={{\"width\": \"30%\"}}>\r\n                  <div ng-repeat=\"exig in item.exig track by $index\" style={{\"margin\":\"6px\"}}><span>{\"$index+1\"} - {\"exig\"}</span></div>\r\n                </td>\r\n                <td style={{\"width\": \"5%\"}} align=\"center\">\r\n                  <input type=\"checkbox\" onclick=\"return false;\" ng-model=\"item.proib\"/>\r\n                </td>\r\n              </tr>\r\n            )})}\r\n            </tbody>\r\n            <tfoot class=\"form-barra-botoes\">\r\n              <tr>\r\n                <td></td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Base\r\n\r\n//ng-class-even=\"'linha-alternada'\"\n\n\n/** WEBPACK FOOTER **\n ** ./src/basex.tsx\n **/"],"sourceRoot":""}